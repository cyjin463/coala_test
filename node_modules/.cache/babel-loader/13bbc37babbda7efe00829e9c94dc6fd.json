{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/cyj/sun/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _slicedToArray from\"/Users/cyj/sun/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _templateObject,_templateObject2;import React from\"react\";import{useSelector,useDispatch}from\"react-redux\";import{actionCreators as postActions}from\"../redux/modules/post\";import Swal from\"sweetalert2\";import styled from\"styled-components\";import NoticeList from\"../elements/NoticeList\";import TabMenu from\"./TabMenu\";import Loader from\"./Loader\";import{ReactComponent as WriteSvg}from\"../svg/write.svg\";import{useInView}from\"react-intersection-observer\";import{history}from\"../redux/configureStore\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NoticeBoard=function NoticeBoard(){var tab_list=[{title:\"nockeck\",value:\"답변대기\"},{title:\"check\",value:\"답변완료\"}];var dispatch=useDispatch();var user_info=sessionStorage.getItem(\"uid\");var _React$useState=React.useState(tab_list[0].title),_React$useState2=_slicedToArray(_React$useState,2),TabList=_React$useState2[0],setTabList=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),isLoaded=_React$useState4[0],setIsLoaded=_React$useState4[1];var _React$useState5=React.useState(1),_React$useState6=_slicedToArray(_React$useState5,2),pageNum=_React$useState6[0],setPageNum=_React$useState6[1];var _React$useState7=React.useState(1),_React$useState8=_slicedToArray(_React$useState7,2),pageNum1=_React$useState8[0],setPageNum1=_React$useState8[1];var post_list=useSelector(function(state){return state.post.list;});var post_nocheck=useSelector(function(state){return state.post.nockeckList;});var postList=TabList===\"check\"?post_list:post_nocheck;var _useInView=useInView({threshold:0.4}),_useInView2=_slicedToArray(_useInView,2),ref=_useInView2[0],inView=_useInView2[1];React.useEffect(function(){if(TabList===\"check\"){dispatch(postActions.getPostDB(pageNum));}else{dispatch(postActions.getPostNocheckDB(pageNum1));}},[TabList,pageNum,pageNum1]);var getMoreItem=function getMoreItem(){if(TabList===\"check\"){setPageNum(pageNum+1);}else{setPageNum1(pageNum1+1);}};var goWrite=function goWrite(){if(!user_info){Swal.fire(\"\",\"로그인 후 사용할 수 있습니다:)\",\"error\");return;}history.push(\"/create\");};React.useEffect(function(){if(inView){getMoreItem();}},[inView]);return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(SC_NoticeDiv,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uC804\\uCCB4 \\uAC8C\\uC2DC\\uBB3C\"}),/*#__PURE__*/_jsx(TabMenu,{tab_list:tab_list,tab:setTabList}),/*#__PURE__*/_jsx(\"div\",{className:\"list_wrap\",children:postList.map(function(v,idx){var lastEl=idx===postList.length-1;return/*#__PURE__*/_jsx(NoticeList,{list:v,lastEl:lastEl,viewRef:ref},idx);})}),/*#__PURE__*/_jsx(\"div\",{className:\"last\",children:isLoaded&&/*#__PURE__*/_jsx(Loader,{})}),/*#__PURE__*/_jsx(SC_BtnWrap,{children:/*#__PURE__*/_jsxs(\"button\",{onClick:goWrite,children:[/*#__PURE__*/_jsx(WriteSvg,{}),\"\\uAE00\\uC4F0\\uAE30\"]})})]})});};var SC_NoticeDiv=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: calc(100% - 342px - 24px);\\n  background-color: #fff;\\n  border-radius: 8px;\\n\\n  h2 {\\n    padding: 30px 20px;\\n    font-weight: 700;\\n  }\\n  > ul {\\n    margin: 0 24px;\\n  }\\n\"])));var SC_BtnWrap=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin: 32px 24px 48px;\\n  text-align: right;\\n\\n  button {\\n    color: #fff;\\n    padding: 16px 40px;\\n    border-radius: 5px;\\n    background-color: #7966ff;\\n\\n    svg {\\n      vertical-align: middle;\\n      margin-right: 16px;\\n    }\\n  }\\n\"])));export default/*#__PURE__*/React.memo(NoticeBoard);","map":{"version":3,"sources":["/Users/cyj/sun/src/components/NoticeBoard.js"],"names":["React","useSelector","useDispatch","actionCreators","postActions","Swal","styled","NoticeList","TabMenu","Loader","ReactComponent","WriteSvg","useInView","history","NoticeBoard","tab_list","title","value","dispatch","user_info","sessionStorage","getItem","useState","TabList","setTabList","isLoaded","setIsLoaded","pageNum","setPageNum","pageNum1","setPageNum1","post_list","state","post","list","post_nocheck","nockeckList","postList","threshold","ref","inView","useEffect","getPostDB","getPostNocheckDB","getMoreItem","goWrite","fire","push","map","v","idx","lastEl","length","SC_NoticeDiv","div","SC_BtnWrap","memo"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport Swal from \"sweetalert2\";\nimport styled from \"styled-components\";\nimport NoticeList from \"../elements/NoticeList\";\nimport TabMenu from \"./TabMenu\";\nimport Loader from \"./Loader\";\n\nimport { ReactComponent as WriteSvg } from \"../svg/write.svg\";\nimport { useInView } from \"react-intersection-observer\";\nimport { history } from \"../redux/configureStore\";\n\nconst NoticeBoard = () => {\n  const tab_list = [\n    {\n      title: \"nockeck\",\n      value: \"답변대기\",\n    },\n    {\n      title: \"check\",\n      value: \"답변완료\",\n    },\n  ];\n  const dispatch = useDispatch();\n  const user_info = sessionStorage.getItem(\"uid\");\n  const [TabList, setTabList] = React.useState(tab_list[0].title);\n  const [isLoaded, setIsLoaded] = React.useState(false);\n  const [pageNum, setPageNum] = React.useState(1);\n  const [pageNum1, setPageNum1] = React.useState(1);\n  const post_list = useSelector((state) => state.post.list);\n  const post_nocheck = useSelector((state) => state.post.nockeckList);\n  const postList = TabList === \"check\" ? post_list : post_nocheck;\n\n  const [ref, inView] = useInView({\n    threshold: 0.4,\n  });\n\n  React.useEffect(() => {\n    if (TabList === \"check\") {\n      dispatch(postActions.getPostDB(pageNum));\n    } else {\n      dispatch(postActions.getPostNocheckDB(pageNum1));\n    }\n  }, [TabList, pageNum, pageNum1]);\n\n  const getMoreItem = () => {\n    if (TabList === \"check\") {\n      setPageNum(pageNum + 1);\n    } else {\n      setPageNum1(pageNum1 + 1);\n    }\n  };\n\n  const goWrite = () => {\n    if (!user_info) {\n      Swal.fire(\"\", \"로그인 후 사용할 수 있습니다:)\", \"error\");\n      return;\n    }\n    history.push(\"/create\");\n  };\n\n  React.useEffect(() => {\n    if (inView) {\n      getMoreItem();\n    }\n  }, [inView]);\n\n  return (\n    <React.Fragment>\n      <SC_NoticeDiv>\n        <h2>전체 게시물</h2>\n        <TabMenu tab_list={tab_list} tab={setTabList} />\n        <div className='list_wrap'>\n          {postList.map((v, idx) => {\n            const lastEl = idx === postList.length - 1;\n            return (\n              <NoticeList key={idx} list={v} lastEl={lastEl} viewRef={ref} />\n            );\n          })}\n        </div>\n        <div className='last'>{isLoaded && <Loader />}</div>\n        <SC_BtnWrap>\n          <button onClick={goWrite}>\n            <WriteSvg />\n            글쓰기\n          </button>\n        </SC_BtnWrap>\n      </SC_NoticeDiv>\n    </React.Fragment>\n  );\n};\n\nconst SC_NoticeDiv = styled.div`\n  width: calc(100% - 342px - 24px);\n  background-color: #fff;\n  border-radius: 8px;\n\n  h2 {\n    padding: 30px 20px;\n    font-weight: 700;\n  }\n  > ul {\n    margin: 0 24px;\n  }\n`;\n\nconst SC_BtnWrap = styled.div`\n  margin: 32px 24px 48px;\n  text-align: right;\n\n  button {\n    color: #fff;\n    padding: 16px 40px;\n    border-radius: 5px;\n    background-color: #7966ff;\n\n    svg {\n      vertical-align: middle;\n      margin-right: 16px;\n    }\n  }\n`;\nexport default React.memo(NoticeBoard);\n"]},"metadata":{},"sourceType":"module"}