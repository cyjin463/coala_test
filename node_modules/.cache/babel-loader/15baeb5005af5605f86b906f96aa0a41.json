{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/cyj/sun/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _toConsumableArray from\"/Users/cyj/sun/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _defineProperty from\"/Users/cyj/sun/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/cyj/sun/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/cyj/sun/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React from\"react\";import Stomp,{over}from\"stompjs\";import SockJs from\"sockjs-client\";import Profile from\"../elements/Profile\";import styled from\"styled-components\";import{ReactComponent as SendSvg}from\"../svg/send.svg\";import{apiUrl}from\"../elements/testApiUrl\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var stompClient=null;var Chat=function Chat(){var token={Authorization:sessionStorage.getItem(\"token\")?sessionStorage.getItem(\"token\"):\"Authorization\"};var username=sessionStorage.getItem(\"nickname\");var uid=sessionStorage.getItem(\"uid\");var _React$useState=React.useState(new Map()),_React$useState2=_slicedToArray(_React$useState,2),welcome=_React$useState2[0],setWelcome=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),publicChats=_React$useState4[0],setPublicChats=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),connected=_React$useState6[0],setConnected=_React$useState6[1];var _React$useState7=React.useState(\"CHATROOM\"),_React$useState8=_slicedToArray(_React$useState7,2),tab=_React$useState8[0],setTab=_React$useState8[1];var _React$useState9=React.useState(0),_React$useState10=_slicedToArray(_React$useState9,2),user=_React$useState10[0],setUser=_React$useState10[1];var _React$useState11=React.useState(\"\"),_React$useState12=_slicedToArray(_React$useState11,2),time=_React$useState12[0],setTime=_React$useState12[1];var _React$useState13=React.useState({username:\"\",message:\"\",opposingUserName:\"\"}),_React$useState14=_slicedToArray(_React$useState13,2),userData=_React$useState14[0],setUserData=_React$useState14[1];React.useEffect(function(){stompConnect();return function(){stompDisConnect();};},[]);var stompDisConnect=function stompDisConnect(){try{var user_join={status:\"OUT\"};stompClient.send(\"/app/message\",{},JSON.stringify(user_join));stompClient.disconnect(function(){stompClient.unsubscribe(\"/topic/greetings\");},token);}catch(err){}};var handleValue=function handleValue(e){var _e$target=e.target,value=_e$target.value,name=_e$target.name;setUserData(_objectSpread(_objectSpread({},userData),{},_defineProperty({},name,value)));};var stompConnect=function stompConnect(){var socket=new SockJs(\"\".concat(apiUrl,\"/ws\"));stompClient=Stomp.over(socket);stompClient.connect({},onConnected,onError);};var onConnected=function onConnected(){try{var _username=sessionStorage.getItem(\"nickname\");var crareer=sessionStorage.getItem(\"career\");var userImage=sessionStorage.getItem(\"userImage\");var user_join={status:\"JOIN\",uid:uid,pid:0};setConnected(true);setUserData(_objectSpread(_objectSpread({},userData),{},{crareer:crareer,status:\"JOIN\"}));stompClient.send(\"/app/hello\",{},JSON.stringify({username:_username}));stompClient.send(\"/app/message\",token,JSON.stringify(user_join));stompClient.subscribe(\"/topic/greetings\",onPublicMessageReceived,token);}catch(err){console.log(err);}};var sendPublicMessage=function sendPublicMessage(){var username=sessionStorage.getItem(\"nickname\");if(stompClient){if(!userData.message){alert(\"내용을 입력해주세요!\");}else{var chatMessage={senderName:username,message:userData.message,status:\"MESSAGE\",uid:uid,pid:0};stompClient.send(\"/app/message\",token,JSON.stringify(chatMessage));setUserData(_objectSpread(_objectSpread({},userData),{},{message:\"\"}));}}};//subscribe의 함수\nvar onPublicMessageReceived=function onPublicMessageReceived(payload){var payloadData=JSON.parse(payload.body);switch(payloadData.status){case\"JOIN\":if(!welcome.get(payloadData.senderName)){welcome.set(payloadData.message,[]);setWelcome(new Map(welcome));setUser(payloadData.userCount);}break;case\"OUT\":if(!welcome.get(payloadData.senderName)){console.log(payloadData);welcome.set(payloadData.message,[]);setWelcome(new Map(welcome));setUser(payloadData.userCount);}break;case\"MESSAGE\":var time1=payloadData.createdAt.split(\"T\")[1];//년월 제거\nvar time2=time1.split(\".\")[0];// 소수점 제거\nvar time3=time2.split(\":\")[0]+\":\"+time2.split(\":\")[1];// 시간, 분\nsetTime(time3);publicChats.push(payloadData);setPublicChats(_toConsumableArray(publicChats));setUser(payloadData.userCount);break;}};var onError=function onError(err){console.log(err);console.log(\"plz\");};return/*#__PURE__*/_jsxs(ChatDiv,{children:[/*#__PURE__*/_jsx(ChatTab,{children:/*#__PURE__*/_jsxs(\"li\",{onClick:function onClick(){setTab(\"CHATROOM\");},children:[\"\\uCC44\\uD305 \",user]})}),/*#__PURE__*/_jsx(ChatList,{children:/*#__PURE__*/_jsxs(\"ul\",{children:[_toConsumableArray(welcome.keys()).map(function(name,index){return/*#__PURE__*/_jsx(\"li\",{className:\"welcome\",children:name},index);}),publicChats.map(function(chat,index){return/*#__PURE__*/_jsxs(\"li\",{className:\" \".concat(chat.senderName===username?\"self\":\"user\"),children:[chat.senderName!==username&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Profile,{size:\"32\",imgUrl:userData.userImage}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:chat.senderName}),/*#__PURE__*/_jsx(\"i\",{children:userData.crareer})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"message-data\",children:chat.message}),time.split[0]>12?/*#__PURE__*/_jsxs(\"em\",{children:[\" \\uC624\\uD6C4 \",time]}):/*#__PURE__*/_jsxs(\"em\",{children:[\" \\uC624\\uC804 \",time,\" \"]})]},index);})]})}),/*#__PURE__*/_jsx(ChatInput,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"message\",value:userData.message,placeholder:\"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694 :)\",onChange:handleValue}),/*#__PURE__*/_jsx(\"button\",{onClick:sendPublicMessage,children:/*#__PURE__*/_jsx(SendSvg,{})})]})})]});};var ChatDiv=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  height: calc(100vh - 102px);\\n  background-color: #f9f8ff;\\n  border-radius: 8px;\\n  overflow: hidden;\\n\"])));var ChatTab=styled.ul(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex: none;\\n  overflow: auto;\\n\\n  li {\\n    padding: 0 22px;\\n    margin: 0 10px;\\n    font-size: 18px;\\n    font-weight: 700;\\n    line-height: 58px;\\n    color: #5e45f2;\\n    border-bottom: solid 3px #5e45f2;\\n  }\\n\"])));var ChatList=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  flex: auto;\\n  padding: 0 10px;\\n  overflow: auto;\\n\\n  ul {\\n    padding-top: 30px;\\n    overflow: hidden;\\n  }\\n\\n  li {\\n    width: 286px;\\n\\n    p {\\n      padding: 8px;\\n      word-break: break-all;\\n      border-radius: 8px;\\n    }\\n\\n    &.welcome {\\n      color: #5e45f2;\\n    }\\n\\n    &.user {\\n      position: relative;\\n      padding-left: 36px;\\n      padding-right: 10px;\\n\\n      strong {\\n        font-size: 14px;\\n        color: #5e45f2;\\n      }\\n\\n      p {\\n        margin-top: 8px;\\n        color: #333;\\n        background-color: #fff;\\n        box-shadow: 0 4px 14px 0 rgba(65, 0, 131, 0.06);\\n      }\\n\\n      em {\\n        display: block;\\n        text-align: right;\\n      }\\n    }\\n\\n    &.self {\\n      margin: 12px 0;\\n      margin-left: auto;\\n\\n      p {\\n        color: #fff;\\n        background-color: #7966ff;\\n      }\\n    }\\n  }\\n\\n  span {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    box-shadow: 0 0 4px 0 rgba(121, 102, 255, 0.2);\\n  }\\n\\n  i {\\n    color: #797979;\\n    font-size: 12px;\\n    font-style: normal;\\n\\n    &:before {\\n      --dat-size: 2px;\\n      content: \\\".\\\";\\n      margin: 0 6px;\\n      font-size: 16px;\\n      vertical-align: super;\\n    }\\n  }\\n\\n  em {\\n    display: block;\\n    margin-top: 10px;\\n    color: #797979;\\n    font-size: 12px;\\n    font-style: normal;\\n  }\\n\"])));var ChatInput=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  padding: 24px 16px;\\n  background-color: #f9f8ff;\\n  box-shadow: 0 -4px 10px 0 rgba(133, 47, 243, 0.05);\\n\\n  > div {\\n    display: flex;\\n    align-items: center;\\n    height: 42px;\\n    padding: 8px 14px;\\n    overflow: hidden;\\n    border-radius: 10px;\\n    box-shadow: inset 0 2px 6px 0 rgba(60, 4, 105, 0.08);\\n    background-color: #fff;\\n  }\\n\\n  input {\\n    flex: auto;\\n    padding: 0;\\n    background-color: transparent;\\n  }\\n\\n  button {\\n    flex: none;\\n    svg {\\n      vertical-align: middle;\\n    }\\n  }\\n\"])));export default Chat;","map":{"version":3,"sources":["/Users/cyj/sun/src/components/Chat.js"],"names":["React","Stomp","over","SockJs","Profile","styled","ReactComponent","SendSvg","apiUrl","stompClient","Chat","token","Authorization","sessionStorage","getItem","username","uid","useState","Map","welcome","setWelcome","publicChats","setPublicChats","connected","setConnected","tab","setTab","user","setUser","time","setTime","message","opposingUserName","userData","setUserData","useEffect","stompConnect","stompDisConnect","user_join","status","send","JSON","stringify","disconnect","unsubscribe","err","handleValue","e","target","value","name","socket","connect","onConnected","onError","crareer","userImage","pid","subscribe","onPublicMessageReceived","console","log","sendPublicMessage","alert","chatMessage","senderName","payload","payloadData","parse","body","get","set","userCount","time1","createdAt","split","time2","time3","push","keys","map","index","chat","ChatDiv","div","ChatTab","ul","ChatList","ChatInput"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Stomp, { over } from \"stompjs\";\nimport SockJs from \"sockjs-client\";\nimport Profile from \"../elements/Profile\";\nimport styled from \"styled-components\";\nimport { ReactComponent as SendSvg } from \"../svg/send.svg\";\n\nimport { apiUrl } from \"../elements/testApiUrl\";\n\nlet stompClient = null;\nconst Chat = () => {\n  const token = {\n    Authorization: sessionStorage.getItem(\"token\")\n      ? sessionStorage.getItem(\"token\")\n      : \"Authorization\",\n  };\n  const username = sessionStorage.getItem(\"nickname\");\n\n  const uid = sessionStorage.getItem(\"uid\");\n  const [welcome, setWelcome] = React.useState(new Map());\n  const [publicChats, setPublicChats] = React.useState([]);\n  const [connected, setConnected] = React.useState(false);\n  const [tab, setTab] = React.useState(\"CHATROOM\");\n  const [user, setUser] = React.useState(0);\n  const [time, setTime] = React.useState(\"\");\n  const [userData, setUserData] = React.useState({\n    username: \"\",\n    message: \"\",\n    opposingUserName: \"\",\n  });\n\n  React.useEffect(() => {\n    stompConnect();\n\n    return () => {\n      stompDisConnect();\n    };\n  }, []);\n\n  const stompDisConnect = () => {\n    try {\n      const user_join = { status: \"OUT\" };\n      stompClient.send(\"/app/message\", {}, JSON.stringify(user_join));\n\n      stompClient.disconnect(() => {\n        stompClient.unsubscribe(\"/topic/greetings\");\n      }, token);\n    } catch (err) {}\n  };\n\n  const handleValue = (e) => {\n    const { value, name } = e.target;\n    setUserData({ ...userData, [name]: value });\n  };\n  const stompConnect = () => {\n    let socket = new SockJs(`${apiUrl}/ws`);\n    stompClient = Stomp.over(socket);\n\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const onConnected = () => {\n    try {\n      const username = sessionStorage.getItem(\"nickname\");\n      const crareer = sessionStorage.getItem(\"career\");\n      const userImage = sessionStorage.getItem(\"userImage\");\n      const user_join = { status: \"JOIN\", uid, pid: 0 };\n\n      setConnected(true);\n      setUserData({\n        ...userData,\n        crareer,\n        status: \"JOIN\",\n      });\n\n      stompClient.send(\"/app/hello\", {}, JSON.stringify({ username }));\n      stompClient.send(\"/app/message\", token, JSON.stringify(user_join));\n      stompClient.subscribe(\"/topic/greetings\", onPublicMessageReceived, token);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const sendPublicMessage = () => {\n    const username = sessionStorage.getItem(\"nickname\");\n\n    if (stompClient) {\n      if (!userData.message) {\n        alert(\"내용을 입력해주세요!\");\n      } else {\n        let chatMessage = {\n          senderName: username,\n          message: userData.message,\n          status: \"MESSAGE\",\n          uid,\n          pid: 0,\n        };\n\n        stompClient.send(\"/app/message\", token, JSON.stringify(chatMessage));\n        setUserData({ ...userData, message: \"\" });\n      }\n    }\n  };\n\n  //subscribe의 함수\n  const onPublicMessageReceived = (payload) => {\n    let payloadData = JSON.parse(payload.body);\n\n    switch (payloadData.status) {\n      case \"JOIN\":\n        if (!welcome.get(payloadData.senderName)) {\n          welcome.set(payloadData.message, []);\n          setWelcome(new Map(welcome));\n          setUser(payloadData.userCount);\n        }\n        break;\n      case \"OUT\":\n        if (!welcome.get(payloadData.senderName)) {\n          console.log(payloadData);\n          welcome.set(payloadData.message, []);\n          setWelcome(new Map(welcome));\n          setUser(payloadData.userCount);\n        }\n        break;\n      case \"MESSAGE\":\n        const time1 = payloadData.createdAt.split(\"T\")[1]; //년월 제거\n        const time2 = time1.split(\".\")[0]; // 소수점 제거\n        const time3 = time2.split(\":\")[0] + \":\" + time2.split(\":\")[1]; // 시간, 분\n        setTime(time3);\n        publicChats.push(payloadData);\n        setPublicChats([...publicChats]);\n        setUser(payloadData.userCount);\n        break;\n    }\n  };\n\n  const onError = (err) => {\n    console.log(err);\n    console.log(\"plz\");\n  };\n\n  return (\n    <ChatDiv>\n      <ChatTab>\n        <li\n          onClick={() => {\n            setTab(\"CHATROOM\");\n          }}>\n          채팅 {user}\n        </li>\n      </ChatTab>\n      <ChatList>\n        <ul>\n          {[...welcome.keys()].map((name, index) => {\n            return (\n              <li className='welcome' key={index}>\n                {name}\n              </li>\n            );\n          })}\n\n          {publicChats.map((chat, index) => (\n            <li\n              className={` ${chat.senderName === username ? \"self\" : \"user\"}`}\n              key={index}>\n              {chat.senderName !== username && (\n                <>\n                  <Profile size='32' imgUrl={userData.userImage} />\n                  <div>\n                    <strong>{chat.senderName}</strong>\n                    <i>{userData.crareer}</i>\n                  </div>\n                </>\n              )}\n              <p className='message-data'>{chat.message}</p>\n              {time.split[0] > 12 ? (\n                <em> 오후 {time}</em>\n              ) : (\n                <em> 오전 {time} </em>\n              )}\n            </li>\n          ))}\n        </ul>\n      </ChatList>\n      <ChatInput>\n        <div>\n          <input\n            type='text'\n            name='message'\n            value={userData.message}\n            placeholder='댓글을 입력해주세요 :)'\n            onChange={handleValue}\n          />\n          <button onClick={sendPublicMessage}>\n            <SendSvg />\n          </button>\n        </div>\n      </ChatInput>\n    </ChatDiv>\n  );\n};\n\nconst ChatDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 102px);\n  background-color: #f9f8ff;\n  border-radius: 8px;\n  overflow: hidden;\n`;\n\nconst ChatTab = styled.ul`\n  display: flex;\n  flex: none;\n  overflow: auto;\n\n  li {\n    padding: 0 22px;\n    margin: 0 10px;\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 58px;\n    color: #5e45f2;\n    border-bottom: solid 3px #5e45f2;\n  }\n`;\n\nconst ChatList = styled.div`\n  flex: auto;\n  padding: 0 10px;\n  overflow: auto;\n\n  ul {\n    padding-top: 30px;\n    overflow: hidden;\n  }\n\n  li {\n    width: 286px;\n\n    p {\n      padding: 8px;\n      word-break: break-all;\n      border-radius: 8px;\n    }\n\n    &.welcome {\n      color: #5e45f2;\n    }\n\n    &.user {\n      position: relative;\n      padding-left: 36px;\n      padding-right: 10px;\n\n      strong {\n        font-size: 14px;\n        color: #5e45f2;\n      }\n\n      p {\n        margin-top: 8px;\n        color: #333;\n        background-color: #fff;\n        box-shadow: 0 4px 14px 0 rgba(65, 0, 131, 0.06);\n      }\n\n      em {\n        display: block;\n        text-align: right;\n      }\n    }\n\n    &.self {\n      margin: 12px 0;\n      margin-left: auto;\n\n      p {\n        color: #fff;\n        background-color: #7966ff;\n      }\n    }\n  }\n\n  span {\n    position: absolute;\n    top: 0;\n    left: 0;\n    box-shadow: 0 0 4px 0 rgba(121, 102, 255, 0.2);\n  }\n\n  i {\n    color: #797979;\n    font-size: 12px;\n    font-style: normal;\n\n    &:before {\n      --dat-size: 2px;\n      content: \".\";\n      margin: 0 6px;\n      font-size: 16px;\n      vertical-align: super;\n    }\n  }\n\n  em {\n    display: block;\n    margin-top: 10px;\n    color: #797979;\n    font-size: 12px;\n    font-style: normal;\n  }\n`;\n\nconst ChatInput = styled.div`\n  padding: 24px 16px;\n  background-color: #f9f8ff;\n  box-shadow: 0 -4px 10px 0 rgba(133, 47, 243, 0.05);\n\n  > div {\n    display: flex;\n    align-items: center;\n    height: 42px;\n    padding: 8px 14px;\n    overflow: hidden;\n    border-radius: 10px;\n    box-shadow: inset 0 2px 6px 0 rgba(60, 4, 105, 0.08);\n    background-color: #fff;\n  }\n\n  input {\n    flex: auto;\n    padding: 0;\n    background-color: transparent;\n  }\n\n  button {\n    flex: none;\n    svg {\n      vertical-align: middle;\n    }\n  }\n`;\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}