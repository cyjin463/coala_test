{"ast":null,"code":"var _jsxFileName = \"/Users/cyj/sun/src/components/NoticeBoard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport Swal from \"sweetalert2\";\nimport styled from \"styled-components\";\nimport NoticeList from \"../elements/NoticeList\";\nimport TabMenu from \"./TabMenu\";\nimport Loader from \"./Loader\";\nimport { ReactComponent as WriteSvg } from \"../svg/write.svg\";\nimport { useInView } from \"react-intersection-observer\";\nimport { history } from \"../redux/configureStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoticeBoard = () => {\n  _s();\n\n  const tab_list = [{\n    title: \"nockeck\",\n    value: \"답변대기\"\n  }, {\n    title: \"check\",\n    value: \"답변완료\"\n  }];\n  const dispatch = useDispatch();\n  const user_info = sessionStorage.getItem(\"uid\");\n  const [TabList, setTabList] = React.useState(tab_list[0].title);\n  const [isLoaded, setIsLoaded] = React.useState(false);\n  const [pageNum, setPageNum] = React.useState(1);\n  const [pageNum1, setPageNum1] = React.useState(1);\n  const post_list = useSelector(state => state.post.list);\n  const post_nocheck = useSelector(state => state.post.nockeckList);\n  const postList = TabList === \"check\" ? post_list : post_nocheck;\n  const [ref, inView] = useInView({\n    threshold: 0.4\n  });\n  React.useEffect(() => {\n    if (TabList === \"check\") {\n      dispatch(postActions.getPostDB(pageNum));\n    } else {\n      dispatch(postActions.getPostNocheckDB(pageNum1));\n    }\n  }, [TabList, pageNum, pageNum1]);\n\n  const getMoreItem = () => {\n    if (TabList === \"check\") {\n      setPageNum(pageNum + 1);\n    } else {\n      setPageNum1(pageNum1 + 1);\n    }\n  };\n\n  const goWrite = () => {\n    if (!user_info) {\n      Swal.fire(\"\", \"로그인 후 사용할 수 있습니다:)\", \"error\");\n      return;\n    }\n\n    history.push(\"/create\");\n  };\n\n  React.useEffect(() => {\n    if (inView) {\n      getMoreItem();\n    }\n  }, [inView]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SC_NoticeDiv, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC804\\uCCB4 \\uAC8C\\uC2DC\\uBB3C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabMenu, {\n        tab_list: tab_list,\n        tab: setTabList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list_wrap\",\n        children: postList.map((v, idx) => {\n          const lastEl = idx === postList.length - 1;\n          return /*#__PURE__*/_jsxDEV(NoticeList, {\n            list: v,\n            lastEl: lastEl,\n            viewRef: ref\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"last\",\n        children: isLoaded && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SC_BtnWrap, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goWrite,\n          children: [/*#__PURE__*/_jsxDEV(WriteSvg, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), \"\\uAE00\\uC4F0\\uAE30\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NoticeBoard, \"5DO93mpibHuCE7GPrU30IrqakZI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useInView];\n});\n\n_c = NoticeBoard;\nconst SC_NoticeDiv = styled.div`\n  width: calc(100% - 342px - 24px);\n  background-color: #fff;\n  border-radius: 8px;\n\n  h2 {\n    padding: 30px 20px;\n    font-weight: 700;\n  }\n  > ul {\n    margin: 0 24px;\n  }\n`;\n_c2 = SC_NoticeDiv;\nconst SC_BtnWrap = styled.div`\n  margin: 32px 24px 48px;\n  text-align: right;\n\n  button {\n    color: #fff;\n    padding: 16px 40px;\n    border-radius: 5px;\n    background-color: #7966ff;\n\n    svg {\n      vertical-align: middle;\n      margin-right: 16px;\n    }\n  }\n`;\n_c3 = SC_BtnWrap;\nexport default _c4 = /*#__PURE__*/React.memo(NoticeBoard);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"NoticeBoard\");\n$RefreshReg$(_c2, \"SC_NoticeDiv\");\n$RefreshReg$(_c3, \"SC_BtnWrap\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["/Users/cyj/sun/src/components/NoticeBoard.js"],"names":["React","useSelector","useDispatch","actionCreators","postActions","Swal","styled","NoticeList","TabMenu","Loader","ReactComponent","WriteSvg","useInView","history","NoticeBoard","tab_list","title","value","dispatch","user_info","sessionStorage","getItem","TabList","setTabList","useState","isLoaded","setIsLoaded","pageNum","setPageNum","pageNum1","setPageNum1","post_list","state","post","list","post_nocheck","nockeckList","postList","ref","inView","threshold","useEffect","getPostDB","getPostNocheckDB","getMoreItem","goWrite","fire","push","map","v","idx","lastEl","length","SC_NoticeDiv","div","SC_BtnWrap","memo"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport Swal from \"sweetalert2\";\nimport styled from \"styled-components\";\nimport NoticeList from \"../elements/NoticeList\";\nimport TabMenu from \"./TabMenu\";\nimport Loader from \"./Loader\";\n\nimport { ReactComponent as WriteSvg } from \"../svg/write.svg\";\nimport { useInView } from \"react-intersection-observer\";\nimport { history } from \"../redux/configureStore\";\n\nconst NoticeBoard = () => {\n  const tab_list = [\n    {\n      title: \"nockeck\",\n      value: \"답변대기\",\n    },\n    {\n      title: \"check\",\n      value: \"답변완료\",\n    },\n  ];\n  const dispatch = useDispatch();\n  const user_info = sessionStorage.getItem(\"uid\");\n  const [TabList, setTabList] = React.useState(tab_list[0].title);\n  const [isLoaded, setIsLoaded] = React.useState(false);\n  const [pageNum, setPageNum] = React.useState(1);\n  const [pageNum1, setPageNum1] = React.useState(1);\n  const post_list = useSelector((state) => state.post.list);\n  const post_nocheck = useSelector((state) => state.post.nockeckList);\n  const postList = TabList === \"check\" ? post_list : post_nocheck;\n\n  const [ref, inView] = useInView({\n    threshold: 0.4,\n  });\n\n  React.useEffect(() => {\n    if (TabList === \"check\") {\n      dispatch(postActions.getPostDB(pageNum));\n    } else {\n      dispatch(postActions.getPostNocheckDB(pageNum1));\n    }\n  }, [TabList, pageNum, pageNum1]);\n\n  const getMoreItem = () => {\n    if (TabList === \"check\") {\n      setPageNum(pageNum + 1);\n    } else {\n      setPageNum1(pageNum1 + 1);\n    }\n  };\n\n  const goWrite = () => {\n    if (!user_info) {\n      Swal.fire(\"\", \"로그인 후 사용할 수 있습니다:)\", \"error\");\n      return;\n    }\n    history.push(\"/create\");\n  };\n\n  React.useEffect(() => {\n    if (inView) {\n      getMoreItem();\n    }\n  }, [inView]);\n\n  return (\n    <React.Fragment>\n      <SC_NoticeDiv>\n        <h2>전체 게시물</h2>\n        <TabMenu tab_list={tab_list} tab={setTabList} />\n        <div className='list_wrap'>\n          {postList.map((v, idx) => {\n            const lastEl = idx === postList.length - 1;\n            return (\n              <NoticeList key={idx} list={v} lastEl={lastEl} viewRef={ref} />\n            );\n          })}\n        </div>\n        <div className='last'>{isLoaded && <Loader />}</div>\n        <SC_BtnWrap>\n          <button onClick={goWrite}>\n            <WriteSvg />\n            글쓰기\n          </button>\n        </SC_BtnWrap>\n      </SC_NoticeDiv>\n    </React.Fragment>\n  );\n};\n\nconst SC_NoticeDiv = styled.div`\n  width: calc(100% - 342px - 24px);\n  background-color: #fff;\n  border-radius: 8px;\n\n  h2 {\n    padding: 30px 20px;\n    font-weight: 700;\n  }\n  > ul {\n    margin: 0 24px;\n  }\n`;\n\nconst SC_BtnWrap = styled.div`\n  margin: 32px 24px 48px;\n  text-align: right;\n\n  button {\n    color: #fff;\n    padding: 16px 40px;\n    border-radius: 5px;\n    background-color: #7966ff;\n\n    svg {\n      vertical-align: middle;\n      margin-right: 16px;\n    }\n  }\n`;\nexport default React.memo(NoticeBoard);\n"]},"metadata":{},"sourceType":"module"}