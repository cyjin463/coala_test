{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/cyj/sun/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _toConsumableArray from\"/Users/cyj/sun/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _defineProperty from\"/Users/cyj/sun/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/cyj/sun/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/cyj/sun/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React from\"react\";import Stomp,{over}from\"stompjs\";import SockJs from\"sockjs-client\";import Profile from\"../elements/Profile\";import styled from\"styled-components\";import Swal from\"sweetalert2\";import{apiUrl}from\"../elements/testApiUrl\";import{ReactComponent as SendSvg}from\"../svg/send.svg\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var stompClient=null;var Postchat=function Postchat(_ref){var pid=_ref.pid;var token={Authorization:sessionStorage.getItem(\"token\")};var is_login=sessionStorage.getItem(\"is_Login\");var username=sessionStorage.getItem(\"nickname\");var crareer=sessionStorage.getItem(\"career\");var userImage=sessionStorage.getItem(\"userImage\");var uid=sessionStorage.getItem(\"uid\");var _React$useState=React.useState(new Map()),_React$useState2=_slicedToArray(_React$useState,2),welcome=_React$useState2[0],setWelcome=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),publicChats=_React$useState4[0],setPublicChats=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),connected=_React$useState6[0],setConnected=_React$useState6[1];var _React$useState7=React.useState(\"CHATROOM\"),_React$useState8=_slicedToArray(_React$useState7,2),tab=_React$useState8[0],setTab=_React$useState8[1];var _React$useState9=React.useState(\"\"),_React$useState10=_slicedToArray(_React$useState9,2),time=_React$useState10[0],setTime=_React$useState10[1];var _React$useState11=React.useState(0),_React$useState12=_slicedToArray(_React$useState11,2),user=_React$useState12[0],setUser=_React$useState12[1];var _React$useState13=React.useState({username:\"\",message:\"\",opposingUserName:\"\"}),_React$useState14=_slicedToArray(_React$useState13,2),userData=_React$useState14[0],setUserData=_React$useState14[1];React.useEffect(function(){stompConnect();return function(){stompDisConnect();};},[]);var onKeyPress=function onKeyPress(e){if(e.key==\"Enter\"){sendPublicMessage();}};var stompDisConnect=function stompDisConnect(){try{var user_join={status:\"OUT\"};stompClient.send(\"/app/message1\",{},JSON.stringify(user_join));stompClient.disconnect(function(){stompClient.unsubscribe(\"/topic/greetings/\".concat(pid));},token);}catch(err){}};var handleValue=function handleValue(e){var _e$target=e.target,value=_e$target.value,name=_e$target.name;setUserData(_objectSpread(_objectSpread({},userData),{},_defineProperty({},name,value)));};var stompConnect=function stompConnect(){var socket=new SockJs(\"\".concat(apiUrl,\"/ws\"));stompClient=Stomp.over(socket);stompClient.connect({},onConnected,onError);};var onConnected=function onConnected(){try{var _username=sessionStorage.getItem(\"nickname\");var _crareer=sessionStorage.getItem(\"career\");var _userImage=sessionStorage.getItem(\"userImage\");var user_join={status:\"JOIN\",pid:pid,uid:uid};setConnected(true);setUserData(_objectSpread(_objectSpread({},userData),{},{crareer:_crareer,senderName:_username,status:\"JOIN\",pid:pid}));stompClient.send(\"/app/message1\",token,JSON.stringify(user_join));stompClient.subscribe(\"/topic/greetings/\".concat(pid),onPublicMessageReceived,token);}catch(err){console.log(err);}};var sendPublicMessage=function sendPublicMessage(){if(is_login){var _username2=sessionStorage.getItem(\"nickname\");if(stompClient){if(!userData.message){Swal.fire(\"\",\"내용을 입력해주세요!\",\"error\");}else{var chatMessage=_objectSpread(_objectSpread({},userData),{},{senderName:_username2,message:userData.message,status:\"MESSAGE\",pid:pid,uid:uid});stompClient.send(\"/app/message1\",token,JSON.stringify(chatMessage));setUserData(_objectSpread(_objectSpread({},userData),{},{message:\"\"}));}}}else{Swal.fire(\"\",\"로그인 후 사용할 수 있습니다:)\",\"error\");}};//subscribe의 함수\nvar onPublicMessageReceived=function onPublicMessageReceived(payload){var payloadData=JSON.parse(payload.body);switch(payloadData.status){case\"JOIN\":if(!welcome.get(payloadData.senderName)){console.log(payloadData);welcome.set(payloadData.message,[]);setWelcome(new Map(welcome));setUser(payloadData.userCount);}break;case\"OUT\":if(!welcome.get(payloadData.senderName)){console.log(payloadData);welcome.set(payloadData.message,[]);setWelcome(new Map(welcome));setUser(payloadData.userCount);}break;case\"OUT\":if(!welcome.get(payloadData.senderName)){console.log(payloadData);welcome.set(payloadData.message,[]);setWelcome(new Map(welcome));}break;case\"MESSAGE\":var time1=payloadData.createdAt.split(\"T\")[1];//년월 제거\nvar time2=time1.split(\".\")[0];// 소수점 제거\nvar time3=time2.split(\":\")[0]+\":\"+time2.split(\":\")[1];// 시간, 분\nsetTime(time3);publicChats.push(payloadData);setPublicChats(_toConsumableArray(publicChats));setUser(payloadData.userCount);break;}};var onError=function onError(err){console.log(err);console.log(\"plz\");};return/*#__PURE__*/_jsxs(ChatDiv,{children:[/*#__PURE__*/_jsx(ChatTab,{children:/*#__PURE__*/_jsxs(\"li\",{onClick:function onClick(){setTab(\"CHATROOM\");},children:[\"\\uCC44\\uD305 \",user]})}),/*#__PURE__*/_jsx(ChatList,{children:/*#__PURE__*/_jsxs(\"ul\",{children:[_toConsumableArray(welcome.keys()).map(function(name,index){return/*#__PURE__*/_jsx(\"li\",{className:\"welcome\",children:name},index);}),publicChats.map(function(chat,index){return/*#__PURE__*/_jsxs(\"li\",{className:\" \".concat(chat.senderName===username?\"self\":\"user\"),children:[chat.senderName!==username&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Profile,{size:\"32\",imgUrl:userData.userImage}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:chat.senderName}),userData.crareer&&/*#__PURE__*/_jsx(\"i\",{children:userData.crareer})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"message-data\",children:chat.message}),time.split[0]>12?/*#__PURE__*/_jsxs(\"em\",{children:[\" \\uC624\\uD6C4 \",time]}):/*#__PURE__*/_jsxs(\"em\",{children:[\" \\uC624\\uC804 \",time,\" \"]})]},index);})]})}),/*#__PURE__*/_jsx(ChatInput,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"message\",value:userData.message,placeholder:\"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694 :)\",onChange:handleValue,onKeyPress:onKeyPress}),/*#__PURE__*/_jsx(\"button\",{onClick:sendPublicMessage,children:/*#__PURE__*/_jsx(SendSvg,{})})]})})]});};var ChatDiv=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  flex: none;\\n  display: flex;\\n  flex-direction: column;\\n  flex: none;\\n  width: 342px;\\n  height: calc(100vh - 102px);\\n  background-color: #f9f8ff;\\n  border-radius: 8px;\\n  overflow: hidden;\\n\"])));var ChatTab=styled.ul(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex: none;\\n  overflow: auto;\\n\\n  li {\\n    padding: 0 22px;\\n    margin: 0 10px;\\n    font-size: 18px;\\n    font-weight: 700;\\n    line-height: 58px;\\n    color: #5e45f2;\\n    border-bottom: solid 3px #5e45f2;\\n  }\\n\"])));var ChatList=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  flex: auto;\\n  padding: 0 10px;\\n  overflow: auto;\\n\\n  ul {\\n    padding-top: 30px;\\n    overflow: hidden;\\n  }\\n\\n  li {\\n    width: 286px;\\n\\n    p {\\n      padding: 8px;\\n      word-break: break-all;\\n      border-radius: 8px;\\n    }\\n\\n    &.welcome {\\n      color: #5e45f2;\\n    }\\n\\n    &.user {\\n      position: relative;\\n      padding-left: 36px;\\n      padding-right: 10px;\\n\\n      strong {\\n        font-size: 14px;\\n        color: #5e45f2;\\n      }\\n\\n      p {\\n        margin-top: 8px;\\n        color: #333;\\n        background-color: #fff;\\n        box-shadow: 0 4px 14px 0 rgba(65, 0, 131, 0.06);\\n      }\\n\\n      em {\\n        display: block;\\n        text-align: right;\\n      }\\n    }\\n\\n    &.self {\\n      margin: 12px 0;\\n      margin-left: auto;\\n\\n      p {\\n        color: #fff;\\n        background-color: #7966ff;\\n      }\\n    }\\n  }\\n\\n  span {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    box-shadow: 0 0 4px 0 rgba(121, 102, 255, 0.2);\\n  }\\n\\n  i {\\n    color: #797979;\\n    font-size: 12px;\\n    font-style: normal;\\n\\n    &:before {\\n      --dat-size: 2px;\\n      content: \\\".\\\";\\n      margin: 0 6px;\\n      font-size: 16px;\\n      vertical-align: super;\\n    }\\n  }\\n\\n  em {\\n    display: block;\\n    margin-top: 10px;\\n    color: #797979;\\n    font-size: 12px;\\n    font-style: normal;\\n  }\\n\"])));var ChatInput=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  padding: 24px 16px;\\n  background-color: #f9f8ff;\\n  box-shadow: 0 -4px 10px 0 rgba(133, 47, 243, 0.05);\\n\\n  > div {\\n    display: flex;\\n    align-items: center;\\n    height: 42px;\\n    padding: 8px 14px;\\n    overflow: hidden;\\n    border-radius: 10px;\\n    box-shadow: inset 0 2px 6px 0 rgba(60, 4, 105, 0.08);\\n    background-color: #fff;\\n  }\\n\\n  input {\\n    flex: auto;\\n    padding: 0;\\n    background-color: transparent;\\n  }\\n\\n  button {\\n    flex: none;\\n    margin-left: 10px;\\n    svg {\\n      vertical-align: middle;\\n    }\\n  }\\n\"])));export default Postchat;","map":{"version":3,"sources":["/Users/cyj/sun/src/components/Postchat.js"],"names":["React","Stomp","over","SockJs","Profile","styled","Swal","apiUrl","ReactComponent","SendSvg","stompClient","Postchat","pid","token","Authorization","sessionStorage","getItem","is_login","username","crareer","userImage","uid","useState","Map","welcome","setWelcome","publicChats","setPublicChats","connected","setConnected","tab","setTab","time","setTime","user","setUser","message","opposingUserName","userData","setUserData","useEffect","stompConnect","stompDisConnect","onKeyPress","e","key","sendPublicMessage","user_join","status","send","JSON","stringify","disconnect","unsubscribe","err","handleValue","target","value","name","socket","connect","onConnected","onError","senderName","subscribe","onPublicMessageReceived","console","log","fire","chatMessage","payload","payloadData","parse","body","get","set","userCount","time1","createdAt","split","time2","time3","push","keys","map","index","chat","ChatDiv","div","ChatTab","ul","ChatList","ChatInput"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Stomp, { over } from \"stompjs\";\nimport SockJs from \"sockjs-client\";\nimport Profile from \"../elements/Profile\";\nimport styled from \"styled-components\";\nimport Swal from \"sweetalert2\";\nimport { apiUrl } from \"../elements/testApiUrl\";\nimport { ReactComponent as SendSvg } from \"../svg/send.svg\";\n\nlet stompClient = null;\nconst Postchat = ({ pid }) => {\n  const token = {\n    Authorization: sessionStorage.getItem(\"token\"),\n  };\n  const is_login = sessionStorage.getItem(\"is_Login\");\n  const username = sessionStorage.getItem(\"nickname\");\n  const crareer = sessionStorage.getItem(\"career\");\n  const userImage = sessionStorage.getItem(\"userImage\");\n  const uid = sessionStorage.getItem(\"uid\");\n\n  const [welcome, setWelcome] = React.useState(new Map());\n  const [publicChats, setPublicChats] = React.useState([]);\n  const [connected, setConnected] = React.useState(false);\n  const [tab, setTab] = React.useState(\"CHATROOM\");\n  const [time, setTime] = React.useState(\"\");\n  const [user, setUser] = React.useState(0);\n  const [userData, setUserData] = React.useState({\n    username: \"\",\n    message: \"\",\n    opposingUserName: \"\",\n  });\n\n  React.useEffect(() => {\n    stompConnect();\n\n    return () => {\n      stompDisConnect();\n    };\n  }, []);\n\n  const onKeyPress = (e) => {\n    if (e.key == \"Enter\") {\n      sendPublicMessage();\n    }\n  };\n\n  const stompDisConnect = () => {\n    try {\n      const user_join = { status: \"OUT\" };\n      stompClient.send(\"/app/message1\", {}, JSON.stringify(user_join));\n\n      stompClient.disconnect(() => {\n        stompClient.unsubscribe(`/topic/greetings/${pid}`);\n      }, token);\n    } catch (err) {}\n  };\n\n  const handleValue = (e) => {\n    const { value, name } = e.target;\n    setUserData({ ...userData, [name]: value });\n  };\n\n  const stompConnect = () => {\n    let socket = new SockJs(`${apiUrl}/ws`);\n    stompClient = Stomp.over(socket);\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const onConnected = () => {\n    try {\n      const username = sessionStorage.getItem(\"nickname\");\n      const crareer = sessionStorage.getItem(\"career\");\n      const userImage = sessionStorage.getItem(\"userImage\");\n      const user_join = { status: \"JOIN\", pid, uid };\n      setConnected(true);\n      setUserData({\n        ...userData,\n        crareer,\n        senderName: username,\n        status: \"JOIN\",\n        pid: pid,\n      });\n\n      stompClient.send(\"/app/message1\", token, JSON.stringify(user_join));\n      stompClient.subscribe(\n        `/topic/greetings/${pid}`,\n        onPublicMessageReceived,\n        token\n      );\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const sendPublicMessage = () => {\n    if (is_login) {\n      const username = sessionStorage.getItem(\"nickname\");\n\n      if (stompClient) {\n        if (!userData.message) {\n          Swal.fire(\"\", \"내용을 입력해주세요!\", \"error\");\n        } else {\n          let chatMessage = {\n            ...userData,\n            senderName: username,\n            message: userData.message,\n            status: \"MESSAGE\",\n            pid: pid,\n            uid: uid,\n          };\n\n          stompClient.send(\"/app/message1\", token, JSON.stringify(chatMessage));\n          setUserData({ ...userData, message: \"\" });\n        }\n      }\n    } else {\n      Swal.fire(\"\", \"로그인 후 사용할 수 있습니다:)\", \"error\");\n    }\n  };\n\n  //subscribe의 함수\n  const onPublicMessageReceived = (payload) => {\n    let payloadData = JSON.parse(payload.body);\n\n    switch (payloadData.status) {\n      case \"JOIN\":\n        if (!welcome.get(payloadData.senderName)) {\n          console.log(payloadData);\n          welcome.set(payloadData.message, []);\n          setWelcome(new Map(welcome));\n          setUser(payloadData.userCount);\n        }\n        break;\n      case \"OUT\":\n        if (!welcome.get(payloadData.senderName)) {\n          console.log(payloadData);\n          welcome.set(payloadData.message, []);\n          setWelcome(new Map(welcome));\n          setUser(payloadData.userCount);\n        }\n        break;\n      case \"OUT\":\n        if (!welcome.get(payloadData.senderName)) {\n          console.log(payloadData);\n          welcome.set(payloadData.message, []);\n          setWelcome(new Map(welcome));\n        }\n        break;\n      case \"MESSAGE\":\n        const time1 = payloadData.createdAt.split(\"T\")[1]; //년월 제거\n        const time2 = time1.split(\".\")[0]; // 소수점 제거\n        const time3 = time2.split(\":\")[0] + \":\" + time2.split(\":\")[1]; // 시간, 분\n        setTime(time3);\n        publicChats.push(payloadData);\n        setPublicChats([...publicChats]);\n        setUser(payloadData.userCount);\n        break;\n    }\n  };\n\n  const onError = (err) => {\n    console.log(err);\n    console.log(\"plz\");\n  };\n\n  return (\n    <ChatDiv>\n      <ChatTab>\n        <li\n          onClick={() => {\n            setTab(\"CHATROOM\");\n          }}>\n          채팅 {user}\n        </li>\n      </ChatTab>\n      <ChatList>\n        <ul>\n          {[...welcome.keys()].map((name, index) => {\n            return (\n              <li className='welcome' key={index}>\n                {name}\n              </li>\n            );\n          })}\n\n          {publicChats.map((chat, index) => (\n            <li\n              className={` ${chat.senderName === username ? \"self\" : \"user\"}`}\n              key={index}>\n              {chat.senderName !== username && (\n                <>\n                  <Profile size='32' imgUrl={userData.userImage} />\n                  <div>\n                    <strong>{chat.senderName}</strong>\n                    {userData.crareer && <i>{userData.crareer}</i>}\n                  </div>\n                </>\n              )}\n              <p className='message-data'>{chat.message}</p>\n              {time.split[0] > 12 ? (\n                <em> 오후 {time}</em>\n              ) : (\n                <em> 오전 {time} </em>\n              )}\n            </li>\n          ))}\n        </ul>\n      </ChatList>\n      <ChatInput>\n        <div>\n          <input\n            type='text'\n            name='message'\n            value={userData.message}\n            placeholder='댓글을 입력해주세요 :)'\n            onChange={handleValue}\n            onKeyPress={onKeyPress}\n          />\n          <button onClick={sendPublicMessage}>\n            <SendSvg />\n          </button>\n        </div>\n      </ChatInput>\n    </ChatDiv>\n  );\n};\n\nconst ChatDiv = styled.div`\n  flex: none;\n  display: flex;\n  flex-direction: column;\n  flex: none;\n  width: 342px;\n  height: calc(100vh - 102px);\n  background-color: #f9f8ff;\n  border-radius: 8px;\n  overflow: hidden;\n`;\n\nconst ChatTab = styled.ul`\n  display: flex;\n  flex: none;\n  overflow: auto;\n\n  li {\n    padding: 0 22px;\n    margin: 0 10px;\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 58px;\n    color: #5e45f2;\n    border-bottom: solid 3px #5e45f2;\n  }\n`;\n\nconst ChatList = styled.div`\n  flex: auto;\n  padding: 0 10px;\n  overflow: auto;\n\n  ul {\n    padding-top: 30px;\n    overflow: hidden;\n  }\n\n  li {\n    width: 286px;\n\n    p {\n      padding: 8px;\n      word-break: break-all;\n      border-radius: 8px;\n    }\n\n    &.welcome {\n      color: #5e45f2;\n    }\n\n    &.user {\n      position: relative;\n      padding-left: 36px;\n      padding-right: 10px;\n\n      strong {\n        font-size: 14px;\n        color: #5e45f2;\n      }\n\n      p {\n        margin-top: 8px;\n        color: #333;\n        background-color: #fff;\n        box-shadow: 0 4px 14px 0 rgba(65, 0, 131, 0.06);\n      }\n\n      em {\n        display: block;\n        text-align: right;\n      }\n    }\n\n    &.self {\n      margin: 12px 0;\n      margin-left: auto;\n\n      p {\n        color: #fff;\n        background-color: #7966ff;\n      }\n    }\n  }\n\n  span {\n    position: absolute;\n    top: 0;\n    left: 0;\n    box-shadow: 0 0 4px 0 rgba(121, 102, 255, 0.2);\n  }\n\n  i {\n    color: #797979;\n    font-size: 12px;\n    font-style: normal;\n\n    &:before {\n      --dat-size: 2px;\n      content: \".\";\n      margin: 0 6px;\n      font-size: 16px;\n      vertical-align: super;\n    }\n  }\n\n  em {\n    display: block;\n    margin-top: 10px;\n    color: #797979;\n    font-size: 12px;\n    font-style: normal;\n  }\n`;\n\nconst ChatInput = styled.div`\n  padding: 24px 16px;\n  background-color: #f9f8ff;\n  box-shadow: 0 -4px 10px 0 rgba(133, 47, 243, 0.05);\n\n  > div {\n    display: flex;\n    align-items: center;\n    height: 42px;\n    padding: 8px 14px;\n    overflow: hidden;\n    border-radius: 10px;\n    box-shadow: inset 0 2px 6px 0 rgba(60, 4, 105, 0.08);\n    background-color: #fff;\n  }\n\n  input {\n    flex: auto;\n    padding: 0;\n    background-color: transparent;\n  }\n\n  button {\n    flex: none;\n    margin-left: 10px;\n    svg {\n      vertical-align: middle;\n    }\n  }\n`;\n\nexport default Postchat;\n"]},"metadata":{},"sourceType":"module"}