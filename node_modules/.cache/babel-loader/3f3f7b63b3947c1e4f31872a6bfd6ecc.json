{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware,compose}from\"redux\";import thunk from\"redux-thunk\";import{createBrowserHistory}from\"history\";import{connectRouter}from\"connected-react-router\";import Post from\"./modules/post\";import Answer from\"./modules/answer\";import Ranking from\"./modules/ranking\";import user from\"./modules/user\";import comment from\"./modules/comment\";import search from\"./modules/serch\";import Mypage from\"./modules/mypage\";export var history=createBrowserHistory();var rootReducer=combineReducers({post:Post,answer:Answer,ranking:Ranking,router:connectRouter(history),user:user,comment:comment,search:search,mypage:Mypage});var middlewares=[thunk.withExtraArgument({history:history})];// 지금이 어느 환경인 지 알려줘요. (개발환경, 프로덕션(배포)환경 ...)\nvar env=process.env.NODE_ENV;// 개발환경에서는 로거라는 걸 하나만 더 써볼게요.\nif(env===\"development\"){var _require=require(\"redux-logger\"),logger=_require.logger;middlewares.push(logger);}var composeEnhancers=typeof window===\"object\"&&window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__?window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({// Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n}):compose;var enhancer=composeEnhancers(applyMiddleware.apply(void 0,middlewares));var store=function store(initialStore){return createStore(rootReducer,enhancer);};export default store();","map":{"version":3,"sources":["/Users/cyj/sun/src/redux/configureStore.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","createBrowserHistory","connectRouter","Post","Answer","Ranking","user","comment","search","Mypage","history","rootReducer","post","answer","ranking","router","mypage","middlewares","withExtraArgument","env","process","NODE_ENV","require","logger","push","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","enhancer","store","initialStore"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,CAAwDC,OAAxD,KAAuE,OAAvE,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,oBAAT,KAAqC,SAArC,CACA,OAASC,aAAT,KAA8B,wBAA9B,CACA,MAAOC,CAAAA,IAAP,KAAiB,gBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,gBAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAGT,oBAAoB,EAApC,CAEP,GAAMU,CAAAA,WAAW,CAAGd,eAAe,CAAC,CAClCe,IAAI,CAAET,IAD4B,CAElCU,MAAM,CAAET,MAF0B,CAGlCU,OAAO,CAAET,OAHyB,CAIlCU,MAAM,CAAEb,aAAa,CAACQ,OAAD,CAJa,CAKlCJ,IAAI,CAAEA,IAL4B,CAMlCC,OAAO,CAAEA,OANyB,CAOlCC,MAAM,CAAEA,MAP0B,CAQlCQ,MAAM,CAAEP,MAR0B,CAAD,CAAnC,CAWA,GAAMQ,CAAAA,WAAW,CAAG,CAACjB,KAAK,CAACkB,iBAAN,CAAwB,CAAER,OAAO,CAAEA,OAAX,CAAxB,CAAD,CAApB,CAEA;AACA,GAAMS,CAAAA,GAAG,CAAGC,OAAO,CAACD,GAAR,CAAYE,QAAxB,CAEA;AACA,GAAIF,GAAG,GAAK,aAAZ,CAA2B,CACzB,aAAmBG,OAAO,CAAC,cAAD,CAA1B,CAAQC,MAAR,UAAQA,MAAR,CACAN,WAAW,CAACO,IAAZ,CAAiBD,MAAjB,EACD,CAED,GAAME,CAAAA,gBAAgB,CACpB,MAAOC,CAAAA,MAAP,GAAkB,QAAlB,EAA8BA,MAAM,CAACC,oCAArC,CACID,MAAM,CAACC,oCAAP,CAA4C,CAC1C;AAD0C,CAA5C,CADJ,CAII5B,OALN,CAOA,GAAM6B,CAAAA,QAAQ,CAAGH,gBAAgB,CAAC3B,eAAe,MAAf,QAAmBmB,WAAnB,CAAD,CAAjC,CAEA,GAAIY,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,YAAD,QAAkBlC,CAAAA,WAAW,CAACe,WAAD,CAAciB,QAAd,CAA7B,EAAZ,CAEA,cAAeC,CAAAA,KAAK,EAApB","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createBrowserHistory } from \"history\";\nimport { connectRouter } from \"connected-react-router\";\nimport Post from \"./modules/post\";\nimport Answer from \"./modules/answer\";\nimport Ranking from \"./modules/ranking\";\nimport user from \"./modules/user\";\nimport comment from \"./modules/comment\";\nimport search from \"./modules/serch\";\nimport Mypage from \"./modules/mypage\";\n\nexport const history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n  post: Post,\n  answer: Answer,\n  ranking: Ranking,\n  router: connectRouter(history),\n  user: user,\n  comment: comment,\n  search: search,\n  mypage: Mypage,\n});\n\nconst middlewares = [thunk.withExtraArgument({ history: history })];\n\n// 지금이 어느 환경인 지 알려줘요. (개발환경, 프로덕션(배포)환경 ...)\nconst env = process.env.NODE_ENV;\n\n// 개발환경에서는 로거라는 걸 하나만 더 써볼게요.\nif (env === \"development\") {\n  const { logger } = require(\"redux-logger\");\n  middlewares.push(logger);\n}\n\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\nlet store = (initialStore) => createStore(rootReducer, enhancer);\n\nexport default store();\n"]},"metadata":{},"sourceType":"module"}