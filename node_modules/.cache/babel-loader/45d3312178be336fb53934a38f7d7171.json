{"ast":null,"code":"var _jsxFileName = \"/Users/cyj/sun/src/components/AnswerList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actionCreators as answerActions } from \"../redux/modules/answer\";\nimport { actionCreators as commentActions } from \"../redux/modules/comment\";\nimport Comment from \"./Comment\";\nimport Answer from \"./Answer\";\nimport Profile from \"../elements/Profile\";\nimport Swal from \"sweetalert2\";\nimport RoundBtn from \"../elements/RoundBtn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AnswerList = _ref => {\n  _s();\n\n  let {\n    isWriter\n  } = _ref;\n  const pid = useParams().pid;\n  const dispatch = useDispatch();\n  const list = useSelector(state => state.answer.list);\n  const user_info = sessionStorage.getItem(\"uid\");\n  const [isEdit, setIsEdit] = React.useState(null);\n  const [isCommentEdit, setIsCommentEdit] = React.useState(false);\n  const [comment, setComment] = React.useState(\"\");\n  const [commentView, setCommentView] = React.useState();\n  const [commentViewSelect, setCommentViewSelect] = React.useState(false);\n  const [commentId, setCommentId] = React.useState(0);\n  const isChoose = list === null || list === void 0 ? void 0 : list.find(v => v.status === \"true\");\n  React.useEffect(() => {\n    if (list.length <= 1) {\n      return;\n    }\n\n    dispatch(answerActions.getAnswerDB(pid));\n  }, []);\n\n  const chooseAnswer = choose_list => {\n    if (!isChoose) {\n      Swal.fire({\n        title: \"답변을 채택하시겠습니까?\",\n        text: \"한번 채택한 답변은 취소 할 수 없습니다\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"네 채택하겠습니다.\",\n        confirmButtonColor: \"#7966FF\",\n        cancelButtonText: \"아니오\"\n      }).then(result => {\n        if (result.isConfirmed) {\n          Swal.fire(\"\", \"답변이 채택 되었습니다.\", \"success\");\n          dispatch(answerActions.chooseAnswerDB({ ...choose_list,\n            answerUid: choose_list.uid\n          }));\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n          Swal.fire(\"\", \"채택이 취소 되었습니다 :)\", \"error\");\n        }\n      });\n    } else {\n      Swal.fire({\n        title: \"\",\n        text: \"채택 된 답변이 존재합니다. :)\",\n        icon: \"warning\",\n        confirmButtonText: \"확인\",\n        confirmButtonColor: \"#7966FF\"\n      });\n    }\n  };\n\n  const deleAnswer = answerId => {\n    Swal.fire({\n      title: \"답변을 삭제하시겠습니까?\",\n      text: \"삭제 된 답변은 복구 할 수 없습니다\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: \"네 삭제하겠습니다.\",\n      confirmButtonColor: \"#7966FF\",\n      cancelButtonText: \"아니오\"\n    }).then(result => {\n      if (result.isConfirmed) {\n        Swal.fire(\"\", \"답변이 삭제 되었습니다.\", \"success\");\n        dispatch(answerActions.delAnswerDB(answerId));\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"\", \"취소 되었습니다 :)\", \"error\");\n      }\n    });\n  };\n\n  const commentViewList = pid => {\n    setCommentView(pid);\n    setCommentViewSelect(!commentViewSelect);\n    console.log(pid);\n  };\n\n  const setCommentEdit = commentId => {\n    setCommentId(commentId);\n  };\n\n  const commentChange = e => {\n    setComment(e.target.value);\n  };\n\n  const commentEdit = e => {\n    const commentEditId = e.target.value;\n    Swal.fire({\n      title: \"댓글을 수정하시겠습니까?\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: \"네\",\n      confirmButtonColor: \"#7966FF\",\n      cancelButtonText: \"아니오\",\n      cancelTextColor: \"#7966FF\",\n      Buttons: true\n    }).then(result => {\n      if (result.isConfirmed) {\n        dispatch(commentActions.editCommentDB(commentEditId, comment, pid));\n      } else {\n        return;\n      }\n    });\n  };\n\n  const commentDelete = e => {\n    Swal.fire({\n      title: \"댓글을 삭제하시겠습니까?\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: \"네\",\n      confirmButtonColor: \"#7966FF\",\n      cancelButtonText: \"아니오\",\n      cancelTextColor: \"#7966FF\",\n      Buttons: true\n    }).then(result => {\n      if (result.isConfirmed) {\n        dispatch(commentActions.deleteCommentDB(e.target.value));\n      } else {\n        return;\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SC_List, {\n      children: [list.map((v, idx) => {\n        const comment_count = Object.keys(v.commnetResponseDtoList).length;\n        console.log(v);\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answer_wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"answer_box\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"header\",\n                  children: [/*#__PURE__*/_jsxDEV(Profile, {\n                    size: \"48\",\n                    imgUrl: v.userImage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: v.nickname\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: v.answerTitle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: v.answerComment\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: v.answerImg\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"btn_wrap\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: () => commentViewList(v.answerId),\n                    children: [\"\\uB313\\uAE00 \", comment_count]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 23\n                  }, this), v.status === \"true\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"choose\",\n                    children: \"\\uCC44\\uD0DD\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 25\n                  }, this) : Number(user_info) === Number(v.uid) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => {\n                        deleAnswer(v.answerId);\n                      },\n                      children: \"\\uC0AD\\uC81C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"edit_btn\",\n                      onClick: () => {\n                        setIsEdit(v.answerId);\n                      },\n                      children: \"\\uC218\\uC815\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true) : Number(user_info) === Number(isWriter) && Number(isWriter) !== Number(v.uid) && /*#__PURE__*/_jsxDEV(RoundBtn, {\n                    isLine: true,\n                    title: \" \\uCC44\\uD0DD \",\n                    onClick: () => {\n                      chooseAnswer(v);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment_box\",\n                children: /*#__PURE__*/_jsxDEV(SC_Commentbox, {\n                  className: \"comment\",\n                  children: /*#__PURE__*/_jsxDEV(Comment, {\n                    list: v\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), isEdit === v.answerId && /*#__PURE__*/_jsxDEV(Answer, {\n              close: setIsEdit,\n              isEdit: true,\n              list: v\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this);\n      }), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SC_CommentList, {\n      className: \"comment_wrap\",\n      children: list.commnetResponseDtoList.map((list, idx) => {\n        var _list$createdAt, _list$createdAt2, _list$createdAt3;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: commentViewSelect && commentView === list.answerId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\" \", list.uid == user_info ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: isCommentEdit && list.commentId === commentId ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mycomment\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Profile, {\n                      size: 24,\n                      imgUrl: list.userImage\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: list.nickname\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"button\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"comment\",\n                      onClick: commentEdit,\n                      value: list.commentId,\n                      children: \"\\uC218\\uC815\\uC644\\uB8CC\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    defaultValue: list.comment,\n                    type: \"text\",\n                    onChange: commentChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \", (_list$createdAt = list.createdAt) === null || _list$createdAt === void 0 ? void 0 : _list$createdAt.split(\"T\")[0]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mycomment\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Profile, {\n                      size: 24,\n                      imgUrl: list.userImage\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: list.nickname\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"button\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"comment\",\n                      onClick: () => {\n                        setCommentEdit(list.commentId);\n                        setIsCommentEdit(!isCommentEdit);\n                      },\n                      children: \"\\uC218\\uC815\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"comment\",\n                      onClick: commentDelete,\n                      value: list.commentId,\n                      children: \"\\uC0AD\\uC81C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"comment\",\n                  children: list.comment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \", (_list$createdAt2 = list.createdAt) === null || _list$createdAt2 === void 0 ? void 0 : _list$createdAt2.split(\"T\")[0]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 25\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment\",\n                  children: [/*#__PURE__*/_jsxDEV(Profile, {\n                    size: 24,\n                    imgUrl: list.userImage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: list.nickname\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"comment\",\n                  children: list.comment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \", (_list$createdAt3 = list.createdAt) === null || _list$createdAt3 === void 0 ? void 0 : _list$createdAt3.split(\"T\")[0]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : null\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AnswerList, \"EE7XZw2z/9QMwrK10Lugm4gtuZM=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = AnswerList;\nconst SC_List = styled.div`\n  .answer_wrap {\n    padding: 24px;\n    box-shadow: 0 4px 20px 0 rgba(228, 226, 242, 0.45);\n    border-radius: 8px;\n    overflow: hidden;\n    margin-bottom: 24px;\n  }\n\n  h2 {\n    margin: 0;\n  }\n\n  .comment_box {\n    border-radius: 8px;\n  }\n\n  .header {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n\n    button {\n      margin-left: auto;\n    }\n\n    span {\n      font-size: 18px;\n    }\n  }\n\n  .content {\n    padding: 24px 0;\n\n    > div {\n      font-size: 20px;\n      font-weight: 700;\n    }\n\n    > *:not(style) {\n      margin-bottom: 10px;\n    }\n  }\n\n  .btn_wrap {\n    display: flex;\n    padding-bottom: 16px;\n\n    span {\n      margin-right: auto;\n    }\n\n    button {\n      color: #7966ff;\n      font-size: 16px;\n\n      &.choose {\n        width: 94px;\n        height: 40px;\n        background-color: #ffd703;\n        color: #fff;\n        border-radius: 40px;\n        cursor: default;\n      }\n    }\n\n    .edit_btn:before {\n      content: \"\";\n      margin: 0 12px;\n      border-left: solid 1px #7966ff;\n    }\n  }\n`;\n_c2 = SC_List;\nconst SC_Commentbox = styled.div`\n  padding-top: 24px;\n  border-top: solid 1px #dadada;\n`;\n_c3 = SC_Commentbox;\nconst SC_CommentList = styled.div`\n  --gray-color: #c4c4c4;\n\n  > div {\n    display: flex;\n    padding: 18px 24px;\n    border-bottom: solid 1px #dadada;\n    color: var(--gray-color);\n    flex-direction: column;\n    justify-content: space-between;\n\n    &:last-child {\n      border-bottom: none;\n    }\n  }\n\n  p {\n    flex: auto;\n    margin: 3px;\n\n    > textarea {\n      width: 1000px;\n      height: 100px;\n    }\n  }\n\n  p.comment {\n    flex: auto;\n    margin: 3px;\n    height: 2rem;\n    width: 100%;\n    height: 100%;\n    color: #797979;\n\n    > textarea {\n      width: 100%;\n      height: 100%;\n    }\n  }\n\n  strong {\n    color: #333;\n    font-weight: normal;\n    margin-left: 8px;\n  }\n\n  em {\n    font-style: normal;\n    padding-left: 16px;\n    margin-left: 16px;\n    border-left: solid 1px var(--gray-color);\n  }\n  div.mycomment {\n    display: flex;\n    justify-content: space-between;\n    > div {\n      display: flex;\n      align-items: center;\n      line-height: 1rem;\n    }\n    > div.button {\n      width: 60px;\n      justify-content: space-between;\n    }\n  }\n  div.comment {\n    display: flex;\n    align-items: center;\n  }\n  button {\n    color: var(--gray-color);\n    font-size: 1rem;\n  }\n`;\n_c4 = SC_CommentList;\nexport default AnswerList;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"AnswerList\");\n$RefreshReg$(_c2, \"SC_List\");\n$RefreshReg$(_c3, \"SC_Commentbox\");\n$RefreshReg$(_c4, \"SC_CommentList\");","map":{"version":3,"sources":["/Users/cyj/sun/src/components/AnswerList.js"],"names":["React","styled","useParams","useDispatch","useSelector","actionCreators","answerActions","commentActions","Comment","Answer","Profile","Swal","RoundBtn","AnswerList","isWriter","pid","dispatch","list","state","answer","user_info","sessionStorage","getItem","isEdit","setIsEdit","useState","isCommentEdit","setIsCommentEdit","comment","setComment","commentView","setCommentView","commentViewSelect","setCommentViewSelect","commentId","setCommentId","isChoose","find","v","status","useEffect","length","getAnswerDB","chooseAnswer","choose_list","fire","title","text","icon","showCancelButton","confirmButtonText","confirmButtonColor","cancelButtonText","then","result","isConfirmed","chooseAnswerDB","answerUid","uid","dismiss","DismissReason","cancel","deleAnswer","answerId","delAnswerDB","commentViewList","console","log","setCommentEdit","commentChange","e","target","value","commentEdit","commentEditId","cancelTextColor","Buttons","editCommentDB","commentDelete","deleteCommentDB","map","idx","comment_count","Object","keys","commnetResponseDtoList","userImage","nickname","answerTitle","answerComment","answerImg","Number","createdAt","split","SC_List","div","SC_Commentbox","SC_CommentList"],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxEA;MAAMD,O;AA0EN,MAAME,aAAa,GAAG/F,MAAM,CAAC8F,GAAI;AACjC;AACA;AACA,CAHA;MAAMC,a;AAKN,MAAMC,cAAc,GAAGhG,MAAM,CAAC8F,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzEA;MAAME,c;AA2EN,eAAepF,UAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actionCreators as answerActions } from \"../redux/modules/answer\";\nimport { actionCreators as commentActions } from \"../redux/modules/comment\";\nimport Comment from \"./Comment\";\nimport Answer from \"./Answer\";\nimport Profile from \"../elements/Profile\";\nimport Swal from \"sweetalert2\";\nimport RoundBtn from \"../elements/RoundBtn\";\n\nconst AnswerList = ({ isWriter }) => {\n  const pid = useParams().pid;\n  const dispatch = useDispatch();\n  const list = useSelector((state) => state.answer.list);\n  const user_info = sessionStorage.getItem(\"uid\");\n  const [isEdit, setIsEdit] = React.useState(null);\n  const [isCommentEdit, setIsCommentEdit] = React.useState(false);\n  const [comment, setComment] = React.useState(\"\");\n  const [commentView, setCommentView] = React.useState();\n  const [commentViewSelect, setCommentViewSelect] = React.useState(false);\n  const [commentId, setCommentId] = React.useState(0);\n  const isChoose = list?.find((v) => v.status === \"true\");\n\n  React.useEffect(() => {\n    if (list.length <= 1) {\n      return;\n    }\n    dispatch(answerActions.getAnswerDB(pid));\n  }, []);\n\n  const chooseAnswer = (choose_list) => {\n    if (!isChoose) {\n      Swal.fire({\n        title: \"답변을 채택하시겠습니까?\",\n        text: \"한번 채택한 답변은 취소 할 수 없습니다\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"네 채택하겠습니다.\",\n        confirmButtonColor: \"#7966FF\",\n        cancelButtonText: \"아니오\",\n      }).then((result) => {\n        if (result.isConfirmed) {\n          Swal.fire(\"\", \"답변이 채택 되었습니다.\", \"success\");\n          dispatch(\n            answerActions.chooseAnswerDB({\n              ...choose_list,\n              answerUid: choose_list.uid,\n            })\n          );\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n          Swal.fire(\"\", \"채택이 취소 되었습니다 :)\", \"error\");\n        }\n      });\n    } else {\n      Swal.fire({\n        title: \"\",\n        text: \"채택 된 답변이 존재합니다. :)\",\n        icon: \"warning\",\n        confirmButtonText: \"확인\",\n        confirmButtonColor: \"#7966FF\",\n      });\n    }\n  };\n\n  const deleAnswer = (answerId) => {\n    Swal.fire({\n      title: \"답변을 삭제하시겠습니까?\",\n      text: \"삭제 된 답변은 복구 할 수 없습니다\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: \"네 삭제하겠습니다.\",\n      confirmButtonColor: \"#7966FF\",\n      cancelButtonText: \"아니오\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\"\", \"답변이 삭제 되었습니다.\", \"success\");\n        dispatch(answerActions.delAnswerDB(answerId));\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"\", \"취소 되었습니다 :)\", \"error\");\n      }\n    });\n  };\n\n  const commentViewList = (pid) => {\n    setCommentView(pid);\n    setCommentViewSelect(!commentViewSelect);\n    console.log(pid);\n  };\n\n  const setCommentEdit = (commentId) => {\n    setCommentId(commentId);\n  };\n\n  const commentChange = (e) => {\n    setComment(e.target.value);\n  };\n\n  const commentEdit = (e) => {\n    const commentEditId = e.target.value;\n    Swal.fire({\n      title: \"댓글을 수정하시겠습니까?\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: \"네\",\n      confirmButtonColor: \"#7966FF\",\n      cancelButtonText: \"아니오\",\n      cancelTextColor: \"#7966FF\",\n      Buttons: true,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(commentActions.editCommentDB(commentEditId, comment, pid));\n      } else {\n        return;\n      }\n    });\n  };\n\n  const commentDelete = (e) => {\n    Swal.fire({\n      title: \"댓글을 삭제하시겠습니까?\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: \"네\",\n      confirmButtonColor: \"#7966FF\",\n      cancelButtonText: \"아니오\",\n      cancelTextColor: \"#7966FF\",\n      Buttons: true,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(commentActions.deleteCommentDB(e.target.value));\n      } else {\n        return;\n      }\n    });\n  };\n\n  return (\n    <>\n      <SC_List>\n        {list.map((v, idx) => {\n          const comment_count = Object.keys(v.commnetResponseDtoList).length;\n          console.log(v);\n          return (\n            <React.Fragment key={idx}>\n              <div>\n                <div className='answer_wrap'>\n                  <div className='answer_box'>\n                    <div className='header'>\n                      <Profile size='48' imgUrl={v.userImage} />\n                      <span>{v.nickname}</span>\n                    </div>\n                    <div className='content'>\n                      <div>{v.answerTitle}</div>\n                      <p>{v.answerComment}</p>\n                      <div>\n                        <img src={v.answerImg} />\n                      </div>\n                    </div>\n\n                    <div className='btn_wrap'>\n                      <span onClick={() => commentViewList(v.answerId)}>\n                        댓글 {comment_count}\n                      </span>\n                      {/* 채택 하기 , 수적 삭제, 채택된 상태 */}\n                      {v.status === \"true\" ? (\n                        <button className='choose'>채택</button>\n                      ) : Number(user_info) === Number(v.uid) ? (\n                        <>\n                          <button\n                            onClick={() => {\n                              deleAnswer(v.answerId);\n                            }}>\n                            삭제\n                          </button>\n                          <button\n                            className='edit_btn'\n                            onClick={() => {\n                              setIsEdit(v.answerId);\n                            }}>\n                            수정\n                          </button>\n                        </>\n                      ) : (\n                        Number(user_info) === Number(isWriter) &&\n                        Number(isWriter) !== Number(v.uid) && (\n                          <RoundBtn\n                            isLine\n                            title='\n                            채택\n                            '\n                            onClick={() => {\n                              chooseAnswer(v);\n                            }}\n                          />\n                        )\n                      )}\n                    </div>\n                  </div>\n                  <div className='comment_box'>\n                    <SC_Commentbox className='comment'>\n                      <Comment list={v} />\n                    </SC_Commentbox>\n                  </div>\n                </div>\n\n                {isEdit === v.answerId && (\n                  <Answer close={setIsEdit} isEdit={true} list={v} />\n                )}\n              </div>\n            </React.Fragment>\n          );\n        })}\n        )\n      </SC_List>\n      <SC_CommentList className='comment_wrap'>\n        {list.commnetResponseDtoList.map((list, idx) => {\n          return (\n            <div key={idx}>\n              {commentViewSelect && commentView === list.answerId ? (\n                <>\n                  {\" \"}\n                  {list.uid == user_info ? (\n                    <>\n                      {isCommentEdit && list.commentId === commentId ? (\n                        <div>\n                          <div className='mycomment'>\n                            <div>\n                              <Profile size={24} imgUrl={list.userImage} />\n                              <strong>{list.nickname}</strong>\n                            </div>\n                            <div className='button'>\n                              <button\n                                className='comment'\n                                onClick={commentEdit}\n                                value={list.commentId}>\n                                수정완료\n                              </button>\n                            </div>\n                          </div>\n                          <p>\n                            <textarea\n                              defaultValue={list.comment}\n                              type='text'\n                              onChange={commentChange}></textarea>\n                          </p>\n                          <p> {list.createdAt?.split(\"T\")[0]}</p>\n                        </div>\n                      ) : (\n                        <div>\n                          <div className='mycomment'>\n                            <div>\n                              <Profile size={24} imgUrl={list.userImage} />\n                              <strong>{list.nickname}</strong>\n                            </div>\n                            <div className='button'>\n                              <button\n                                className='comment'\n                                onClick={() => {\n                                  setCommentEdit(list.commentId);\n                                  setIsCommentEdit(!isCommentEdit);\n                                }}>\n                                수정\n                              </button>\n                              <button\n                                className='comment'\n                                onClick={commentDelete}\n                                value={list.commentId}>\n                                삭제\n                              </button>\n                            </div>\n                          </div>\n                          <p className='comment'>{list.comment}</p>\n                          <p> {list.createdAt?.split(\"T\")[0]}</p>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    <div>\n                      <div>\n                        <div className='comment'>\n                          <Profile size={24} imgUrl={list.userImage} />\n                          <strong>{list.nickname}</strong>\n                        </div>\n                        <p className='comment'>{list.comment}</p>\n                        <p> {list.createdAt?.split(\"T\")[0]}</p>\n                      </div>\n                    </div>\n                  )}\n                </>\n              ) : null}\n            </div>\n          );\n        })}\n      </SC_CommentList>\n    </>\n  );\n};\n\nconst SC_List = styled.div`\n  .answer_wrap {\n    padding: 24px;\n    box-shadow: 0 4px 20px 0 rgba(228, 226, 242, 0.45);\n    border-radius: 8px;\n    overflow: hidden;\n    margin-bottom: 24px;\n  }\n\n  h2 {\n    margin: 0;\n  }\n\n  .comment_box {\n    border-radius: 8px;\n  }\n\n  .header {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n\n    button {\n      margin-left: auto;\n    }\n\n    span {\n      font-size: 18px;\n    }\n  }\n\n  .content {\n    padding: 24px 0;\n\n    > div {\n      font-size: 20px;\n      font-weight: 700;\n    }\n\n    > *:not(style) {\n      margin-bottom: 10px;\n    }\n  }\n\n  .btn_wrap {\n    display: flex;\n    padding-bottom: 16px;\n\n    span {\n      margin-right: auto;\n    }\n\n    button {\n      color: #7966ff;\n      font-size: 16px;\n\n      &.choose {\n        width: 94px;\n        height: 40px;\n        background-color: #ffd703;\n        color: #fff;\n        border-radius: 40px;\n        cursor: default;\n      }\n    }\n\n    .edit_btn:before {\n      content: \"\";\n      margin: 0 12px;\n      border-left: solid 1px #7966ff;\n    }\n  }\n`;\n\nconst SC_Commentbox = styled.div`\n  padding-top: 24px;\n  border-top: solid 1px #dadada;\n`;\n\nconst SC_CommentList = styled.div`\n  --gray-color: #c4c4c4;\n\n  > div {\n    display: flex;\n    padding: 18px 24px;\n    border-bottom: solid 1px #dadada;\n    color: var(--gray-color);\n    flex-direction: column;\n    justify-content: space-between;\n\n    &:last-child {\n      border-bottom: none;\n    }\n  }\n\n  p {\n    flex: auto;\n    margin: 3px;\n\n    > textarea {\n      width: 1000px;\n      height: 100px;\n    }\n  }\n\n  p.comment {\n    flex: auto;\n    margin: 3px;\n    height: 2rem;\n    width: 100%;\n    height: 100%;\n    color: #797979;\n\n    > textarea {\n      width: 100%;\n      height: 100%;\n    }\n  }\n\n  strong {\n    color: #333;\n    font-weight: normal;\n    margin-left: 8px;\n  }\n\n  em {\n    font-style: normal;\n    padding-left: 16px;\n    margin-left: 16px;\n    border-left: solid 1px var(--gray-color);\n  }\n  div.mycomment {\n    display: flex;\n    justify-content: space-between;\n    > div {\n      display: flex;\n      align-items: center;\n      line-height: 1rem;\n    }\n    > div.button {\n      width: 60px;\n      justify-content: space-between;\n    }\n  }\n  div.comment {\n    display: flex;\n    align-items: center;\n  }\n  button {\n    color: var(--gray-color);\n    font-size: 1rem;\n  }\n`;\n\nexport default AnswerList;\n"]},"metadata":{},"sourceType":"module"}