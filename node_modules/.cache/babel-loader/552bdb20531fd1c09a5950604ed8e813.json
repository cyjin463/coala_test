{"ast":null,"code":"var _jsxFileName = \"/Users/cyj/sun/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Stomp, { over } from \"stompjs\";\nimport SockJs from \"sockjs-client\";\nimport Profile from \"../elements/Profile\";\nimport styled from \"styled-components\";\nimport Swal from \"sweetalert2\";\nimport { ReactComponent as SendSvg } from \"../svg/send.svg\";\nimport { apiUrl } from \"../elements/testApiUrl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet stompClient = null;\n\nconst Chat = () => {\n  _s();\n\n  const token = {\n    Authorization: sessionStorage.getItem(\"token\") ? sessionStorage.getItem(\"token\") : \"Authorization\"\n  };\n  const username = sessionStorage.getItem(\"nickname\");\n  const uid = sessionStorage.getItem(\"uid\");\n  const is_login = sessionStorage.getItem(\"is_Login\");\n  const [welcome, setWelcome] = React.useState(new Map());\n  const [publicChats, setPublicChats] = React.useState([]);\n  const [connected, setConnected] = React.useState(false);\n  const [tab, setTab] = React.useState(\"CHATROOM\");\n  const [user, setUser] = React.useState(0);\n  const [time, setTime] = React.useState(\"\");\n  const [userData, setUserData] = React.useState({\n    username: \"\",\n    message: \"\",\n    opposingUserName: \"\"\n  });\n  React.useEffect(() => {\n    stompConnect();\n    return () => {\n      stompDisConnect();\n    };\n  }, []);\n\n  const onKeyPress = e => {\n    if (e.key == \"Enter\") {\n      sendPublicMessage();\n    }\n  };\n\n  const stompDisConnect = () => {\n    try {\n      const user_join = {\n        status: \"OUT\"\n      };\n      stompClient.send(\"/app/message\", {}, JSON.stringify(user_join));\n      stompClient.disconnect(() => {\n        stompClient.unsubscribe(\"/topic/greetings\");\n      }, token);\n    } catch (err) {}\n  };\n\n  const handleValue = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setUserData({ ...userData,\n      [name]: value\n    });\n  };\n\n  const stompConnect = () => {\n    let socket = new SockJs(`${apiUrl}/ws`);\n    stompClient = Stomp.over(socket);\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const onConnected = () => {\n    try {\n      const username = sessionStorage.getItem(\"nickname\");\n      const crareer = sessionStorage.getItem(\"career\");\n      const userImage = sessionStorage.getItem(\"userImage\");\n      const user_join = {\n        status: \"JOIN\",\n        uid,\n        pid: 0\n      };\n      setConnected(true);\n      setUserData({ ...userData,\n        crareer,\n        status: \"JOIN\"\n      });\n      stompClient.send(\"/app/hello\", {}, JSON.stringify({\n        username\n      }));\n      stompClient.send(\"/app/message\", token, JSON.stringify(user_join));\n      stompClient.subscribe(\"/topic/greetings\", onPublicMessageReceived, token);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const sendPublicMessage = () => {\n    if (is_login) {\n      const username = sessionStorage.getItem(\"nickname\");\n\n      if (stompClient) {\n        if (!userData.message) {\n          Swal.fire(\"\", \"내용을 입력해주세요!\", \"error\");\n        } else {\n          let chatMessage = {\n            senderName: username,\n            message: userData.message,\n            status: \"MESSAGE\",\n            uid,\n            pid: 0\n          };\n          stompClient.send(\"/app/message\", token, JSON.stringify(chatMessage));\n          setUserData({ ...userData,\n            message: \"\"\n          });\n        }\n      }\n    } else {\n      Swal.fire(\"\", \"로그인 후 사용할 수 있습니다:)\", \"error\");\n    }\n  }; //subscribe의 함수\n\n\n  const onPublicMessageReceived = payload => {\n    let payloadData = JSON.parse(payload.body);\n\n    switch (payloadData.status) {\n      case \"JOIN\":\n        if (!welcome.get(payloadData.senderName)) {\n          welcome.set(payloadData.message, []);\n          setWelcome(new Map(welcome));\n          setUser(payloadData.userCount);\n        }\n\n        break;\n\n      case \"OUT\":\n        if (!welcome.get(payloadData.senderName)) {\n          console.log(payloadData);\n          welcome.set(payloadData.message, []);\n          setWelcome(new Map(welcome));\n          setUser(payloadData.userCount);\n        }\n\n        break;\n\n      case \"MESSAGE\":\n        const time1 = payloadData.createdAt.split(\"T\")[1]; //년월 제거\n\n        const time2 = time1.split(\".\")[0]; // 소수점 제거\n\n        const time3 = time2.split(\":\")[0] + \":\" + time2.split(\":\")[1]; // 시간, 분\n\n        setTime(time3);\n        publicChats.push(payloadData);\n        setPublicChats([...publicChats]);\n        setUser(payloadData.userCount);\n        break;\n    }\n  };\n\n  const onError = err => {\n    console.log(err);\n    console.log(\"plz\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChatDiv, {\n    children: [/*#__PURE__*/_jsxDEV(ChatTab, {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => {\n          setTab(\"CHATROOM\");\n        },\n        children: [\"\\uCC44\\uD305 \", user]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatList, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [[...welcome.keys()].map((name, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"welcome\",\n            children: name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this);\n        }), publicChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: ` ${chat.senderName === username ? \"self\" : \"user\"}`,\n          children: [chat.senderName !== username && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Profile, {\n              size: \"32\",\n              imgUrl: userData.userImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: chat.senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                children: userData.crareer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message-data\",\n            children: chat.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), time.split[0] > 12 ? /*#__PURE__*/_jsxDEV(\"em\", {\n            children: [\" \", time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"em\", {\n            children: [\" \", time, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 56\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"message\",\n          value: userData.message,\n          placeholder: \"\\uCC44\\uD305\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694 :)\",\n          onChange: handleValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onKeyPress: onKeyPress,\n          children: /*#__PURE__*/_jsxDEV(SendSvg, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"Ts2/OGj7bwXC2rQS4PbtUWFxhrY=\");\n\n_c = Chat;\nconst ChatDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 102px);\n  background-color: #f9f8ff;\n  border-radius: 8px;\n  overflow: hidden;\n`;\n_c2 = ChatDiv;\nconst ChatTab = styled.ul`\n  display: flex;\n  flex: none;\n  overflow: auto;\n\n  li {\n    padding: 0 22px;\n    margin: 0 10px;\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 58px;\n    color: #5e45f2;\n    border-bottom: solid 3px #5e45f2;\n  }\n`;\n_c3 = ChatTab;\nconst ChatList = styled.div`\n  flex: auto;\n  padding: 0 10px;\n  overflow: auto;\n\n  ul {\n    padding-top: 30px;\n    overflow: hidden;\n  }\n\n  li {\n    width: 286px;\n\n    p {\n      padding: 8px;\n      word-break: break-all;\n      border-radius: 8px;\n    }\n\n    &.welcome {\n      color: #5e45f2;\n    }\n\n    &.user {\n      position: relative;\n      padding-left: 36px;\n      padding-right: 10px;\n\n      strong {\n        font-size: 14px;\n        color: #5e45f2;\n      }\n\n      p {\n        margin-top: 8px;\n        color: #333;\n        background-color: #fff;\n        box-shadow: 0 4px 14px 0 rgba(65, 0, 131, 0.06);\n      }\n\n      em {\n        display: block;\n        text-align: right;\n      }\n    }\n\n    &.self {\n      margin: 12px 0;\n      margin-left: auto;\n\n      p {\n        color: #fff;\n        background-color: #7966ff;\n      }\n    }\n  }\n\n  span {\n    position: absolute;\n    top: 0;\n    left: 0;\n    box-shadow: 0 0 4px 0 rgba(121, 102, 255, 0.2);\n  }\n\n  i {\n    color: #797979;\n    font-size: 12px;\n    font-style: normal;\n\n    &:before {\n      --dat-size: 2px;\n      content: \".\";\n      margin: 0 6px;\n      font-size: 16px;\n      vertical-align: super;\n    }\n  }\n\n  em {\n    display: block;\n    margin-top: 10px;\n    color: #797979;\n    font-size: 12px;\n    font-style: normal;\n  }\n`;\n_c4 = ChatList;\nconst ChatInput = styled.div`\n  padding: 24px 16px;\n  background-color: #f9f8ff;\n  box-shadow: 0 -4px 10px 0 rgba(133, 47, 243, 0.05);\n\n  > div {\n    display: flex;\n    align-items: center;\n    height: 42px;\n    padding: 8px 14px;\n    overflow: hidden;\n    border-radius: 10px;\n    box-shadow: inset 0 2px 6px 0 rgba(60, 4, 105, 0.08);\n    background-color: #fff;\n  }\n\n  input {\n    flex: auto;\n    padding: 0;\n    background-color: transparent;\n  }\n\n  button {\n    flex: none;\n    svg {\n      vertical-align: middle;\n    }\n  }\n`;\n_c5 = ChatInput;\nexport default Chat;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"ChatDiv\");\n$RefreshReg$(_c3, \"ChatTab\");\n$RefreshReg$(_c4, \"ChatList\");\n$RefreshReg$(_c5, \"ChatInput\");","map":{"version":3,"sources":["/Users/cyj/sun/src/components/Chat.js"],"names":["React","Stomp","over","SockJs","Profile","styled","Swal","ReactComponent","SendSvg","apiUrl","stompClient","Chat","token","Authorization","sessionStorage","getItem","username","uid","is_login","welcome","setWelcome","useState","Map","publicChats","setPublicChats","connected","setConnected","tab","setTab","user","setUser","time","setTime","userData","setUserData","message","opposingUserName","useEffect","stompConnect","stompDisConnect","onKeyPress","e","key","sendPublicMessage","user_join","status","send","JSON","stringify","disconnect","unsubscribe","err","handleValue","value","name","target","socket","connect","onConnected","onError","crareer","userImage","pid","subscribe","onPublicMessageReceived","console","log","fire","chatMessage","senderName","payload","payloadData","parse","body","get","set","userCount","time1","createdAt","split","time2","time3","push","keys","map","index","chat","ChatDiv","div","ChatTab","ul","ChatList","ChatInput"],"mappings":"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AS,EAAC,cAAb;AAAA,sBAA6B0B,IAAI,CAACnD;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAZF,EAaGJ,IAAI,CAACgD,KAAL,CAAW,CAAX,IAAgB,EAAhB,gBAAqB;AAAA,4BAAMhD,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA,kBAArB,gBAAwC;AAAA,4BAAMA,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA,kBAb3C;AAAA,WAEOsD,KAFP;AAAA;AAAA;AAAA;AAAA,gBADD,CATH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF,eAsCE,QAAC,SAAD;AAAA,6BACE;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,SAFP;AAGE,UAAA,KAAK,EAAEpD,QAAQ,CAACE,OAHlB;AAIE,UAAA,WAAW,EAAC,4DAJd;AAKE,UAAA,QAAQ,EAAEiB;AALZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAQ,UAAA,UAAU,EAAEZ,UAApB;AAAA,iCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD,CArMD;;GAAM7B,I;;KAAAA,I;AAuMN,MAAM4E,OAAO,GAAGlF,MAAM,CAACmF,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMD,O;AASN,MAAME,OAAO,GAAGpF,MAAM,CAACqF,EAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;MAAMD,O;AAgBN,MAAME,QAAQ,GAAGtF,MAAM,CAACmF,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArFA;MAAMG,Q;AAuFN,MAAMC,SAAS,GAAGvF,MAAM,CAACmF,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5BA;MAAMI,S;AA8BN,eAAejF,IAAf","sourcesContent":["import React from \"react\";\nimport Stomp, { over } from \"stompjs\";\nimport SockJs from \"sockjs-client\";\nimport Profile from \"../elements/Profile\";\nimport styled from \"styled-components\";\nimport Swal from \"sweetalert2\";\nimport { ReactComponent as SendSvg } from \"../svg/send.svg\";\n\nimport { apiUrl } from \"../elements/testApiUrl\";\n\nlet stompClient = null;\nconst Chat = () => {\n  const token = {\n    Authorization: sessionStorage.getItem(\"token\")\n      ? sessionStorage.getItem(\"token\")\n      : \"Authorization\",\n  };\n  const username = sessionStorage.getItem(\"nickname\");\n\n  const uid = sessionStorage.getItem(\"uid\");\n  const is_login = sessionStorage.getItem(\"is_Login\");\n  const [welcome, setWelcome] = React.useState(new Map());\n  const [publicChats, setPublicChats] = React.useState([]);\n  const [connected, setConnected] = React.useState(false);\n  const [tab, setTab] = React.useState(\"CHATROOM\");\n  const [user, setUser] = React.useState(0);\n  const [time, setTime] = React.useState(\"\");\n  const [userData, setUserData] = React.useState({\n    username: \"\",\n    message: \"\",\n    opposingUserName: \"\",\n  });\n\n  React.useEffect(() => {\n    stompConnect();\n\n    return () => {\n      stompDisConnect();\n    };\n  }, []);\n\n  const onKeyPress = (e) => {\n    if (e.key == \"Enter\") {\n      sendPublicMessage();\n    }\n  };\n\n  const stompDisConnect = () => {\n    try {\n      const user_join = { status: \"OUT\" };\n      stompClient.send(\"/app/message\", {}, JSON.stringify(user_join));\n\n      stompClient.disconnect(() => {\n        stompClient.unsubscribe(\"/topic/greetings\");\n      }, token);\n    } catch (err) {}\n  };\n\n  const handleValue = (e) => {\n    const { value, name } = e.target;\n    setUserData({ ...userData, [name]: value });\n  };\n  const stompConnect = () => {\n    let socket = new SockJs(`${apiUrl}/ws`);\n    stompClient = Stomp.over(socket);\n\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const onConnected = () => {\n    try {\n      const username = sessionStorage.getItem(\"nickname\");\n      const crareer = sessionStorage.getItem(\"career\");\n      const userImage = sessionStorage.getItem(\"userImage\");\n      const user_join = { status: \"JOIN\", uid, pid: 0 };\n\n      setConnected(true);\n      setUserData({\n        ...userData,\n        crareer,\n        status: \"JOIN\",\n      });\n\n      stompClient.send(\"/app/hello\", {}, JSON.stringify({ username }));\n      stompClient.send(\"/app/message\", token, JSON.stringify(user_join));\n      stompClient.subscribe(\"/topic/greetings\", onPublicMessageReceived, token);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const sendPublicMessage = () => {\n    if (is_login) {\n      const username = sessionStorage.getItem(\"nickname\");\n\n      if (stompClient) {\n        if (!userData.message) {\n          Swal.fire(\"\", \"내용을 입력해주세요!\", \"error\");\n        } else {\n          let chatMessage = {\n            senderName: username,\n            message: userData.message,\n            status: \"MESSAGE\",\n            uid,\n            pid: 0,\n          };\n\n          stompClient.send(\"/app/message\", token, JSON.stringify(chatMessage));\n          setUserData({ ...userData, message: \"\" });\n        }\n      }\n    } else {\n      Swal.fire(\"\", \"로그인 후 사용할 수 있습니다:)\", \"error\");\n    }\n  };\n\n  //subscribe의 함수\n  const onPublicMessageReceived = (payload) => {\n    let payloadData = JSON.parse(payload.body);\n\n    switch (payloadData.status) {\n      case \"JOIN\":\n        if (!welcome.get(payloadData.senderName)) {\n          welcome.set(payloadData.message, []);\n          setWelcome(new Map(welcome));\n          setUser(payloadData.userCount);\n        }\n        break;\n      case \"OUT\":\n        if (!welcome.get(payloadData.senderName)) {\n          console.log(payloadData);\n          welcome.set(payloadData.message, []);\n          setWelcome(new Map(welcome));\n          setUser(payloadData.userCount);\n        }\n        break;\n      case \"MESSAGE\":\n        const time1 = payloadData.createdAt.split(\"T\")[1]; //년월 제거\n        const time2 = time1.split(\".\")[0]; // 소수점 제거\n        const time3 = time2.split(\":\")[0] + \":\" + time2.split(\":\")[1]; // 시간, 분\n        setTime(time3);\n        publicChats.push(payloadData);\n        setPublicChats([...publicChats]);\n        setUser(payloadData.userCount);\n        break;\n    }\n  };\n\n  const onError = (err) => {\n    console.log(err);\n    console.log(\"plz\");\n  };\n\n  return (\n    <ChatDiv>\n      <ChatTab>\n        <li\n          onClick={() => {\n            setTab(\"CHATROOM\");\n          }}>\n          채팅 {user}\n        </li>\n      </ChatTab>\n      <ChatList>\n        <ul>\n          {[...welcome.keys()].map((name, index) => {\n            return (\n              <li className='welcome' key={index}>\n                {name}\n              </li>\n            );\n          })}\n\n          {publicChats.map((chat, index) => (\n            <li\n              className={` ${chat.senderName === username ? \"self\" : \"user\"}`}\n              key={index}>\n              {chat.senderName !== username && (\n                <>\n                  <Profile size='32' imgUrl={userData.userImage} />\n                  <div>\n                    <strong>{chat.senderName}</strong>\n                    <i>{userData.crareer}</i>\n                  </div>\n                </>\n              )}\n              <p className='message-data'>{chat.message}</p>\n              {time.split[0] > 12 ? <em> {time}</em> : <em> {time} </em>}\n            </li>\n          ))}\n        </ul>\n      </ChatList>\n      <ChatInput>\n        <div>\n          <input\n            type='text'\n            name='message'\n            value={userData.message}\n            placeholder='채팅을 입력해주세요 :)'\n            onChange={handleValue}\n          />\n          <button onKeyPress={onKeyPress}>\n            <SendSvg />\n          </button>\n        </div>\n      </ChatInput>\n    </ChatDiv>\n  );\n};\n\nconst ChatDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 102px);\n  background-color: #f9f8ff;\n  border-radius: 8px;\n  overflow: hidden;\n`;\n\nconst ChatTab = styled.ul`\n  display: flex;\n  flex: none;\n  overflow: auto;\n\n  li {\n    padding: 0 22px;\n    margin: 0 10px;\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 58px;\n    color: #5e45f2;\n    border-bottom: solid 3px #5e45f2;\n  }\n`;\n\nconst ChatList = styled.div`\n  flex: auto;\n  padding: 0 10px;\n  overflow: auto;\n\n  ul {\n    padding-top: 30px;\n    overflow: hidden;\n  }\n\n  li {\n    width: 286px;\n\n    p {\n      padding: 8px;\n      word-break: break-all;\n      border-radius: 8px;\n    }\n\n    &.welcome {\n      color: #5e45f2;\n    }\n\n    &.user {\n      position: relative;\n      padding-left: 36px;\n      padding-right: 10px;\n\n      strong {\n        font-size: 14px;\n        color: #5e45f2;\n      }\n\n      p {\n        margin-top: 8px;\n        color: #333;\n        background-color: #fff;\n        box-shadow: 0 4px 14px 0 rgba(65, 0, 131, 0.06);\n      }\n\n      em {\n        display: block;\n        text-align: right;\n      }\n    }\n\n    &.self {\n      margin: 12px 0;\n      margin-left: auto;\n\n      p {\n        color: #fff;\n        background-color: #7966ff;\n      }\n    }\n  }\n\n  span {\n    position: absolute;\n    top: 0;\n    left: 0;\n    box-shadow: 0 0 4px 0 rgba(121, 102, 255, 0.2);\n  }\n\n  i {\n    color: #797979;\n    font-size: 12px;\n    font-style: normal;\n\n    &:before {\n      --dat-size: 2px;\n      content: \".\";\n      margin: 0 6px;\n      font-size: 16px;\n      vertical-align: super;\n    }\n  }\n\n  em {\n    display: block;\n    margin-top: 10px;\n    color: #797979;\n    font-size: 12px;\n    font-style: normal;\n  }\n`;\n\nconst ChatInput = styled.div`\n  padding: 24px 16px;\n  background-color: #f9f8ff;\n  box-shadow: 0 -4px 10px 0 rgba(133, 47, 243, 0.05);\n\n  > div {\n    display: flex;\n    align-items: center;\n    height: 42px;\n    padding: 8px 14px;\n    overflow: hidden;\n    border-radius: 10px;\n    box-shadow: inset 0 2px 6px 0 rgba(60, 4, 105, 0.08);\n    background-color: #fff;\n  }\n\n  input {\n    flex: auto;\n    padding: 0;\n    background-color: transparent;\n  }\n\n  button {\n    flex: none;\n    svg {\n      vertical-align: middle;\n    }\n  }\n`;\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}