{"ast":null,"code":"var _jsxFileName = \"/Users/cyj/sun/src/components/ImgUpload.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { ReactComponent as ImgSvg } from \"../svg/img.svg\";\nimport { useLocation } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { actionCreators as answerActions } from \"../redux/modules/answer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImgUpload = _ref => {\n  _s();\n\n  let {\n    isEdit = null,\n    editImg = null,\n    cleanImg = null\n  } = _ref;\n  const dispatch = useDispatch();\n  const fileInput = React.useRef();\n  const [preImg, setPreImg] = React.useState(\"\");\n  const location = useLocation();\n  const pathName = location.pathname.indexOf(\"/detail\") >= 0;\n  React.useEffect(() => {\n    if (cleanImg === \"\") {\n      fileInput.current.value = \"\";\n      setPreImg(\"\");\n    }\n  }, [cleanImg]);\n\n  const onChange = e => {\n    const file = fileInput.current.files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      setPreImg(reader.result);\n    };\n\n    if (pathName) {\n      dispatch(answerActions.asImgPost(file));\n    } else {\n      dispatch(postActions.imgPost(file));\n    }\n  };\n\n  if (isEdit) {\n    return /*#__PURE__*/_jsxDEV(ImgWrap, {\n      className: \"img_load\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"editImg\",\n        children: [/*#__PURE__*/_jsxDEV(ImgSvg, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uCCA8\\uBD80\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChange,\n        id: \"editImg\",\n        type: \"file\",\n        ref: fileInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img_box\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: preImg ? preImg : editImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ImgWrap, {\n    className: \"img_load\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"img\",\n      children: [/*#__PURE__*/_jsxDEV(ImgSvg, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uCCA8\\uBD80\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onChange,\n      id: \"img\",\n      type: \"file\",\n      ref: fileInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), preImg && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img_box\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImgUpload, \"mCDzrrRys4FhfNuW11RD1YCMKKs=\", false, function () {\n  return [useDispatch, useLocation];\n});\n\n_c = ImgUpload;\nconst ImgWrap = styled.div`\n  display: flex;\n  gap: 24px;\n  width: 100%;\n  font-weight: 700;\n  border-bottom: solid 1px #ccc;\n\n  .img_box {\n    flex: auto;\n  }\n\n  > label {\n    flex: none;\n    display: flex;\n    align-items: center;\n    padding: 24px;\n    cursor: pointer;\n  }\n\n  input {\n    display: none !important;\n  }\n\n  svg {\n    display: inline-block;\n    fill: #797979;\n    width: 24px;\n    height: 24px;\n    margin-right: 8px;\n  }\n\n  span {\n    color: #797979;\n  }\n\n  img {\n    max-width: 100%;\n  }\n`;\n_c2 = ImgWrap;\nexport default ImgUpload;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ImgUpload\");\n$RefreshReg$(_c2, \"ImgWrap\");","map":{"version":3,"sources":["/Users/cyj/sun/src/components/ImgUpload.js"],"names":["React","styled","ReactComponent","ImgSvg","useLocation","useDispatch","actionCreators","postActions","answerActions","ImgUpload","isEdit","editImg","cleanImg","dispatch","fileInput","useRef","preImg","setPreImg","useState","location","pathName","pathname","indexOf","useEffect","current","value","onChange","e","file","files","reader","FileReader","readAsDataURL","onloadend","result","asImgPost","imgPost","ImgWrap","div"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { ReactComponent as ImgSvg } from \"../svg/img.svg\";\nimport { useLocation } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { actionCreators as answerActions } from \"../redux/modules/answer\";\n\nconst ImgUpload = ({ isEdit = null, editImg = null, cleanImg = null }) => {\n  const dispatch = useDispatch();\n  const fileInput = React.useRef();\n  const [preImg, setPreImg] = React.useState(\"\");\n  const location = useLocation();\n  const pathName = location.pathname.indexOf(\"/detail\") >= 0;\n\n  React.useEffect(() => {\n    if (cleanImg === \"\") {\n      fileInput.current.value = \"\";\n      setPreImg(\"\");\n    }\n  }, [cleanImg]);\n\n  const onChange = (e) => {\n    const file = fileInput.current.files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreImg(reader.result);\n    };\n\n    if (pathName) {\n      dispatch(answerActions.asImgPost(file));\n    } else {\n      dispatch(postActions.imgPost(file));\n    }\n  };\n\n  if (isEdit) {\n    return (\n      <ImgWrap className='img_load'>\n        <label htmlFor='editImg'>\n          <ImgSvg className='icon' />\n          <span>첨부하기</span>\n        </label>\n        <input onChange={onChange} id='editImg' type='file' ref={fileInput} />\n        <div className='img_box'>\n          <img src={preImg ? preImg : editImg} />\n        </div>\n      </ImgWrap>\n    );\n  }\n\n  return (\n    <ImgWrap className='img_load'>\n      <label htmlFor='img'>\n        <ImgSvg className='icon' />\n        <span>이미지 첨부하기</span>\n      </label>\n      <input onChange={onChange} id='img' type='file' ref={fileInput} />\n      {preImg && (\n        <div className='img_box'>\n          <img src={preImg} />\n        </div>\n      )}\n    </ImgWrap>\n  );\n};\n\nconst ImgWrap = styled.div`\n  display: flex;\n  gap: 24px;\n  width: 100%;\n  font-weight: 700;\n  border-bottom: solid 1px #ccc;\n\n  .img_box {\n    flex: auto;\n  }\n\n  > label {\n    flex: none;\n    display: flex;\n    align-items: center;\n    padding: 24px;\n    cursor: pointer;\n  }\n\n  input {\n    display: none !important;\n  }\n\n  svg {\n    display: inline-block;\n    fill: #797979;\n    width: 24px;\n    height: 24px;\n    margin-right: 8px;\n  }\n\n  span {\n    color: #797979;\n  }\n\n  img {\n    max-width: 100%;\n  }\n`;\n\nexport default ImgUpload;\n"]},"metadata":{},"sourceType":"module"}