{"ast":null,"code":"var _jsxFileName = \"/Users/cyj/sun/src/components/Comment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as commentActions } from \"../redux/modules/comment\";\nimport answer from \"../redux/modules/answer\";\nimport RoundBtn from \"../elements/RoundBtn\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comment = _ref => {\n  _s();\n\n  let {\n    list\n  } = _ref;\n  const dispatch = useDispatch();\n  const pid = useParams().pid;\n  const uid = sessionStorage.getItem(\"uid\");\n  const answerId = list.answerId;\n  const [comment, setComment] = React.useState(\"\");\n  const C = Object.keys(list.commnetResponseDtoList).length; // console.log(uid);\n  // console.log(state.answer);\n  // console.log(pid);\n  // React.useEffect(() => {\n  //     dispatch()\n  // })\n\n  const addComment = () => {\n    dispatch(commentActions.addCommentDB(uid, pid, answerId, comment));\n  };\n\n  const onChange = e => {\n    setComment(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(CommentInput, {\n      children: [/*#__PURE__*/_jsxDEV(CommentWrite, {\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoundBtn, {\n        onClick: addComment,\n        title: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comment, \"nm4xM6xXoVQvsRGMq1J99uBQFN0=\", false, function () {\n  return [useDispatch, useParams];\n});\n\n_c = Comment;\nconst Container = styled.div`\n  display: flex;\n`;\n_c2 = Container;\nconst CommentCount = styled.div`\n  flex: none;\n  font-weight: 700;\n  margin-right: 22px;\n`;\nconst CommentInput = styled.div`\n  flex: auto;\n  display: flex;\n  gap: 24px;\n  align-items: center;\n  justify-content: space-between;\n  height: 80px;\n  /* border: 1px solid #c5c5c5; */\n  overflow: hidden;\n`;\n_c3 = CommentInput;\nconst CommentWrite = styled.textarea`\n  flex: auto;\n  height: 100%;\n  padding: 14px;\n  border-radius: 8px;\n  background-color: #fbfbfd;\n`;\n_c4 = CommentWrite;\nconst Buttom = styled.button`\n  flex: none;\n  padding: 10px 32px;\n  margin-left: 10px;\n  color: #fff;\n  font-size: 16px;\n  border-radius: 30px;\n  background-color: #7966ff;\n`;\nexport default Comment;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Comment\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"CommentInput\");\n$RefreshReg$(_c4, \"CommentWrite\");","map":{"version":3,"sources":["/Users/cyj/sun/src/components/Comment.js"],"names":["React","useState","styled","useSelector","useDispatch","actionCreators","commentActions","answer","RoundBtn","useParams","Comment","list","dispatch","pid","uid","sessionStorage","getItem","answerId","comment","setComment","C","Object","keys","commnetResponseDtoList","length","addComment","addCommentDB","onChange","e","target","value","Container","div","CommentCount","CommentInput","CommentWrite","textarea","Buttom","button"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAc,IAAIC,cAA3B,QAAiD,0BAAjD;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,OAAO,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC5B,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,GAAG,GAAGJ,SAAS,GAAGI,GAAxB;AACA,QAAMC,GAAG,GAAGC,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAZ;AACA,QAAMC,QAAQ,GAAGN,IAAI,CAACM,QAAtB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBnB,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B;AACA,QAAMmB,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYX,IAAI,CAACY,sBAAjB,EAAyCC,MAAnD,CAN4B,CAO5B;AACA;AACA;AAEA;AACA;AACA;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvBb,IAAAA,QAAQ,CAACN,cAAc,CAACoB,YAAf,CAA4BZ,GAA5B,EAAiCD,GAAjC,EAAsCI,QAAtC,EAAgDC,OAAhD,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMS,QAAQ,GAAIC,CAAD,IAAO;AACtBT,IAAAA,UAAU,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD;;AAIA,sBACE,QAAC,SAAD;AAAA,2BAEE,QAAC,YAAD;AAAA,8BACE,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAEH;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEF,UAAnB;AAA+B,QAAA,KAAK,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAhCD;;GAAMf,O;UACaN,W,EACLK,S;;;KAFRC,O;AAkCN,MAAMqB,SAAS,GAAG7B,MAAM,CAAC8B,GAAI;AAC7B;AACA,CAFA;MAAMD,S;AAIN,MAAME,YAAY,GAAG/B,MAAM,CAAC8B,GAAI;AAChC;AACA;AACA;AACA,CAJA;AAMA,MAAME,YAAY,GAAGhC,MAAM,CAAC8B,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAME,Y;AAWN,MAAMC,YAAY,GAAGjC,MAAM,CAACkC,QAAS;AACrC;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,Y;AAQN,MAAME,MAAM,GAAGnC,MAAM,CAACoC,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,eAAe5B,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as commentActions } from \"../redux/modules/comment\";\nimport answer from \"../redux/modules/answer\";\nimport RoundBtn from \"../elements/RoundBtn\";\nimport { useParams } from \"react-router-dom\";\n\nconst Comment = ({ list }) => {\n  const dispatch = useDispatch();\n  const pid = useParams().pid;\n  const uid = sessionStorage.getItem(\"uid\");\n  const answerId = list.answerId;\n  const [comment, setComment] = React.useState(\"\");\n  const C = Object.keys(list.commnetResponseDtoList).length;\n  // console.log(uid);\n  // console.log(state.answer);\n  // console.log(pid);\n\n  // React.useEffect(() => {\n  //     dispatch()\n  // })\n\n  const addComment = () => {\n    dispatch(commentActions.addCommentDB(uid, pid, answerId, comment));\n  };\n\n  const onChange = (e) => {\n    setComment(e.target.value);\n  };\n\n  return (\n    <Container>\n      {/* <CommentCount>댓글 {C}</CommentCount> */}\n      <CommentInput>\n        <CommentWrite onChange={onChange} />\n        <RoundBtn onClick={addComment} title='등록' />\n      </CommentInput>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nconst CommentCount = styled.div`\n  flex: none;\n  font-weight: 700;\n  margin-right: 22px;\n`;\n\nconst CommentInput = styled.div`\n  flex: auto;\n  display: flex;\n  gap: 24px;\n  align-items: center;\n  justify-content: space-between;\n  height: 80px;\n  /* border: 1px solid #c5c5c5; */\n  overflow: hidden;\n`;\n\nconst CommentWrite = styled.textarea`\n  flex: auto;\n  height: 100%;\n  padding: 14px;\n  border-radius: 8px;\n  background-color: #fbfbfd;\n`;\n\nconst Buttom = styled.button`\n  flex: none;\n  padding: 10px 32px;\n  margin-left: 10px;\n  color: #fff;\n  font-size: 16px;\n  border-radius: 30px;\n  background-color: #7966ff;\n`;\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}