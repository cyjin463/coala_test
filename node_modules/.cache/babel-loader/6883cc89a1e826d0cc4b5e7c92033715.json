{"ast":null,"code":"import axios from\"axios\";import{apiUrl}from\"../elements/testApiUrl\";// 사용자 정의 인스턴스 기본 설정 참고 (https://yamoo9.github.io/axios/guide/config-defaults.html#%EA%B8%80%EB%A1%9C%EB%B2%8C-axios-%EA%B8%B0%EB%B3%B8-defaults-%EC%84%A4%EC%A0%95)\nvar instance=axios.create({baseURL:apiUrl,headers:{\"content-type\":\"application/json;charset=UTF-8\",// 자바스크립트는 json형태로 받아와야 한다.\naccept:\"application/json\"}});// Tip. html form 태그를 사용하여 post 방식으로 요청하거나, jQuery의 ajax 등의 요철을 할때\n// default Content-Type은 'application/json,'이 아니라 'application/x-www-form-urlencoded'다.\n// interceptors의 역할 => then이나 catch로 처리되기 전\n// 요청(request)이나 응답(response)을 가로채 어떠한 작업을 수행할 수 있게 한다. 참고 (https://yamoo9.github.io/axios/guide/interceptors.html)\ninstance.interceptors.request.use(function(config){var accessToken=sessionStorage.token;config.headers.common[\"Authorization\"]=\"\".concat(accessToken);// header에 토큰값을 넣는다 => header에 토큰값이 있어 앞으로 request를 자유자재로 할 수 있다.\nreturn config;});// 데이터 요청 to 서버\nexport var apis={// ==================== post api ====================//\ngetpost:function getpost(page){return instance.get(\"/post/get/check?page=\".concat(page,\"&size=10&sortBy=createdAt&isAsc=false\"));},getpostnocheck:function getpostnocheck(page){return instance.get(\"/post/get/nocheck?page=\".concat(page,\"&size=10&sortBy=createdAt&isAsc=false\"));},onepost:function onepost(pid){return instance.get(\"/post/detailget/\".concat(pid));},delpost:function delpost(pid){return instance.delete(\"/islogin/post/delete/\".concat(pid));},likepost:function likepost(uid,pid){return instance.post(\"/islogin/post/like\",{uid:uid,pid:pid});},// ==================== answer api ====================//\ngetanswer:function getanswer(pid){return instance.get(\"/answer/get/\".concat(pid));},addanswer:function addanswer(pid,uid,title,comment,img){return instance.post(\"/islogin/answer/\".concat(pid),{uid:uid,pid:pid,answerTitle:title,answerComment:comment,answerImg:img});},editanswer:function editanswer(answsrId,title,comment,img){return instance.put(\"/islogin/answer/revice/\".concat(answsrId),{answerTitle:title,answerComment:comment,answerImg:img});},delanswer:function delanswer(answsrId){return instance.delete(\"/islogin/answer/delete/\".concat(answsrId),{answsrId:answsrId});},chooseAnswer:function chooseAnswer(uid,pid,answerId,answerUid){return instance.post(\"/islogin/answer/like/\",{uid:uid,pid:pid,answerId:answerId,answerUid:answerUid});},tagsearch:function tagsearch(tag){return instance.get(\"\".concat(apiUrl,\"/tag/search/\").concat(tag));},totalRanking:function totalRanking(){return instance.get(\"/user/ranking/total\");},monthRanking:function monthRanking(){return instance.get(\"/user/ranking/month\");},weekRanking:function weekRanking(){return instance.get(\"/user/ranking/weekend\");},mytotalRanking:function mytotalRanking(){return instance.get(\"/islogin/ranking/total\");},mymonthRanking:function mymonthRanking(){return instance.get(\"/islogin/ranking/month\");},myweekRanking:function myweekRanking(){return instance.get(\"/islogin/ranking/weekend\");},myalarm:function myalarm(){return instance.get(\"/islogin/alarm\");},myalarmdel:function myalarmdel(alarmId){return instance.delete(\"/islogin/alarm/\".concat(alarmId));},mylikepost:function mylikepost(page){return instance.get(\"/islogin/get/like?page=\".concat(page,\"&size=10&sortBy=createdAt&isAsc=false\"));}};","map":{"version":3,"sources":["/Users/cyj/sun/src/shared/api.js"],"names":["axios","apiUrl","instance","create","baseURL","headers","accept","interceptors","request","use","config","accessToken","sessionStorage","token","common","apis","getpost","page","get","getpostnocheck","onepost","pid","delpost","delete","likepost","uid","post","getanswer","addanswer","title","comment","img","answerTitle","answerComment","answerImg","editanswer","answsrId","put","delanswer","chooseAnswer","answerId","answerUid","tagsearch","tag","totalRanking","monthRanking","weekRanking","mytotalRanking","mymonthRanking","myweekRanking","myalarm","myalarmdel","alarmId","mylikepost"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { apiUrl } from \"../elements/testApiUrl\";\n\n// 사용자 정의 인스턴스 기본 설정 참고 (https://yamoo9.github.io/axios/guide/config-defaults.html#%EA%B8%80%EB%A1%9C%EB%B2%8C-axios-%EA%B8%B0%EB%B3%B8-defaults-%EC%84%A4%EC%A0%95)\nconst instance = axios.create({\n  baseURL: apiUrl,\n  headers: {\n    \"content-type\": \"application/json;charset=UTF-8\", // 자바스크립트는 json형태로 받아와야 한다.\n    accept: \"application/json\",\n  },\n});\n// Tip. html form 태그를 사용하여 post 방식으로 요청하거나, jQuery의 ajax 등의 요철을 할때\n// default Content-Type은 'application/json,'이 아니라 'application/x-www-form-urlencoded'다.\n\n// interceptors의 역할 => then이나 catch로 처리되기 전\n// 요청(request)이나 응답(response)을 가로채 어떠한 작업을 수행할 수 있게 한다. 참고 (https://yamoo9.github.io/axios/guide/interceptors.html)\ninstance.interceptors.request.use(function (config) {\n  const accessToken = sessionStorage.token;\n  config.headers.common[\"Authorization\"] = `${accessToken}`; // header에 토큰값을 넣는다 => header에 토큰값이 있어 앞으로 request를 자유자재로 할 수 있다.\n  return config;\n});\n\n// 데이터 요청 to 서버\nexport const apis = {\n  // ==================== post api ====================//\n  getpost: (page) =>\n    instance.get(\n      `/post/get/check?page=${page}&size=10&sortBy=createdAt&isAsc=false`\n    ),\n\n  getpostnocheck: (page) =>\n    instance.get(\n      `/post/get/nocheck?page=${page}&size=10&sortBy=createdAt&isAsc=false`\n    ),\n\n  onepost: (pid) => instance.get(`/post/detailget/${pid}`),\n\n  delpost: (pid) => instance.delete(`/islogin/post/delete/${pid}`),\n\n  likepost: (uid, pid) =>\n    instance.post(`/islogin/post/like`, {\n      uid: uid,\n      pid: pid,\n    }),\n\n  // ==================== answer api ====================//\n  getanswer: (pid) => instance.get(`/answer/get/${pid}`),\n\n  addanswer: (pid, uid, title, comment, img) =>\n    instance.post(`/islogin/answer/${pid}`, {\n      uid: uid,\n      pid: pid,\n      answerTitle: title,\n      answerComment: comment,\n      answerImg: img,\n    }),\n\n  editanswer: (answsrId, title, comment, img) =>\n    instance.put(`/islogin/answer/revice/${answsrId}`, {\n      answerTitle: title,\n      answerComment: comment,\n      answerImg: img,\n    }),\n\n  delanswer: (answsrId) =>\n    instance.delete(`/islogin/answer/delete/${answsrId}`, {\n      answsrId: answsrId,\n    }),\n\n  chooseAnswer: (uid, pid, answerId, answerUid) =>\n    instance.post(`/islogin/answer/like/`, {\n      uid: uid,\n      pid: pid,\n      answerId: answerId,\n      answerUid: answerUid,\n    }),\n\n  tagsearch: (tag) => instance.get(`${apiUrl}/tag/search/${tag}`),\n  totalRanking: () => instance.get(`/user/ranking/total`),\n  monthRanking: () => instance.get(`/user/ranking/month`),\n  weekRanking: () => instance.get(`/user/ranking/weekend`),\n  mytotalRanking: () => instance.get(`/islogin/ranking/total`),\n  mymonthRanking: () => instance.get(`/islogin/ranking/month`),\n  myweekRanking: () => instance.get(`/islogin/ranking/weekend`),\n  myalarm: () => instance.get(`/islogin/alarm`),\n  myalarmdel: (alarmId) => instance.delete(`/islogin/alarm/${alarmId}`),\n  mylikepost: (page) =>\n    instance.get(\n      `/islogin/get/like?page=${page}&size=10&sortBy=createdAt&isAsc=false`\n    ),\n};\n"]},"metadata":{},"sourceType":"module"}