{"ast":null,"code":"import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport { apis } from \"../../shared/api\";\nconst TOTAL_RANKING = \"TOTAL_RANKING\";\nconst MONTH_RANKING = \"MONTH_RANKING\";\nconst WEEK_RANKING = \"WEEK_RANKING\";\nconst USER_LIST = \"USER_LIST\";\nconst initialState = {\n  list: [],\n  user_list: []\n};\nconst totalRanking = createAction(TOTAL_RANKING, list => ({\n  list\n}));\nconst monthRanking = createAction(MONTH_RANKING, list => ({\n  list\n}));\nconst weekRanking = createAction(WEEK_RANKING, list => ({\n  list\n}));\nconst userList = createAction(USER_LIST, list => ({\n  list\n})); // const myweekRanking = createAction(WEEK_RANKING, (list) => ({ list }));\n// const mymonthRanking = createAction(USER_LIST, (list) => ({ list }));\n\nconst totalRankingDB = () => {\n  return function (dispatch, getState, _ref) {\n    let {\n      history\n    } = _ref;\n    apis.totalRanking().then(res => {\n      dispatch(totalRanking(res.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nconst monthRankingDB = () => {\n  return function (dispatch, getState, _ref2) {\n    let {\n      history\n    } = _ref2;\n    apis.totalRanking().then(res => {\n      dispatch(monthRanking(res.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nconst weekRankingDB = () => {\n  return function (dispatch, getState, _ref3) {\n    let {\n      history\n    } = _ref3;\n    apis.totalRanking().then(res => {\n      dispatch(weekRanking(res.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nconst myTotalRankingDB = () => {\n  return function (dispatch, getState, _ref4) {\n    let {\n      history\n    } = _ref4;\n    apis.mytotalRanking().then(res => {\n      dispatch(userList(res.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nconst myMonthRankingDB = () => {\n  return function (dispatch, getState, _ref5) {\n    let {\n      history\n    } = _ref5;\n    apis.mymonthRanking().then(res => {\n      dispatch(userList(res.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nconst myWeekRankingDB = () => {\n  return function (dispatch, getState, _ref6) {\n    let {\n      history\n    } = _ref6;\n    apis.myweekRanking().then(res => {\n      dispatch(userList(res.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nexport default handleActions({\n  [TOTAL_RANKING]: (state, action) => produce(state, draft => {\n    draft.list = action.payload.list;\n  }),\n  [MONTH_RANKING]: (state, action) => produce(state, draft => {\n    draft.list = action.payload.list;\n  }),\n  [WEEK_RANKING]: (state, action) => produce(state, draft => {\n    draft.list = action.payload.list;\n  }),\n  [USER_LIST]: (state, action) => produce(state, draft => {\n    draft.user_list = action.payload.list;\n  })\n}, initialState);\nconst actionCreators = {\n  totalRankingDB,\n  monthRankingDB,\n  weekRankingDB,\n  myTotalRankingDB,\n  myMonthRankingDB,\n  myWeekRankingDB\n};\nexport { actionCreators };","map":{"version":3,"sources":["/Users/cyj/sun/src/redux/modules/ranking.js"],"names":["createAction","handleActions","produce","apis","TOTAL_RANKING","MONTH_RANKING","WEEK_RANKING","USER_LIST","initialState","list","user_list","totalRanking","monthRanking","weekRanking","userList","totalRankingDB","dispatch","getState","history","then","res","data","catch","err","console","log","monthRankingDB","weekRankingDB","myTotalRankingDB","mytotalRanking","myMonthRankingDB","mymonthRanking","myWeekRankingDB","myweekRanking","state","action","draft","payload","actionCreators"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\n\nimport { apis } from \"../../shared/api\";\nconst TOTAL_RANKING = \"TOTAL_RANKING\";\nconst MONTH_RANKING = \"MONTH_RANKING\";\nconst WEEK_RANKING = \"WEEK_RANKING\";\nconst USER_LIST = \"USER_LIST\";\n\nconst initialState = {\n  list: [],\n  user_list: [],\n};\n\nconst totalRanking = createAction(TOTAL_RANKING, (list) => ({ list }));\nconst monthRanking = createAction(MONTH_RANKING, (list) => ({ list }));\nconst weekRanking = createAction(WEEK_RANKING, (list) => ({ list }));\nconst userList = createAction(USER_LIST, (list) => ({ list }));\n// const myweekRanking = createAction(WEEK_RANKING, (list) => ({ list }));\n// const mymonthRanking = createAction(USER_LIST, (list) => ({ list }));\nconst totalRankingDB = () => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .totalRanking()\n      .then((res) => {\n        dispatch(totalRanking(res.data));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\nconst monthRankingDB = () => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .totalRanking()\n      .then((res) => {\n        dispatch(monthRanking(res.data));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\nconst weekRankingDB = () => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .totalRanking()\n      .then((res) => {\n        dispatch(weekRanking(res.data));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\nconst myTotalRankingDB = () => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .mytotalRanking()\n      .then((res) => {\n        dispatch(userList(res.data));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\nconst myMonthRankingDB = () => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .mymonthRanking()\n      .then((res) => {\n        dispatch(userList(res.data));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\nconst myWeekRankingDB = () => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .myweekRanking()\n      .then((res) => {\n        dispatch(userList(res.data));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\nexport default handleActions(\n  {\n    [TOTAL_RANKING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list = action.payload.list;\n      }),\n    [MONTH_RANKING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list = action.payload.list;\n      }),\n    [WEEK_RANKING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list = action.payload.list;\n      }),\n    [USER_LIST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.user_list = action.payload.list;\n      }),\n  },\n  initialState\n);\n\nconst actionCreators = {\n  totalRankingDB,\n  monthRankingDB,\n  weekRankingDB,\n  myTotalRankingDB,\n  myMonthRankingDB,\n  myWeekRankingDB,\n};\n\nexport { actionCreators };\n"]},"metadata":{},"sourceType":"module"}