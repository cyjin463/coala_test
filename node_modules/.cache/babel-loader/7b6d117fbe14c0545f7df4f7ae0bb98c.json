{"ast":null,"code":"var _jsxFileName = \"/Users/cyj/sun/src/components/NoticeBoard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport styled from \"styled-components\";\nimport _NoticeList from \"../elements/_NoticeList\";\nimport TabMenu from \"./TabMenu\";\nimport { ReactComponent as WriteSvg } from \"../svg/write.svg\";\nimport { history } from \"../redux/configureStore\";\nimport InfinityScroll from \"../shared/InfinityScroll\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoticeBoard = () => {\n  _s();\n\n  const tab_list = [{\n    title: \"nockeck\",\n    value: \"답변대기\"\n  }, {\n    title: \"check\",\n    value: \"답변완료\"\n  }];\n  const dispatch = useDispatch();\n  const [TabList, setTabList] = React.useState(tab_list[0].title);\n  const post_list = useSelector(state => state.post.list);\n  const post_nocheck = useSelector(state => state.post.nockeckList);\n  const postList = TabList === \"check\" ? post_list : post_nocheck; // 무한 스크롤\n\n  const [pageNum, setPageNum] = React.useState(1);\n  const viewport = React.useRef(null);\n  const target = React.useRef(null);\n\n  const loadItems = () => {\n    console.log(\"next\");\n  };\n\n  React.useEffect(() => {\n    if (TabList === \"check\") {\n      dispatch(postActions.getPostDB(1));\n    } else {\n      dispatch(postActions.getPostNocheckDB(1));\n    }\n\n    const options = {\n      root: viewport.current,\n      threshold: 0\n    };\n\n    const handleIntersection = (entries, observer) => {\n      entries.forEach(entry => {\n        if (!entry.isIntersecting) {\n          return;\n        }\n\n        loadItems();\n        observer.unobserve(entry.target);\n        observer.observe(target.current);\n      });\n    };\n\n    const io = new IntersectionObserver(handleIntersection, options);\n\n    if (target.current) {\n      io.observe(target.current);\n    }\n\n    return () => io && io.disconnect();\n  }, [TabList, viewport, target]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SC_NoticeDiv, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC804\\uCCB4 \\uAC8C\\uC2DC\\uBB3C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabMenu, {\n        tab_list: tab_list,\n        tab: setTabList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: viewport,\n        className: \"list_wrap\",\n        children: postList.map((v, idx) => {\n          const lastEl = idx === v.length - 1;\n          return /*#__PURE__*/_jsxDEV(TestBox, {\n            ref: lastEl ? target : null\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this) // <_NoticeList key={idx} list={v} target={target} lastEl={lastEl} />\n          ;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SC_BtnWrap, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            history.push(\"/create\");\n          },\n          children: [/*#__PURE__*/_jsxDEV(WriteSvg, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), \"\\uAE00\\uC4F0\\uAE30\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NoticeBoard, \"8vqVi/9Ij9vMLNiF2ragVw2m50c=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = NoticeBoard;\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.24);\n  z-index: 100;\n`;\nconst SC_NoticeDiv = styled.div`\n  width: calc(100% - 342px - 24px);\n  background-color: #fff;\n  border-radius: 8px;\n\n  h2 {\n    padding: 30px 20px;\n    font-weight: 700;\n  }\n  > ul {\n    margin: 0 24px;\n  }\n\n  .list_wrap {\n    margin: 30px;\n  }\n`;\n_c2 = SC_NoticeDiv;\nconst SC_BtnWrap = styled.div`\n  margin: 32px 24px 48px;\n  text-align: right;\n\n  button {\n    color: #fff;\n    padding: 16px 40px;\n    border-radius: 5px;\n    background-color: #7966ff;\n\n    svg {\n      vertical-align: middle;\n      margin-right: 16px;\n    }\n  }\n`;\n_c3 = SC_BtnWrap;\nconst TestBox = styled.div`\n  width: 300px;\n  background-color: #eee;\n  height: 400px;\n  margin: 40px;\n`;\n_c4 = TestBox;\nexport default NoticeBoard;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"NoticeBoard\");\n$RefreshReg$(_c2, \"SC_NoticeDiv\");\n$RefreshReg$(_c3, \"SC_BtnWrap\");\n$RefreshReg$(_c4, \"TestBox\");","map":{"version":3,"sources":["/Users/cyj/sun/src/components/NoticeBoard.js"],"names":["React","useSelector","useDispatch","actionCreators","postActions","styled","_NoticeList","TabMenu","ReactComponent","WriteSvg","history","InfinityScroll","NoticeBoard","tab_list","title","value","dispatch","TabList","setTabList","useState","post_list","state","post","list","post_nocheck","nockeckList","postList","pageNum","setPageNum","viewport","useRef","target","loadItems","console","log","useEffect","getPostDB","getPostNocheckDB","options","root","current","threshold","handleIntersection","entries","observer","forEach","entry","isIntersecting","unobserve","observe","io","IntersectionObserver","disconnect","map","v","idx","lastEl","length","push","Loading","div","SC_NoticeDiv","SC_BtnWrap","TestBox"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport styled from \"styled-components\";\nimport _NoticeList from \"../elements/_NoticeList\";\nimport TabMenu from \"./TabMenu\";\nimport { ReactComponent as WriteSvg } from \"../svg/write.svg\";\nimport { history } from \"../redux/configureStore\";\nimport InfinityScroll from \"../shared/InfinityScroll\";\n\nconst NoticeBoard = () => {\n  const tab_list = [\n    {\n      title: \"nockeck\",\n      value: \"답변대기\",\n    },\n    {\n      title: \"check\",\n      value: \"답변완료\",\n    },\n  ];\n  const dispatch = useDispatch();\n  const [TabList, setTabList] = React.useState(tab_list[0].title);\n  const post_list = useSelector((state) => state.post.list);\n  const post_nocheck = useSelector((state) => state.post.nockeckList);\n  const postList = TabList === \"check\" ? post_list : post_nocheck;\n\n  // 무한 스크롤\n  const [pageNum, setPageNum] = React.useState(1);\n  const viewport = React.useRef(null);\n  const target = React.useRef(null);\n\n  const loadItems = () => {\n    console.log(\"next\");\n  };\n\n  React.useEffect(() => {\n    if (TabList === \"check\") {\n      dispatch(postActions.getPostDB(1));\n    } else {\n      dispatch(postActions.getPostNocheckDB(1));\n    }\n\n    const options = {\n      root: viewport.current,\n      threshold: 0,\n    };\n\n    const handleIntersection = (entries, observer) => {\n      entries.forEach((entry) => {\n        if (!entry.isIntersecting) {\n          return;\n        }\n        loadItems();\n        observer.unobserve(entry.target);\n        observer.observe(target.current);\n      });\n    };\n\n    const io = new IntersectionObserver(handleIntersection, options);\n\n    if (target.current) {\n      io.observe(target.current);\n    }\n\n    return () => io && io.disconnect();\n  }, [TabList, viewport, target]);\n\n  return (\n    <React.Fragment>\n      <SC_NoticeDiv>\n        <h2>전체 게시물</h2>\n        <TabMenu tab_list={tab_list} tab={setTabList} />\n        <div ref={viewport} className='list_wrap'>\n          {postList.map((v, idx) => {\n            const lastEl = idx === v.length - 1;\n            return (\n              <TestBox key={idx} ref={lastEl ? target : null}></TestBox>\n              // <_NoticeList key={idx} list={v} target={target} lastEl={lastEl} />\n            );\n          })}\n        </div>\n        <SC_BtnWrap>\n          <button\n            onClick={() => {\n              history.push(\"/create\");\n            }}>\n            <WriteSvg />\n            글쓰기\n          </button>\n        </SC_BtnWrap>\n      </SC_NoticeDiv>\n    </React.Fragment>\n  );\n};\n\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.24);\n  z-index: 100;\n`;\n\nconst SC_NoticeDiv = styled.div`\n  width: calc(100% - 342px - 24px);\n  background-color: #fff;\n  border-radius: 8px;\n\n  h2 {\n    padding: 30px 20px;\n    font-weight: 700;\n  }\n  > ul {\n    margin: 0 24px;\n  }\n\n  .list_wrap {\n    margin: 30px;\n  }\n`;\n\nconst SC_BtnWrap = styled.div`\n  margin: 32px 24px 48px;\n  text-align: right;\n\n  button {\n    color: #fff;\n    padding: 16px 40px;\n    border-radius: 5px;\n    background-color: #7966ff;\n\n    svg {\n      vertical-align: middle;\n      margin-right: 16px;\n    }\n  }\n`;\nconst TestBox = styled.div`\n  width: 300px;\n  background-color: #eee;\n  height: 400px;\n  margin: 40px;\n`;\nexport default NoticeBoard;\n"]},"metadata":{},"sourceType":"module"}