{"ast":null,"code":"import _defineProperty from\"/Users/cyj/sun/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _toConsumableArray from\"/Users/cyj/sun/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/cyj/sun/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";var _handleActions;import{createAction,handleActions}from\"redux-actions\";import produce from\"immer\";import axios from\"axios\";import{apis}from\"../../shared/api\";import{apiUrl}from\"../../elements/testApiUrl\";var GET_POST=\"GET_POST\";var GET_ONE_POST=\"GET_ONE_POST\";var GET_POSTCHK=\"GET_POSTCHK\";var ADD_POST=\"ADD_POST\";var EDIT_POST=\"EDIT_POST\";var DEL_POST=\"DEL_POST\";var IMG_POST=\"IMG_POST\";var LOADING=\"LOADING\";var getPost=createAction(GET_POST,function(post){return{post:post};});var getPostNoChk=createAction(GET_POSTCHK,function(post){return{post:post};});var getOnePost=createAction(GET_ONE_POST,function(post){return{post:post};});var addPost=createAction(ADD_POST,function(post){return{post:post};});var editPost=createAction(EDIT_POST,function(post){return{post:post};});var delPost=createAction(DEL_POST,function(pid){return{pid:pid};});var imgPost=createAction(IMG_POST,function(preview){return{preview:preview};});var loading=createAction(LOADING,function(is_loading){return{is_loading:is_loading};});var initialState={list:[],one_list:[],nockeckList:[],preview:\"\",paging:{start:null,next:null,size:3},is_loading:false};// ===================================================================\n// ======================== 게시글 리스트 가지고오기========================\nvar getPostDB=function getPostDB(page){return function(dispatch,getState,_ref){var history=_ref.history;apis.getpost(page).then(function(res){var query=res.data;dispatch(getPost(query));}).catch(function(err){console.log(\"error get post\");});};};var getPostNocheckDB=function getPostNocheckDB(page){return function(dispatch,getState,_ref2){var history=_ref2.history;console.log(page);apis.getpostnocheck(page).then(function(res){var query=res.data;dispatch(getPostNoChk(query));}).catch(function(err){console.log(\"error get post\");});};};// ====================================================================\n// ======================== 선택한 게시글 가지고오기 ========================\nvar getOnePostDB=function getOnePostDB(pid){return function(dispatch,getState,_ref3){var history=_ref3.history;apis.onepost(pid).then(function(res){dispatch(getOnePost(res.data));}).catch(function(err){console.log(err);});};};// =====================================================================\n// ================================ 추가 ================================\nvar addPostDB=function addPostDB(props){return function(dispatch,getState,_ref4){var history=_ref4.history;var title=props.title,comment=props.comment,tags=props.tags,category=props.category;var token_res=sessionStorage.getItem(\"token\");var img_list=getState().post.preview;var formData=new FormData();formData.append(\"images\",img_list);if(!img_list){axios({method:\"post\",url:\"\".concat(apiUrl,\"/islogin/post/write\"),data:{postTitle:title,postComment:comment,postImg:null,tags:tags?tags:null,category:category},headers:{Authorization:\"\".concat(token_res)}}).then(function(res){dispatch(addPost({title:title,comment:comment,imgUrl:null,tags:tags?tags:null,pid:res.data}));history.replace(\"/\");});}else{axios.post(\"\".concat(apiUrl,\"/images/upload\"),formData,{headers:{\"Content-Type\":\"multipart/form-data\",Authorization:\"\".concat(token_res)}}).then(function(res){var imgUrl=res.data.url;return imgUrl;}).then(function(imgUrl){axios({method:\"post\",url:\"\".concat(apiUrl,\"/islogin/post/write\"),data:{postTitle:title,postComment:comment,postImg:imgUrl,tags:tags?tags:null,category:category},headers:{Authorization:\"\".concat(token_res)}}).then(function(res){dispatch(addPost({title:title,comment:comment,imgUrl:imgUrl,tags:tags?tags:null,pid:res.data}));history.replace(\"/\");});}).catch(function(err){console.log(err);});}};};// =====================================================================\n// ================================ 수정 ================================\nvar editPostDB=function editPostDB(props){return function(dispatch,getState,_ref5){var history=_ref5.history;var category=props.category,pid=props.pid,postComment=props.postComment,postImg=props.postImg,postTitle=props.postTitle,tag=props.tag;var token_res=sessionStorage.getItem(\"token\");var img_list=getState().post.preview;var formData=new FormData();formData.append(\"images\",img_list);if(!img_list){axios({method:\"PUT\",url:\"\".concat(apiUrl,\"/islogin/post/revice/\").concat(pid),data:{pid:pid,postTitle:postTitle,postComment:postComment,postImg:postImg,tags:tag,category:category},headers:{Authorization:\"\".concat(token_res)}}).then(function(){dispatch(editPost({postTitle:postTitle,postComment:postComment,tag:tag,category:category,pid:pid}));history.replace(\"/detail/\".concat(pid));window.scrollTo(0,0);});}else{axios.post(\"\".concat(apiUrl,\"/images/upload\"),formData,{headers:{\"Content-Type\":\"multipart/form-data\",Authorization:\"\".concat(token_res)}}).then(function(res){var imgUrl=res.data.url;return imgUrl;}).then(function(imgUrl){axios({method:\"PUT\",url:\"\".concat(apiUrl,\"/islogin/post/revice/\").concat(pid),data:{pid:pid,postTitle:postTitle,postComment:postComment,postImg:imgUrl,tags:tag,category:category},headers:{Authorization:\"\".concat(token_res)}}).then(function(){dispatch(editPost({postTitle:postTitle,postComment:postComment,tag:tag,category:category,pid:pid}));history.replace(\"/detail/\".concat(pid));window.scrollTo(0,0);});}).catch(function(err){console.log(err);});}};};// =====================================================================\n// ================================ 삭제 ================================\nvar delPostDB=function delPostDB(pid){return function(dispatch,getState,_ref6){var history=_ref6.history;apis.delpost(pid).then(function(){window.location.replace(\"/\");}).catch(function(err){console.log(err);});};};var postLikeDB=function postLikeDB(uid,pid){return function(dispatch,getState,_ref7){var history=_ref7.history;apis.likepost(uid,pid).then(function(res){var post_list=getState().post.one_list;var like_count=\"\";if(res.data.postLike===\"true\"){like_count=post_list.postLikeCount+1;}else{like_count=post_list.postLikeCount-1;}dispatch(getOnePost(_objectSpread(_objectSpread({},post_list),{},{post_list:post_list,postLikeCount:like_count})));}).catch(function(err){console.log(err);});};};// =====================================================================\n// ============================== reducer ==============================\nexport default handleActions((_handleActions={},_defineProperty(_handleActions,GET_POST,function(state,action){return produce(state,function(draft){var _draft$list;(_draft$list=draft.list).push.apply(_draft$list,_toConsumableArray(action.payload.post));draft.list=draft.list.reduce(function(acc,cur){if(acc.findIndex(function(a){return a.pid===cur.pid;})===-1){return[].concat(_toConsumableArray(acc),[cur]);}else{acc[acc.findIndex(function(a){return a.pid===cur.pid;})]=cur;return acc;}},[]);});}),_defineProperty(_handleActions,GET_POSTCHK,function(state,action){return produce(state,function(draft){var _draft$nockeckList;(_draft$nockeckList=draft.nockeckList).push.apply(_draft$nockeckList,_toConsumableArray(action.payload.post));draft.nockeckList=draft.nockeckList.reduce(function(acc,cur){if(acc.findIndex(function(a){return a.pid===cur.pid;})===-1){return[].concat(_toConsumableArray(acc),[cur]);}else{acc[acc.findIndex(function(a){return a.pid===cur.pid;})]=cur;return acc;}},[]);});}),_defineProperty(_handleActions,GET_ONE_POST,function(state,action){return produce(state,function(draft){draft.one_list=action.payload.post;});}),_defineProperty(_handleActions,ADD_POST,function(state,action){return produce(state,function(draft){draft.list.push(action.payload.post);draft.preview=\"\";});}),_defineProperty(_handleActions,EDIT_POST,function(state,action){return produce(state,function(draft){draft.one_list=action.payload.post;draft.preview=\"\";});}),_defineProperty(_handleActions,DEL_POST,function(state,action){return produce(state,function(draft){draft.list=draft.list;});}),_defineProperty(_handleActions,IMG_POST,function(state,action){return produce(state,function(draft){draft.preview=action.payload.preview;});}),_defineProperty(_handleActions,LOADING,function(state,action){return produce(state,function(draft){draft.is_loading=action.payload.is_loading;});}),_handleActions),initialState);var actionCreators={getPostDB:getPostDB,getOnePostDB:getOnePostDB,addPostDB:addPostDB,editPostDB:editPostDB,delPostDB:delPostDB,imgPost:imgPost,getPostNocheckDB:getPostNocheckDB,postLikeDB:postLikeDB};export{actionCreators};","map":{"version":3,"sources":["/Users/cyj/sun/src/redux/modules/post.js"],"names":["createAction","handleActions","produce","axios","apis","apiUrl","GET_POST","GET_ONE_POST","GET_POSTCHK","ADD_POST","EDIT_POST","DEL_POST","IMG_POST","LOADING","getPost","post","getPostNoChk","getOnePost","addPost","editPost","delPost","pid","imgPost","preview","loading","is_loading","initialState","list","one_list","nockeckList","paging","start","next","size","getPostDB","page","dispatch","getState","history","getpost","then","res","query","data","catch","err","console","log","getPostNocheckDB","getpostnocheck","getOnePostDB","onepost","addPostDB","props","title","comment","tags","category","token_res","sessionStorage","getItem","img_list","formData","FormData","append","method","url","postTitle","postComment","postImg","headers","Authorization","imgUrl","replace","editPostDB","tag","window","scrollTo","delPostDB","delpost","location","postLikeDB","uid","likepost","post_list","like_count","postLike","postLikeCount","state","action","draft","push","payload","reduce","acc","cur","findIndex","a","actionCreators"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport axios from \"axios\";\nimport { apis } from \"../../shared/api\";\nimport { apiUrl } from \"../../elements/testApiUrl\";\n\nconst GET_POST = \"GET_POST\";\nconst GET_ONE_POST = \"GET_ONE_POST\";\nconst GET_POSTCHK = \"GET_POSTCHK\";\nconst ADD_POST = \"ADD_POST\";\nconst EDIT_POST = \"EDIT_POST\";\nconst DEL_POST = \"DEL_POST\";\nconst IMG_POST = \"IMG_POST\";\nconst LOADING = \"LOADING\";\n\nconst getPost = createAction(GET_POST, (post) => ({ post }));\nconst getPostNoChk = createAction(GET_POSTCHK, (post) => ({ post }));\nconst getOnePost = createAction(GET_ONE_POST, (post) => ({ post }));\nconst addPost = createAction(ADD_POST, (post) => ({ post }));\nconst editPost = createAction(EDIT_POST, (post) => ({ post }));\nconst delPost = createAction(DEL_POST, (pid) => ({ pid }));\nconst imgPost = createAction(IMG_POST, (preview) => ({ preview }));\nconst loading = createAction(LOADING, (is_loading) => ({ is_loading }));\n\nconst initialState = {\n  list: [],\n  one_list: [],\n  nockeckList: [],\n  preview: \"\",\n  paging: { start: null, next: null, size: 3 },\n  is_loading: false,\n};\n\n// ===================================================================\n// ======================== 게시글 리스트 가지고오기========================\n\nconst getPostDB = (page) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .getpost(page)\n      .then((res) => {\n        const query = res.data;\n        dispatch(getPost(query));\n      })\n      .catch((err) => {\n        console.log(\"error get post\");\n      });\n  };\n};\n\nconst getPostNocheckDB = (page) => {\n  return function (dispatch, getState, { history }) {\n    console.log(page);\n    apis\n      .getpostnocheck(page)\n      .then((res) => {\n        const query = res.data;\n        dispatch(getPostNoChk(query));\n      })\n      .catch((err) => {\n        console.log(\"error get post\");\n      });\n  };\n};\n\n// ====================================================================\n// ======================== 선택한 게시글 가지고오기 ========================\nconst getOnePostDB = (pid) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .onepost(pid)\n      .then((res) => {\n        dispatch(getOnePost(res.data));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\n// =====================================================================\n// ================================ 추가 ================================\nconst addPostDB = (props) => {\n  return function (dispatch, getState, { history }) {\n    const { title, comment, tags, category } = props;\n    const token_res = sessionStorage.getItem(\"token\");\n    const img_list = getState().post.preview;\n    const formData = new FormData();\n    formData.append(\"images\", img_list);\n\n    if (!img_list) {\n      axios({\n        method: \"post\",\n        url: `${apiUrl}/islogin/post/write`,\n        data: {\n          postTitle: title,\n          postComment: comment,\n          postImg: null,\n          tags: tags ? tags : null,\n          category: category,\n        },\n        headers: { Authorization: `${token_res}` },\n      }).then((res) => {\n        dispatch(\n          addPost({\n            title,\n            comment,\n            imgUrl: null,\n            tags: tags ? tags : null,\n            pid: res.data,\n          })\n        );\n        history.replace(\"/\");\n      });\n    } else {\n      axios\n        .post(`${apiUrl}/images/upload`, formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            Authorization: `${token_res}`,\n          },\n        })\n        .then((res) => {\n          const imgUrl = res.data.url;\n          return imgUrl;\n        })\n        .then((imgUrl) => {\n          axios({\n            method: \"post\",\n            url: `${apiUrl}/islogin/post/write`,\n            data: {\n              postTitle: title,\n              postComment: comment,\n              postImg: imgUrl,\n              tags: tags ? tags : null,\n\n              category: category,\n            },\n            headers: { Authorization: `${token_res}` },\n          }).then((res) => {\n            dispatch(\n              addPost({\n                title,\n                comment,\n                imgUrl,\n                tags: tags ? tags : null,\n                pid: res.data,\n              })\n            );\n            history.replace(\"/\");\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n};\n\n// =====================================================================\n// ================================ 수정 ================================\nconst editPostDB = (props) => {\n  return function (dispatch, getState, { history }) {\n    const { category, pid, postComment, postImg, postTitle, tag } = props;\n    const token_res = sessionStorage.getItem(\"token\");\n    const img_list = getState().post.preview;\n    const formData = new FormData();\n    formData.append(\"images\", img_list);\n\n    if (!img_list) {\n      axios({\n        method: \"PUT\",\n        url: `${apiUrl}/islogin/post/revice/${pid}`,\n        data: {\n          pid: pid,\n          postTitle: postTitle,\n          postComment: postComment,\n          postImg: postImg,\n          tags: tag,\n          category: category,\n        },\n        headers: { Authorization: `${token_res}` },\n      }).then(() => {\n        dispatch(editPost({ postTitle, postComment, tag, category, pid }));\n        history.replace(`/detail/${pid}`);\n        window.scrollTo(0, 0);\n      });\n    } else {\n      axios\n        .post(`${apiUrl}/images/upload`, formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            Authorization: `${token_res}`,\n          },\n        })\n        .then((res) => {\n          const imgUrl = res.data.url;\n          return imgUrl;\n        })\n        .then((imgUrl) => {\n          axios({\n            method: \"PUT\",\n            url: `${apiUrl}/islogin/post/revice/${pid}`,\n            data: {\n              pid: pid,\n              postTitle: postTitle,\n              postComment: postComment,\n              postImg: imgUrl,\n              tags: tag,\n              category: category,\n            },\n            headers: { Authorization: `${token_res}` },\n          }).then(() => {\n            dispatch(editPost({ postTitle, postComment, tag, category, pid }));\n            history.replace(`/detail/${pid}`);\n            window.scrollTo(0, 0);\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n};\n\n// =====================================================================\n// ================================ 삭제 ================================\nconst delPostDB = (pid) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .delpost(pid)\n      .then(() => {\n        window.location.replace(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\nconst postLikeDB = (uid, pid) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .likepost(uid, pid)\n      .then((res) => {\n        const post_list = getState().post.one_list;\n        let like_count = \"\";\n        if (res.data.postLike === \"true\") {\n          like_count = post_list.postLikeCount + 1;\n        } else {\n          like_count = post_list.postLikeCount - 1;\n        }\n\n        dispatch(\n          getOnePost({ ...post_list, post_list, postLikeCount: like_count })\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n// =====================================================================\n// ============================== reducer ==============================\nexport default handleActions(\n  {\n    [GET_POST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list.push(...action.payload.post);\n        draft.list = draft.list.reduce((acc, cur) => {\n          if (acc.findIndex((a) => a.pid === cur.pid) === -1) {\n            return [...acc, cur];\n          } else {\n            acc[acc.findIndex((a) => a.pid === cur.pid)] = cur;\n            return acc;\n          }\n        }, []);\n      }),\n    [GET_POSTCHK]: (state, action) =>\n      produce(state, (draft) => {\n        draft.nockeckList.push(...action.payload.post);\n        draft.nockeckList = draft.nockeckList.reduce((acc, cur) => {\n          if (acc.findIndex((a) => a.pid === cur.pid) === -1) {\n            return [...acc, cur];\n          } else {\n            acc[acc.findIndex((a) => a.pid === cur.pid)] = cur;\n            return acc;\n          }\n        }, []);\n      }),\n    [GET_ONE_POST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.one_list = action.payload.post;\n      }),\n    [ADD_POST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list.push(action.payload.post);\n        draft.preview = \"\";\n      }),\n    [EDIT_POST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.one_list = action.payload.post;\n        draft.preview = \"\";\n      }),\n    [DEL_POST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list = draft.list;\n      }),\n    [IMG_POST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.preview = action.payload.preview;\n      }),\n    [LOADING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.is_loading = action.payload.is_loading;\n      }),\n  },\n  initialState\n);\n\nconst actionCreators = {\n  getPostDB,\n  getOnePostDB,\n  addPostDB,\n  editPostDB,\n  delPostDB,\n  imgPost,\n  getPostNocheckDB,\n  postLikeDB,\n};\n\nexport { actionCreators };\n"]},"metadata":{},"sourceType":"module"}