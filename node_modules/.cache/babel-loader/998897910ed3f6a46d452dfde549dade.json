{"ast":null,"code":"var _jsxFileName = \"/Users/cyj/sun/src/components/NoticeBoard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport styled from \"styled-components\";\nimport _NoticeList from \"../elements/_NoticeList\";\nimport TabMenu from \"./TabMenu\";\nimport Loader from \"./Loader\";\nimport { ReactComponent as WriteSvg } from \"../svg/write.svg\";\nimport { history } from \"../redux/configureStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoticeBoard = () => {\n  _s();\n\n  const tab_list = [{\n    title: \"nockeck\",\n    value: \"답변대기\"\n  }, {\n    title: \"check\",\n    value: \"답변완료\"\n  }];\n  const dispatch = useDispatch();\n  const [TabList, setTabList] = React.useState(tab_list[0].title);\n  const post_list = useSelector(state => state.post.list);\n  const post_nocheck = useSelector(state => state.post.nockeckList);\n  const postList = TabList === \"check\" ? post_list : post_nocheck; // 무한 스크롤\n\n  const [itemLists, setItemLists] = React.useState([1]);\n  const [isLoaded, setIsLoaded] = React.useState(false);\n  const [pageNum, setPageNum] = React.useState(1);\n  const [datas, setData] = React.useState(post_nocheck);\n  const viewport = React.useRef(null);\n  const target = React.useRef(null);\n\n  const getMoreItem = async () => {\n    setIsLoaded(true);\n    await new Promise(resolve => setTimeout(resolve, 1500));\n    setPageNum(pageNum + 1); // dispatch(postActions.getPostNocheckDB(2));\n\n    setIsLoaded(false);\n  };\n\n  const onIntersect = async (_ref, observer) => {\n    let [entry] = _ref;\n\n    if (entry.isIntersecting && !isLoaded) {\n      observer.unobserve(entry.target);\n      await getMoreItem();\n      observer.observe(target.current);\n    }\n  };\n\n  React.useEffect(() => {\n    if (TabList === \"check\") {\n      dispatch(postActions.getPostDB(pageNum));\n    } else {\n      dispatch(postActions.getPostNocheckDB(pageNum));\n    }\n\n    let observer;\n\n    if (target.current) {\n      const options = {\n        threshold: 0.4\n      };\n      observer = new IntersectionObserver(onIntersect, options);\n      observer.observe(target.current);\n    }\n\n    return () => observer && observer.disconnect();\n  }, [TabList, target, pageNum]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SC_NoticeDiv, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC804\\uCCB4 \\uAC8C\\uC2DC\\uBB3C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabMenu, {\n        tab_list: tab_list,\n        tab: setTabList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: viewport,\n        className: \"list_wrap\",\n        children: postList.map((v, idx) => {\n          const lastEl = idx === postList.length - 1;\n          return /*#__PURE__*/_jsxDEV(_NoticeList, {\n            list: v,\n            target: target,\n            lastEl: lastEl\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: target,\n        className: \"last\",\n        children: isLoaded && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SC_BtnWrap, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            history.push(\"/create\");\n          },\n          children: [/*#__PURE__*/_jsxDEV(WriteSvg, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), \"\\uAE00\\uC4F0\\uAE30\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NoticeBoard, \"uWDIHmSaGXQep8ueOIXVGuZGVLM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = NoticeBoard;\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.24);\n  z-index: 100;\n`;\nconst SC_NoticeDiv = styled.div`\n  width: calc(100% - 342px - 24px);\n  background-color: #fff;\n  border-radius: 8px;\n\n  h2 {\n    padding: 30px 20px;\n    font-weight: 700;\n  }\n  > ul {\n    margin: 0 24px;\n  }\n`;\n_c2 = SC_NoticeDiv;\nconst SC_BtnWrap = styled.div`\n  margin: 32px 24px 48px;\n  text-align: right;\n\n  button {\n    color: #fff;\n    padding: 16px 40px;\n    border-radius: 5px;\n    background-color: #7966ff;\n\n    svg {\n      vertical-align: middle;\n      margin-right: 16px;\n    }\n  }\n`;\n_c3 = SC_BtnWrap;\nexport default _c4 = /*#__PURE__*/React.memo(NoticeBoard);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"NoticeBoard\");\n$RefreshReg$(_c2, \"SC_NoticeDiv\");\n$RefreshReg$(_c3, \"SC_BtnWrap\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["/Users/cyj/sun/src/components/NoticeBoard.js"],"names":["React","useSelector","useDispatch","actionCreators","postActions","styled","_NoticeList","TabMenu","Loader","ReactComponent","WriteSvg","history","NoticeBoard","tab_list","title","value","dispatch","TabList","setTabList","useState","post_list","state","post","list","post_nocheck","nockeckList","postList","itemLists","setItemLists","isLoaded","setIsLoaded","pageNum","setPageNum","datas","setData","viewport","useRef","target","getMoreItem","Promise","resolve","setTimeout","onIntersect","observer","entry","isIntersecting","unobserve","observe","current","useEffect","getPostDB","getPostNocheckDB","options","threshold","IntersectionObserver","disconnect","map","v","idx","lastEl","length","push","Loading","div","SC_NoticeDiv","SC_BtnWrap","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAc,IAAIC,WAA3B,QAA8C,uBAA9C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,SAASC,cAAc,IAAIC,QAA3B,QAA2C,kBAA3C;AACA,SAASC,OAAT,QAAwB,yBAAxB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,QAAQ,GAAG,CACf;AACEC,IAAAA,KAAK,EAAE,SADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADe,EAKf;AACED,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALe,CAAjB;AAUA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBlB,KAAK,CAACmB,QAAN,CAAeN,QAAQ,CAAC,CAAD,CAAR,CAAYC,KAA3B,CAA9B;AACA,QAAMM,SAAS,GAAGnB,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,IAAvB,CAA7B;AACA,QAAMC,YAAY,GAAGvB,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWG,WAAvB,CAAhC;AACA,QAAMC,QAAQ,GAAGT,OAAO,KAAK,OAAZ,GAAsBG,SAAtB,GAAkCI,YAAnD,CAfwB,CAiBxB;;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4B5B,KAAK,CAACmB,QAAN,CAAe,CAAC,CAAD,CAAf,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0B9B,KAAK,CAACmB,QAAN,CAAe,KAAf,CAAhC;AAEA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBhC,KAAK,CAACmB,QAAN,CAAe,CAAf,CAA9B;AACA,QAAM,CAACc,KAAD,EAAQC,OAAR,IAAmBlC,KAAK,CAACmB,QAAN,CAAeK,YAAf,CAAzB;AACA,QAAMW,QAAQ,GAAGnC,KAAK,CAACoC,MAAN,CAAa,IAAb,CAAjB;AACA,QAAMC,MAAM,GAAGrC,KAAK,CAACoC,MAAN,CAAa,IAAb,CAAf;;AAEA,QAAME,WAAW,GAAG,YAAY;AAC9BR,IAAAA,WAAW,CAAC,IAAD,CAAX;AACA,UAAM,IAAIS,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAnC,CAAN;AACAR,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV,CAH8B,CAI9B;;AACAD,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAND;;AAQA,QAAMY,WAAW,GAAG,aAAgBC,QAAhB,KAA6B;AAAA,QAAtB,CAACC,KAAD,CAAsB;;AAC/C,QAAIA,KAAK,CAACC,cAAN,IAAwB,CAAChB,QAA7B,EAAuC;AACrCc,MAAAA,QAAQ,CAACG,SAAT,CAAmBF,KAAK,CAACP,MAAzB;AACA,YAAMC,WAAW,EAAjB;AACAK,MAAAA,QAAQ,CAACI,OAAT,CAAiBV,MAAM,CAACW,OAAxB;AACD;AACF,GAND;;AAQAhD,EAAAA,KAAK,CAACiD,SAAN,CAAgB,MAAM;AACpB,QAAIhC,OAAO,KAAK,OAAhB,EAAyB;AACvBD,MAAAA,QAAQ,CAACZ,WAAW,CAAC8C,SAAZ,CAAsBnB,OAAtB,CAAD,CAAR;AACD,KAFD,MAEO;AACLf,MAAAA,QAAQ,CAACZ,WAAW,CAAC+C,gBAAZ,CAA6BpB,OAA7B,CAAD,CAAR;AACD;;AAED,QAAIY,QAAJ;;AACA,QAAIN,MAAM,CAACW,OAAX,EAAoB;AAClB,YAAMI,OAAO,GAAG;AACdC,QAAAA,SAAS,EAAE;AADG,OAAhB;AAGAV,MAAAA,QAAQ,GAAG,IAAIW,oBAAJ,CAAyBZ,WAAzB,EAAsCU,OAAtC,CAAX;AACAT,MAAAA,QAAQ,CAACI,OAAT,CAAiBV,MAAM,CAACW,OAAxB;AACD;;AACD,WAAO,MAAML,QAAQ,IAAIA,QAAQ,CAACY,UAAT,EAAzB;AACD,GAhBD,EAgBG,CAACtC,OAAD,EAAUoB,MAAV,EAAkBN,OAAlB,CAhBH;AAkBA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,YAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAElB,QAAnB;AAA6B,QAAA,GAAG,EAAEK;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,GAAG,EAAEiB,QAAV;AAAoB,QAAA,SAAS,EAAC,WAA9B;AAAA,kBACGT,QAAQ,CAAC8B,GAAT,CAAa,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACxB,gBAAMC,MAAM,GAAGD,GAAG,KAAKhC,QAAQ,CAACkC,MAAT,GAAkB,CAAzC;AACA,8BACE,QAAC,WAAD;AAAuB,YAAA,IAAI,EAAEH,CAA7B;AAAgC,YAAA,MAAM,EAAEpB,MAAxC;AAAgD,YAAA,MAAM,EAAEsB;AAAxD,aAAkBD,GAAlB;AAAA;AAAA;AAAA;AAAA,kBADF;AAGD,SALA;AADH;AAAA;AAAA;AAAA;AAAA,cAHF,eAWE;AAAK,QAAA,GAAG,EAAErB,MAAV;AAAkB,QAAA,SAAS,EAAC,MAA5B;AAAA,kBACGR,QAAQ,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADf;AAAA;AAAA;AAAA;AAAA,cAXF,eAcE,QAAC,UAAD;AAAA,+BACE;AACE,UAAA,OAAO,EAAE,MAAM;AACblB,YAAAA,OAAO,CAACkD,IAAR,CAAa,SAAb;AACD,WAHH;AAAA,kCAIE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAxFD;;GAAMjD,W;UAWaV,W,EAECD,W,EACGA,W;;;KAdjBW,W;AA0FN,MAAMkD,OAAO,GAAGzD,MAAM,CAAC0D,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMC,YAAY,GAAG3D,MAAM,CAAC0D,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;MAAMC,Y;AAcN,MAAMC,UAAU,GAAG5D,MAAM,CAAC0D,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;MAAME,U;AAgBN,kCAAejE,KAAK,CAACkE,IAAN,CAAWtD,WAAX,CAAf","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport styled from \"styled-components\";\nimport _NoticeList from \"../elements/_NoticeList\";\nimport TabMenu from \"./TabMenu\";\nimport Loader from \"./Loader\";\n\nimport { ReactComponent as WriteSvg } from \"../svg/write.svg\";\nimport { history } from \"../redux/configureStore\";\n\nconst NoticeBoard = () => {\n  const tab_list = [\n    {\n      title: \"nockeck\",\n      value: \"답변대기\",\n    },\n    {\n      title: \"check\",\n      value: \"답변완료\",\n    },\n  ];\n  const dispatch = useDispatch();\n  const [TabList, setTabList] = React.useState(tab_list[0].title);\n  const post_list = useSelector((state) => state.post.list);\n  const post_nocheck = useSelector((state) => state.post.nockeckList);\n  const postList = TabList === \"check\" ? post_list : post_nocheck;\n\n  // 무한 스크롤\n  const [itemLists, setItemLists] = React.useState([1]);\n  const [isLoaded, setIsLoaded] = React.useState(false);\n\n  const [pageNum, setPageNum] = React.useState(1);\n  const [datas, setData] = React.useState(post_nocheck);\n  const viewport = React.useRef(null);\n  const target = React.useRef(null);\n\n  const getMoreItem = async () => {\n    setIsLoaded(true);\n    await new Promise((resolve) => setTimeout(resolve, 1500));\n    setPageNum(pageNum + 1);\n    // dispatch(postActions.getPostNocheckDB(2));\n    setIsLoaded(false);\n  };\n\n  const onIntersect = async ([entry], observer) => {\n    if (entry.isIntersecting && !isLoaded) {\n      observer.unobserve(entry.target);\n      await getMoreItem();\n      observer.observe(target.current);\n    }\n  };\n\n  React.useEffect(() => {\n    if (TabList === \"check\") {\n      dispatch(postActions.getPostDB(pageNum));\n    } else {\n      dispatch(postActions.getPostNocheckDB(pageNum));\n    }\n\n    let observer;\n    if (target.current) {\n      const options = {\n        threshold: 0.4,\n      };\n      observer = new IntersectionObserver(onIntersect, options);\n      observer.observe(target.current);\n    }\n    return () => observer && observer.disconnect();\n  }, [TabList, target, pageNum]);\n\n  return (\n    <React.Fragment>\n      <SC_NoticeDiv>\n        <h2>전체 게시물</h2>\n        <TabMenu tab_list={tab_list} tab={setTabList} />\n        <div ref={viewport} className='list_wrap'>\n          {postList.map((v, idx) => {\n            const lastEl = idx === postList.length - 1;\n            return (\n              <_NoticeList key={idx} list={v} target={target} lastEl={lastEl} />\n            );\n          })}\n        </div>\n        <div ref={target} className='last'>\n          {isLoaded && <Loader />}\n        </div>\n        <SC_BtnWrap>\n          <button\n            onClick={() => {\n              history.push(\"/create\");\n            }}>\n            <WriteSvg />\n            글쓰기\n          </button>\n        </SC_BtnWrap>\n      </SC_NoticeDiv>\n    </React.Fragment>\n  );\n};\n\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.24);\n  z-index: 100;\n`;\n\nconst SC_NoticeDiv = styled.div`\n  width: calc(100% - 342px - 24px);\n  background-color: #fff;\n  border-radius: 8px;\n\n  h2 {\n    padding: 30px 20px;\n    font-weight: 700;\n  }\n  > ul {\n    margin: 0 24px;\n  }\n`;\n\nconst SC_BtnWrap = styled.div`\n  margin: 32px 24px 48px;\n  text-align: right;\n\n  button {\n    color: #fff;\n    padding: 16px 40px;\n    border-radius: 5px;\n    background-color: #7966ff;\n\n    svg {\n      vertical-align: middle;\n      margin-right: 16px;\n    }\n  }\n`;\nexport default React.memo(NoticeBoard);\n"]},"metadata":{},"sourceType":"module"}