{"ast":null,"code":"import { createAction, handleActions } from \"redux-actions\";\nimport axios from \"axios\";\nimport { setToken } from \"../../shared/token\";\nimport produce from \"immer\";\nimport { apiUrl } from \"../../elements/testApiUrl\";\nimport { apis } from \"../../shared/api\";\nconst SERCH = \"SERCH\";\nconst CATEGORY = \"CATEGORY\";\nconst TAG = \"TAG\";\nconst serch = createAction(SERCH, serch_list => ({\n  serch_list\n}));\nconst categorySerch = createAction(CATEGORY, category_list => ({\n  category_list\n}));\nconst tagSearch = createAction(TAG, tag_list => ({\n  tag_list\n}));\nconst token = sessionStorage.getItem(\"token\");\nconst initialState = {\n  serch_list: [],\n  category_list: [],\n  tag_list: []\n};\n\nconst serchDB = title => {\n  return async function (dispatch, getState, _ref) {\n    let {\n      history\n    } = _ref;\n    console.log(title);\n    await axios.get(`${apiUrl}/post/search/${title}`, {\n      headers: {\n        Authorization: token\n      }\n    }).then(res => {\n      console.log(res);\n      dispatch(serch(res.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nconst categoryDB = category => {\n  return function (dispatch, getState, _ref2) {\n    let {\n      history\n    } = _ref2;\n    axios.get(`${apiUrl}/category/search/${category}`, {\n      headers: {\n        Authorization: token\n      }\n    }).then(res => {\n      dispatch(categorySerch(res.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nconst tagDB = tag => {\n  return function (dispatch, getState, _ref3) {\n    let {\n      history\n    } = _ref3;\n    axios.get(`${apiUrl}/tag/search/${tag}`, {\n      headers: {\n        Authorization: token\n      }\n    }).then(res => {\n      dispatch(tagSearch(res.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nexport default handleActions({\n  [SERCH]: (state, action) => produce(state, draft => {\n    draft.serch_list = action.payload.serch_list;\n  }),\n  [CATEGORY]: (state, action) => produce(state, draft => {\n    draft.category_list = action.payload.category_list;\n  }),\n  [TAG]: (state, action) => produce(state, draft => {\n    draft.tag_list = action.payload.tag_list;\n  })\n}, initialState);\nconst actionsCreators = {\n  serchDB,\n  serch,\n  categoryDB,\n  categorySerch,\n  tagDB\n};\nexport { actionsCreators };","map":{"version":3,"sources":["/Users/cyj/sun/src/redux/modules/serch.js"],"names":["createAction","handleActions","axios","setToken","produce","apiUrl","apis","SERCH","CATEGORY","TAG","serch","serch_list","categorySerch","category_list","tagSearch","tag_list","token","sessionStorage","getItem","initialState","serchDB","title","dispatch","getState","history","console","log","get","headers","Authorization","then","res","data","catch","err","categoryDB","category","tagDB","tag","state","action","draft","payload","actionsCreators"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport axios from \"axios\";\nimport { setToken } from \"../../shared/token\";\nimport produce from \"immer\";\nimport { apiUrl } from \"../../elements/testApiUrl\";\nimport { apis } from \"../../shared/api\";\n\nconst SERCH = \"SERCH\";\nconst CATEGORY = \"CATEGORY\";\nconst TAG = \"TAG\";\n\nconst serch = createAction(SERCH, (serch_list) => ({ serch_list }));\nconst categorySerch = createAction(CATEGORY, (category_list) => ({\n  category_list,\n}));\nconst tagSearch = createAction(TAG, (tag_list) => ({ tag_list }));\n\nconst token = sessionStorage.getItem(\"token\");\n\nconst initialState = {\n  serch_list: [],\n  category_list: [],\n  tag_list: [],\n};\n\nconst serchDB = (title) => {\n  return async function (dispatch, getState, { history }) {\n    console.log(title);\n    await axios\n      .get(`${apiUrl}/post/search/${title}`, {\n        headers: {\n          Authorization: token,\n        },\n      })\n      .then((res) => {\n        console.log(res);\n        dispatch(serch(res.data));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\nconst categoryDB = (category) => {\n  return function (dispatch, getState, { history }) {\n    axios\n      .get(`${apiUrl}/category/search/${category}`, {\n        headers: {\n          Authorization: token,\n        },\n      })\n      .then((res) => {\n        dispatch(categorySerch(res.data));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\nconst tagDB = (tag) => {\n  return function (dispatch, getState, { history }) {\n    axios\n      .get(`${apiUrl}/tag/search/${tag}`, {\n        headers: {\n          Authorization: token,\n        },\n      })\n      .then((res) => {\n        dispatch(tagSearch(res.data));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\nexport default handleActions(\n  {\n    [SERCH]: (state, action) =>\n      produce(state, (draft) => {\n        draft.serch_list = action.payload.serch_list;\n      }),\n    [CATEGORY]: (state, action) =>\n      produce(state, (draft) => {\n        draft.category_list = action.payload.category_list;\n      }),\n    [TAG]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tag_list = action.payload.tag_list;\n      }),\n  },\n  initialState\n);\n\nconst actionsCreators = {\n  serchDB,\n  serch,\n  categoryDB,\n  categorySerch,\n  tagDB,\n};\n\nexport { actionsCreators };\n"]},"metadata":{},"sourceType":"module"}