{"ast":null,"code":"var _jsxFileName = \"/Users/cyj/sun/src/page/Scrap.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { actionCreators as mypageActions } from \"../redux/modules/mypage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { history } from \"../redux/configureStore\";\nimport { TableListUl } from \"../components/TableList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Scrap = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const scrap_list = useSelector(state => state.mypage.list);\n  React.useEffect(() => {\n    dispatch(mypageActions.myLikePostDB(1));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ScrapDiv, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC2A4\\uD06C\\uB7A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableListUl, {\n      children: [scrap_list.length === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"no_list\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC2A4\\uD06C\\uB7A9\\uB41C \\uAC8C\\uC2DC\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4 :)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), scrap_list.map((v, idx) => {\n        var _v$createdAt;\n\n        const date = (_v$createdAt = v.createdAt) === null || _v$createdAt === void 0 ? void 0 : _v$createdAt.split(\".\")[0].replace(\"T\", \" \");\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              history.push(`detail/${v.pid}`);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\\"\", v.postTitle, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), v.type === \"AnswerCreate\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uB204\\uAD70\\uAC00 \\uB0B4 \\uAC8C\\uC2DC\\uAE00\\uC5D0 \\uB2F5\\uAE00\\uC744 \\uB0A8\\uACBC\\uC2B5\\uB2C8\\uB2E4.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this), v.type === \"AnswerChoose\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uB2F5\\uBCC0\\uC774 \\uCC44\\uD0DD\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {//   dispatch(myActions.myAlarmsDelDB(v.alarmId));\n            },\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, v.pid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Scrap, \"z7nRWpr7esrhDGYY6UcJmB4+ejo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Scrap;\nconst ScrapDiv = styled.div`\n  width: 1440px;\n  min-height: calc(100vh - 100px - 150px);\n  margin: 0 auto;\n`;\n_c2 = ScrapDiv;\nexport default Scrap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Scrap\");\n$RefreshReg$(_c2, \"ScrapDiv\");","map":{"version":3,"sources":["/Users/cyj/sun/src/page/Scrap.js"],"names":["React","styled","actionCreators","mypageActions","useDispatch","useSelector","history","TableListUl","Scrap","dispatch","scrap_list","state","mypage","list","useEffect","myLikePostDB","length","map","v","idx","date","createdAt","split","replace","push","pid","postTitle","type","ScrapDiv","div"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAc,IAAIC,aAA3B,QAAgD,yBAAhD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,UAAU,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,IAAzB,CAA9B;AAEAb,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpBL,IAAAA,QAAQ,CAACN,aAAa,CAACY,YAAd,CAA2B,CAA3B,CAAD,CAAR;AACD,GAFD,EAEG,EAFH;AAIA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAA,iBACGL,UAAU,CAACM,MAAX,KAAsB,CAAtB,iBACC;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFJ,EAMGN,UAAU,CAACO,GAAX,CAAe,CAACC,CAAD,EAAIC,GAAJ,KAAY;AAAA;;AAC1B,cAAMC,IAAI,mBAAGF,CAAC,CAACG,SAAL,iDAAG,aAAaC,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,EAA2BC,OAA3B,CAAmC,GAAnC,EAAwC,GAAxC,CAAb;AAEA,4BACE;AAAA,kCACE;AACE,YAAA,OAAO,EAAE,MAAM;AACbjB,cAAAA,OAAO,CAACkB,IAAR,CAAc,UAASN,CAAC,CAACO,GAAI,EAA7B;AACD,aAHH;AAAA,oCAIE;AAAA,+BAAKP,CAAC,CAACQ,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAKGR,CAAC,CAACS,IAAF,KAAW,cAAX,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,EAQGT,CAAC,CAACS,IAAF,KAAW,cAAX,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,eAWE;AAAA,wBAAKP;AAAL;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAcE;AACE,YAAA,OAAO,EAAE,MAAM,CACb;AACD,aAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA,WAASF,CAAC,CAACO,GAAX;AAAA;AAAA;AAAA;AAAA,gBADF;AAuBD,OA1BA,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CA/CD;;GAAMjB,K;UACaJ,W,EACEC,W;;;KAFfG,K;AAgDN,MAAMoB,QAAQ,GAAG3B,MAAM,CAAC4B,GAAI;AAC5B;AACA;AACA;AACA,CAJA;MAAMD,Q;AAKN,eAAepB,KAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { actionCreators as mypageActions } from \"../redux/modules/mypage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { history } from \"../redux/configureStore\";\nimport { TableListUl } from \"../components/TableList\";\n\nconst Scrap = () => {\n  const dispatch = useDispatch();\n  const scrap_list = useSelector((state) => state.mypage.list);\n\n  React.useEffect(() => {\n    dispatch(mypageActions.myLikePostDB(1));\n  }, []);\n\n  return (\n    <ScrapDiv>\n      <h2>스크랩</h2>\n      <TableListUl>\n        {scrap_list.length === 0 && (\n          <li className='no_list'>\n            <strong>스크랩된 게시글이 없습니다 :)</strong>\n          </li>\n        )}\n        {scrap_list.map((v, idx) => {\n          const date = v.createdAt?.split(\".\")[0].replace(\"T\", \" \");\n\n          return (\n            <li key={v.pid}>\n              <div\n                onClick={() => {\n                  history.push(`detail/${v.pid}`);\n                }}>\n                <p>\"{v.postTitle}\"</p>\n                {v.type === \"AnswerCreate\" && (\n                  <span>누군가 내 게시글에 답글을 남겼습니다.</span>\n                )}\n                {v.type === \"AnswerChoose\" && (\n                  <span>답변이 채택되었습니다.</span>\n                )}\n                <em>{date}</em>\n              </div>\n              <button\n                onClick={() => {\n                  //   dispatch(myActions.myAlarmsDelDB(v.alarmId));\n                }}>\n                삭제\n              </button>\n            </li>\n          );\n        })}\n      </TableListUl>\n    </ScrapDiv>\n  );\n};\nconst ScrapDiv = styled.div`\n  width: 1440px;\n  min-height: calc(100vh - 100px - 150px);\n  margin: 0 auto;\n`;\nexport default Scrap;\n"]},"metadata":{},"sourceType":"module"}