{"ast":null,"code":"var _jsxFileName = \"/Users/cyj/sun/src/page/Password.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Swal from \"sweetalert2\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as passWordAction } from \"../redux/modules/user\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst uid = sessionStorage.getItem(\"uid\");\n\nconst Password = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [password, setPassword] = useState(\"\");\n  const [newPassword, setnewPassWord] = useState(\"\");\n  const [checkPassWord, setCheckPassWord] = useState(\"\");\n  const [newPasswordRuleCheck, setNewPasswordRuleCheck] = React.useState(false);\n\n  const Pass = e => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const NewPass = e => {\n    const rule = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{4,10}$/;\n    const newPassword = e.target.value;\n    setnewPassWord(newPassword);\n    rule.test(newPassword) ? setNewPasswordRuleCheck(true) : setNewPasswordRuleCheck(false);\n    console.log(newPasswordRuleCheck);\n  };\n\n  const CheckPass = e => {\n    setCheckPassWord(e.target.value);\n    console.log(checkPassWord);\n  }; /////////////////입력한 현재비밀번호가 맞는지 확인해야함\n\n\n  const NewPassWord = () => {\n    if (password === newPassword) {\n      Swal.fire(\"\", \"새비밀번호가 현재비밀번호와 동일합니다.\", \"error\");\n      return;\n    } else if (newPasswordRuleCheck === false) {\n      Swal.fire(\"\", \"새비밀번호 형식이 맞지않습니다.\", \"error\");\n      return;\n    } else if (newPassword !== checkPassWord) {\n      Swal.fire(\"\", \"입력하신 새비밀번호가 일치하지않습니다.\", \"error\");\n      return;\n    } else {\n      Swal.fire({\n        title: \"수정하시겠습니까?\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"네 수정하겠습니다.\",\n        confirmButtonColor: \"#7966FF\",\n        cancelButtonText: \"아니오\",\n        cancelTextColor: \"#7966FF\"\n      }).then(result => {\n        if (result.isConfirmed) {\n          dispatch(passWordAction.NewPassWordDB(uid, password, newPassword, checkPassWord));\n          Swal.fire(\"\", \"수정 되었습니다.\", \"success\");\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n          Swal.fire(\"\", \"수정이 취소 되었습니다 :)\", \"error\");\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uC124\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"\\uD604\\uC7AC \\uBE44\\uBC00\\uBC88\\uD638\",\n            onChange: Pass\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"\\uC0C8\\uB85C\\uC6B4 \\uBE44\\uBC00\\uBC88\\uD638\",\n            onChange: NewPass\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), newPassword.length > 0 && !newPasswordRuleCheck && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"rule\",\n            children: \"*\\uC601\\uBB38 \\uC22B\\uC790 \\uC870\\uD569 4\\uC790 \\uC774\\uC0C1 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"\\uC0C8\\uB85C\\uC6B4 \\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uD655\\uC778\",\n            onChange: CheckPass\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), checkPassWord.length > 0 && checkPassWord !== newPassword && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"rule\",\n            children: \"*\\uC77C\\uCE58\\uD558\\uC9C0\\uC54A\\uB294 \\uBE44\\uBC00\\uBC88\\uD638\\uC785\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: NewPassWord,\n          children: \"\\uC800\\uC7A5\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Password, \"CKoUHLcLGjU3EoDImiNmpV5fK3k=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Password;\nconst Container = styled.div`\n  width: 1440px;\n  height: 830px;\n  margin: auto;\n  > div.title {\n    width: 160px;\n    height: 35px;\n    font-size: 24px;\n    font-weight: 600;\n  }\n  > div.user {\n    width: 500px;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: auto;\n    > div.inputBox {\n      width: 500px;\n      height: 312px;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-evenly;\n      div {\n        width: 100%;\n        height: 72px;\n        display: flex;\n        flex-direction: column;\n        position: relative;\n        justify-content: end;\n        background-color: #f9f8ff;\n        border-radius: 0.5rem;\n        padding: 15px;\n        > span.rule {\n          color: red;\n          font-size: 12px;\n          position: absolute;\n          justify-content: start;\n          padding-left: 15px;\n        }\n        > input {\n          width: 100%;\n          height: 72px;\n          border-radius: 0.5rem;\n          font-size: 16px;\n          font-weight: 600;\n          outline: 0;\n          background-color: #f9f8ff;\n        }\n      }\n      > input {\n        width: 500px;\n        height: 72px;\n        border-radius: 0.5rem;\n        background-color: #f9f8ff;\n      }\n      > button {\n        width: 500px;\n        height: 72px;\n        color: #f9f8ff;\n        background-color: #7966ff;\n        border-radius: 0.5rem;\n      }\n    }\n  }\n`;\n_c2 = Container;\nexport default Password;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Password\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["/Users/cyj/sun/src/page/Password.js"],"names":["React","useEffect","useState","styled","Swal","useSelector","useDispatch","actionCreators","passWordAction","useParams","uid","sessionStorage","getItem","Password","dispatch","password","setPassword","newPassword","setnewPassWord","checkPassWord","setCheckPassWord","newPasswordRuleCheck","setNewPasswordRuleCheck","Pass","e","target","value","NewPass","rule","test","console","log","CheckPass","NewPassWord","fire","title","icon","showCancelButton","confirmButtonText","confirmButtonColor","cancelButtonText","cancelTextColor","then","result","isConfirmed","NewPassWordDB","dismiss","DismissReason","cancel","length","Container","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAc,IAAIC,cAA3B,QAAiD,uBAAjD;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,MAAMC,GAAG,GAAGC,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAZ;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAM,CAACmB,oBAAD,EAAuBC,uBAAvB,IAAkDtB,KAAK,CAACE,QAAN,CAAe,KAAf,CAAxD;;AAEA,QAAMqB,IAAI,GAAIC,CAAD,IAAO;AAClB,UAAMT,QAAQ,GAAGS,CAAC,CAACC,MAAF,CAASC,KAA1B;AACAV,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD,GAHD;;AAKA,QAAMY,OAAO,GAAIH,CAAD,IAAO;AACrB,UAAMI,IAAI,GAAG,2CAAb;AACA,UAAMX,WAAW,GAAGO,CAAC,CAACC,MAAF,CAASC,KAA7B;AACAR,IAAAA,cAAc,CAACD,WAAD,CAAd;AACAW,IAAAA,IAAI,CAACC,IAAL,CAAUZ,WAAV,IACIK,uBAAuB,CAAC,IAAD,CAD3B,GAEIA,uBAAuB,CAAC,KAAD,CAF3B;AAGAQ,IAAAA,OAAO,CAACC,GAAR,CAAYV,oBAAZ;AACD,GARD;;AAUA,QAAMW,SAAS,GAAIR,CAAD,IAAO;AACvBJ,IAAAA,gBAAgB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYZ,aAAZ;AACD,GAHD,CAvBqB,CA4BrB;;;AACA,QAAMc,WAAW,GAAG,MAAM;AACxB,QAAIlB,QAAQ,KAAKE,WAAjB,EAA8B;AAC5Bb,MAAAA,IAAI,CAAC8B,IAAL,CAAU,EAAV,EAAc,uBAAd,EAAuC,OAAvC;AACA;AACD,KAHD,MAGO,IAAIb,oBAAoB,KAAK,KAA7B,EAAoC;AACzCjB,MAAAA,IAAI,CAAC8B,IAAL,CAAU,EAAV,EAAc,mBAAd,EAAmC,OAAnC;AACA;AACD,KAHM,MAGA,IAAIjB,WAAW,KAAKE,aAApB,EAAmC;AACxCf,MAAAA,IAAI,CAAC8B,IAAL,CAAU,EAAV,EAAc,uBAAd,EAAuC,OAAvC;AACA;AACD,KAHM,MAGA;AACL9B,MAAAA,IAAI,CAAC8B,IAAL,CAAU;AACRC,QAAAA,KAAK,EAAE,WADC;AAERC,QAAAA,IAAI,EAAE,SAFE;AAGRC,QAAAA,gBAAgB,EAAE,IAHV;AAIRC,QAAAA,iBAAiB,EAAE,YAJX;AAKRC,QAAAA,kBAAkB,EAAE,SALZ;AAMRC,QAAAA,gBAAgB,EAAE,KANV;AAORC,QAAAA,eAAe,EAAE;AAPT,OAAV,EAQGC,IARH,CAQSC,MAAD,IAAY;AAClB,YAAIA,MAAM,CAACC,WAAX,EAAwB;AACtB9B,UAAAA,QAAQ,CACNN,cAAc,CAACqC,aAAf,CACEnC,GADF,EAEEK,QAFF,EAGEE,WAHF,EAIEE,aAJF,CADM,CAAR;AAQAf,UAAAA,IAAI,CAAC8B,IAAL,CAAU,EAAV,EAAc,WAAd,EAA2B,SAA3B;AACD,SAVD,MAUO,IAAIS,MAAM,CAACG,OAAP,KAAmB1C,IAAI,CAAC2C,aAAL,CAAmBC,MAA1C,EAAkD;AACvD5C,UAAAA,IAAI,CAAC8B,IAAL,CAAU,EAAV,EAAc,iBAAd,EAAiC,OAAjC;AACD;AACF,OAtBD;AAuBD;AACF,GAnCD;;AAqCA,sBACE,QAAC,SAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,WAAW,EAAC,uCAFd;AAGE,YAAA,QAAQ,EAAEX;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,WAAW,EAAC,6CAFd;AAGE,YAAA,QAAQ,EAAEI;AAHZ;AAAA;AAAA;AAAA;AAAA,kBADF,EAMGV,WAAW,CAACgC,MAAZ,GAAqB,CAArB,IAA0B,CAAC5B,oBAA3B,iBACC;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAsBE;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,WAAW,EAAC,gEAFd;AAGE,YAAA,QAAQ,EAAEW;AAHZ;AAAA;AAAA;AAAA;AAAA,kBADF,EAMGb,aAAa,CAAC8B,MAAd,GAAuB,CAAvB,IAA4B9B,aAAa,KAAKF,WAA9C,iBACC;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBF,eAiCE;AAAQ,UAAA,OAAO,EAAEgB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD,CA5GD;;GAAMpB,Q;UACaP,W;;;KADbO,Q;AA8GN,MAAMqC,SAAS,GAAG/C,MAAM,CAACgD,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjEA;MAAMD,S;AAmEN,eAAerC,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Swal from \"sweetalert2\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as passWordAction } from \"../redux/modules/user\";\nimport { useParams } from \"react-router-dom\";\n\nconst uid = sessionStorage.getItem(\"uid\");\n\nconst Password = () => {\n  const dispatch = useDispatch();\n  const [password, setPassword] = useState(\"\");\n  const [newPassword, setnewPassWord] = useState(\"\");\n  const [checkPassWord, setCheckPassWord] = useState(\"\");\n\n  const [newPasswordRuleCheck, setNewPasswordRuleCheck] = React.useState(false);\n\n  const Pass = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const NewPass = (e) => {\n    const rule = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{4,10}$/;\n    const newPassword = e.target.value;\n    setnewPassWord(newPassword);\n    rule.test(newPassword)\n      ? setNewPasswordRuleCheck(true)\n      : setNewPasswordRuleCheck(false);\n    console.log(newPasswordRuleCheck);\n  };\n\n  const CheckPass = (e) => {\n    setCheckPassWord(e.target.value);\n    console.log(checkPassWord);\n  };\n\n  /////////////////입력한 현재비밀번호가 맞는지 확인해야함\n  const NewPassWord = () => {\n    if (password === newPassword) {\n      Swal.fire(\"\", \"새비밀번호가 현재비밀번호와 동일합니다.\", \"error\");\n      return;\n    } else if (newPasswordRuleCheck === false) {\n      Swal.fire(\"\", \"새비밀번호 형식이 맞지않습니다.\", \"error\");\n      return;\n    } else if (newPassword !== checkPassWord) {\n      Swal.fire(\"\", \"입력하신 새비밀번호가 일치하지않습니다.\", \"error\");\n      return;\n    } else {\n      Swal.fire({\n        title: \"수정하시겠습니까?\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"네 수정하겠습니다.\",\n        confirmButtonColor: \"#7966FF\",\n        cancelButtonText: \"아니오\",\n        cancelTextColor: \"#7966FF\",\n      }).then((result) => {\n        if (result.isConfirmed) {\n          dispatch(\n            passWordAction.NewPassWordDB(\n              uid,\n              password,\n              newPassword,\n              checkPassWord\n            )\n          );\n          Swal.fire(\"\", \"수정 되었습니다.\", \"success\");\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n          Swal.fire(\"\", \"수정이 취소 되었습니다 :)\", \"error\");\n        }\n      });\n    }\n  };\n\n  return (\n    <Container>\n      <div className='title'>비밀번호 재설정</div>\n      <div className='user'>\n        <div className='inputBox'>\n          <div>\n            <input\n              type='password'\n              placeholder='현재 비밀번호'\n              onChange={Pass}\n            />\n          </div>\n\n          <div>\n            <input\n              type='password'\n              placeholder='새로운 비밀번호'\n              onChange={NewPass}\n            />\n            {newPassword.length > 0 && !newPasswordRuleCheck && (\n              <span className='rule'>\n                *영문 숫자 조합 4자 이상 입력해주세요.\n              </span>\n            )}\n          </div>\n\n          <div>\n            <input\n              type='password'\n              placeholder='새로운 비밀번호 재확인'\n              onChange={CheckPass}\n            />\n            {checkPassWord.length > 0 && checkPassWord !== newPassword && (\n              <span className='rule'>*일치하지않는 비밀번호입니다.</span>\n            )}\n          </div>\n\n          <button onClick={NewPassWord}>저장하기</button>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  width: 1440px;\n  height: 830px;\n  margin: auto;\n  > div.title {\n    width: 160px;\n    height: 35px;\n    font-size: 24px;\n    font-weight: 600;\n  }\n  > div.user {\n    width: 500px;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: auto;\n    > div.inputBox {\n      width: 500px;\n      height: 312px;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-evenly;\n      div {\n        width: 100%;\n        height: 72px;\n        display: flex;\n        flex-direction: column;\n        position: relative;\n        justify-content: end;\n        background-color: #f9f8ff;\n        border-radius: 0.5rem;\n        padding: 15px;\n        > span.rule {\n          color: red;\n          font-size: 12px;\n          position: absolute;\n          justify-content: start;\n          padding-left: 15px;\n        }\n        > input {\n          width: 100%;\n          height: 72px;\n          border-radius: 0.5rem;\n          font-size: 16px;\n          font-weight: 600;\n          outline: 0;\n          background-color: #f9f8ff;\n        }\n      }\n      > input {\n        width: 500px;\n        height: 72px;\n        border-radius: 0.5rem;\n        background-color: #f9f8ff;\n      }\n      > button {\n        width: 500px;\n        height: 72px;\n        color: #f9f8ff;\n        background-color: #7966ff;\n        border-radius: 0.5rem;\n      }\n    }\n  }\n`;\n\nexport default Password;\n"]},"metadata":{},"sourceType":"module"}