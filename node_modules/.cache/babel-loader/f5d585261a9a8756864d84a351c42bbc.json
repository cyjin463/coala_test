{"ast":null,"code":"var _jsxFileName = \"/Users/cyj/sun/src/shared/InfinityScroll.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfinityScroll = props => {\n  _s();\n\n  const {\n    children,\n    callNext,\n    is_next = true,\n    loading\n  } = props;\n\n  const _handleScroll = _.throttle(() => {\n    if (loading) {\n      return;\n    }\n\n    const {\n      innerHeight\n    } = window;\n    const {\n      scrollHeight\n    } = document.body;\n    const scrollTop = document.documentElement && document.documentElement.scrollTop || document.body.scrollTop;\n\n    if (scrollHeight - innerHeight - scrollTop < 100) {\n      callNext();\n    }\n  }, 300);\n\n  const handleScroll = React.useCallback(_handleScroll, [loading]);\n  React.useEffect(() => {\n    if (loading) {\n      return;\n    }\n\n    if (is_next) {\n      window.addEventListener(\"scroll\", handleScroll);\n    } else {\n      window.removeEventListener(\"scroll\", handleScroll);\n    }\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [is_next, loading]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n};\n\n_s(InfinityScroll, \"8BseBLutViIVp8ya6fspMHeE7wM=\");\n\n_c = InfinityScroll;\nInfinityScroll.defatultProps = {\n  children: null,\n  callNext: () => {},\n  is_next: false,\n  loading: false\n};\nexport default InfinityScroll;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfinityScroll\");","map":{"version":3,"sources":["/Users/cyj/sun/src/shared/InfinityScroll.js"],"names":["React","_","InfinityScroll","props","children","callNext","is_next","loading","_handleScroll","throttle","innerHeight","window","scrollHeight","document","body","scrollTop","documentElement","handleScroll","useCallback","useEffect","addEventListener","removeEventListener","defatultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,OAAO,GAAG,IAAhC;AAAsCC,IAAAA;AAAtC,MAAkDJ,KAAxD;;AAEA,QAAMK,aAAa,GAAGP,CAAC,CAACQ,QAAF,CAAW,MAAM;AACrC,QAAIF,OAAJ,EAAa;AACX;AACD;;AACD,UAAM;AAAEG,MAAAA;AAAF,QAAkBC,MAAxB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAmBC,QAAQ,CAACC,IAAlC;AACA,UAAMC,SAAS,GACZF,QAAQ,CAACG,eAAT,IAA4BH,QAAQ,CAACG,eAAT,CAAyBD,SAAtD,IACAF,QAAQ,CAACC,IAAT,CAAcC,SAFhB;;AAIA,QAAIH,YAAY,GAAGF,WAAf,GAA6BK,SAA7B,GAAyC,GAA7C,EAAkD;AAChDV,MAAAA,QAAQ;AACT;AACF,GAbqB,EAanB,GAbmB,CAAtB;;AAeA,QAAMY,YAAY,GAAGjB,KAAK,CAACkB,WAAN,CAAkBV,aAAlB,EAAiC,CAACD,OAAD,CAAjC,CAArB;AAEAP,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpB,QAAIZ,OAAJ,EAAa;AACX;AACD;;AAED,QAAID,OAAJ,EAAa;AACXK,MAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCH,YAAlC;AACD,KAFD,MAEO;AACLN,MAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCJ,YAArC;AACD;;AAED,WAAO,MAAM;AACXN,MAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCJ,YAArC;AACD,KAFD;AAGD,GAdD,EAcG,CAACX,OAAD,EAAUC,OAAV,CAdH;AAeA,sBAAO,QAAC,KAAD,CAAO,QAAP;AAAA,cAAiBH;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CApCD;;GAAMF,c;;KAAAA,c;AAsCNA,cAAc,CAACoB,aAAf,GAA+B;AAC7BlB,EAAAA,QAAQ,EAAE,IADmB;AAE7BC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFW;AAG7BC,EAAAA,OAAO,EAAE,KAHoB;AAI7BC,EAAAA,OAAO,EAAE;AAJoB,CAA/B;AAOA,eAAeL,cAAf","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\n\nconst InfinityScroll = (props) => {\n  const { children, callNext, is_next = true, loading } = props;\n\n  const _handleScroll = _.throttle(() => {\n    if (loading) {\n      return;\n    }\n    const { innerHeight } = window;\n    const { scrollHeight } = document.body;\n    const scrollTop =\n      (document.documentElement && document.documentElement.scrollTop) ||\n      document.body.scrollTop;\n\n    if (scrollHeight - innerHeight - scrollTop < 100) {\n      callNext();\n    }\n  }, 300);\n\n  const handleScroll = React.useCallback(_handleScroll, [loading]);\n\n  React.useEffect(() => {\n    if (loading) {\n      return;\n    }\n\n    if (is_next) {\n      window.addEventListener(\"scroll\", handleScroll);\n    } else {\n      window.removeEventListener(\"scroll\", handleScroll);\n    }\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [is_next, loading]);\n  return <React.Fragment>{children}</React.Fragment>;\n};\n\nInfinityScroll.defatultProps = {\n  children: null,\n  callNext: () => {},\n  is_next: false,\n  loading: false,\n};\n\nexport default InfinityScroll;\n"]},"metadata":{},"sourceType":"module"}